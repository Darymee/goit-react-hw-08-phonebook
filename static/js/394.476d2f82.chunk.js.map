{"version":3,"file":"static/js/394.476d2f82.chunk.js","mappings":"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","sources":["components/UI/Button/Button.styled.js","components/UI/Button/Button.jsx","components/UI/Title/Title.styled.js","components/UI/Title/Title.jsx","components/UI/Wrapper/Wrapper.styled.js","components/UI/Wrapper/Wrapper.jsx","redux/contacts/contactsSelectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactListItem/ContactListItem.styled.js","components/ContactListItem/ContactListItem.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/UI/Message/Message.styled.js","components/UI/Message/Message.jsx","components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.jsx","components/ModalEdit/ModalEdit.styled.js","components/ModalEdit/ModalEdit.jsx","components/ContactBook/ContactBook.jsx","pages/Contacts/Contaсts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Btn = styled.button`\n  font-family: inherit;\n  font-weight: 700;\n  font-size: 20px;\n\n  cursor: pointer;\n  min-width: 120px;\n  padding: 10px 15px;\n  background-color: rgba(0, 0, 0, 0.6);\n\n  border-radius: 5px;\n  margin: 0 auto;\n  border: none;\n  transition: color 300ms cubic-bezier(0.445, 0.05, 0.55, 0.95),\n    transform 300ms cubic-bezier(0.445, 0.05, 0.55, 0.95);\n  &:focus,\n  &:hover {\n    color: #fff;\n    transform: scale(0.9);\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { Btn } from './Button.styled';\n\nexport const Button = ({ text }) => <Btn>{text}</Btn>;\n\nButton.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const MainTitle = styled.h1`\n  font-size: ${p => {\n    if (!p.size) {\n      return '35px';\n    }\n    return p.size;\n  }};\n\n  margin-bottom: ${p => {\n    if (!p.mb) {\n      return '35px';\n    }\n    return p.mb;\n  }};\n  text-align: center;\n  color: #fff;\n`;\n","import PropTypes from 'prop-types';\n\nimport { MainTitle } from './Title.styled';\n\nexport const Title = ({ text, size, mb }) => (\n  <MainTitle size={size} mb={mb}>\n    {text}\n  </MainTitle>\n);\n\nTitle.propTypes = {\n  text: PropTypes.string.isRequired,\n  size: PropTypes.string,\n  mb: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nexport const Wrapp = styled.div`\n  width: ${p => p.width};\n  height: ${p => p.height};\n\n  margin: ${p => {\n    if (!p.mr) {\n      return '150px auto';\n    }\n    return p.mr;\n  }};\n  padding: ${p => {\n    if (!p.pd) {\n      return '40px';\n    }\n    return p.pd;\n  }};\n\n  min-width: ${p => {\n    if (!p.minw) {\n      return;\n    }\n    return p.minw;\n  }};\n\n  background-color: rgba(0, 0, 0, 0.3);\n  box-shadow: 1px 7px 38px -11px rgba(0, 0, 0, 0.84);\n  border: 1px rgba(0, 0, 0, 0.6) solid;\n`;\n","import PropTypes from 'prop-types';\n\nimport { Wrapp } from './Wrapper.styled';\n\nexport const Wrapper = ({ children, width, heigth, mr, pd, minw }) => (\n  <Wrapp width={width} heigth={heigth} mr={mr} pd={pd} minw={minw}>\n    {children}\n  </Wrapp>\n);\n\nWrapper.propTypes = {\n  width: PropTypes.string,\n  heigth: PropTypes.string,\n  mr: PropTypes.string,\n  pd: PropTypes.string,\n  minw: PropTypes.string,\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectFilteredContact = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const normalizedValue = !filter ? '' : filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedValue)\n    );\n  }\n);\n","import styled from 'styled-components';\n\nimport PhoneInput from 'react-phone-number-input';\nimport 'react-phone-number-input/style.css';\n\nexport const FormWrap = styled.div`\n  margin: 20px auto;\n  border: 1px solid black;\n  padding: 30px;\n  background-color: rgba(0, 0, 0, 0.3);\n  box-shadow: 10px 10px 53px -22px rgba(0, 0, 0, 0.75);\n  width: 300px;\n  margin-bottom: 30px;\n  box-shadow: 10px 10px 108px 32px rgba(71, 71, 71, 0.79);\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const InputWrap = styled.div`\n  position: relative;\n  margin-bottom: 30px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  & > svg {\n    margin-right: 18px;\n\n    width: 28px;\n    height: 28px;\n\n    top: 50%;\n    left: 7px;\n\n    color: white;\n  }\n`;\n\nexport const Input = styled.input`\n  font-size: 18px;\n\n  font-family: inherit;\n\n  background-color: rgba(0, 0, 0, 0.3);\n  color: white;\n  padding-left: 15px;\n\n  display: block;\n\n  width: 100%;\n  height: 30px;\n  border-radius: 5px;\n  &::placeholder {\n    color: white;\n  }\n\n  transition: background-color 300ms cubic-bezier(0.175, 0.885, 0.32, 1.275);\n  &:hover,\n  &:focus {\n    background-color: rgba(0, 0, 0, 0.6);\n  }\n`;\n\nexport const NumberInput = styled(PhoneInput)`\n  margin-bottom: 30px;\n  font-family: inherit;\n  & input {\n    color: white;\n    font-size: 18px;\n\n    background-color: rgba(0, 0, 0, 0.3);\n\n    padding-left: 15px;\n\n    height: 30px;\n    border-radius: 5px;\n    transition: border-color 300ms cubic-bezier(0.175, 0.885, 0.32, 1.275);\n    &:hover,\n    &:focus {\n      background-color: rgba(0, 0, 0, 0.6);\n    }\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { motion } from 'framer-motion';\nimport { toast } from 'react-toastify';\nimport { TbUserPlus } from 'react-icons/tb';\n\nimport { addContact } from 'redux/contacts/contactsOperations';\nimport { selectContacts } from 'redux/contacts/contactsSelectors';\n\nimport { Button } from 'components/UI/Button/Button';\nimport { Title } from 'components/UI/Title/Title';\n\nimport {\n  FormWrap,\n  Form,\n  InputWrap,\n  Input,\n  NumberInput,\n} from './ContactForm.styled';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    for (const contact of contacts) {\n      if (contact.name.toLowerCase() === name.toLowerCase()) {\n        toast.warning(`${name} is already in contacts`, {\n          position: toast.POSITION.TOP_RIGHT,\n          theme: 'colored',\n          pauseOnHover: true,\n        });\n      }\n    }\n    dispatch(addContact({ name, number }));\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <FormWrap>\n      <motion.div\n        initial={{ opacity: 0, scale: 0.5 }}\n        animate={{ opacity: 1, scale: 1 }}\n        transition={{ duration: 0.7 }}\n      >\n        <Title text={'Create new contact'} size={'25px'} mb={'20px'} />\n        <Form onSubmit={handleSubmit}>\n          <InputWrap>\n            <TbUserPlus />\n            <Input\n              placeholder=\"Enter contact name\"\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              onChange={e => {\n                setName(e.currentTarget.value);\n              }}\n              value={name}\n              required\n            />\n          </InputWrap>\n\n          <NumberInput\n            defaultCountry=\"UA\"\n            onChange={value => {\n              if (!value) {\n                return;\n              }\n              setNumber(value);\n            }}\n            region=\"Europe\"\n            title=\"Number\"\n            type=\"tel\"\n            name=\"number\"\n            international\n            maxLength=\"16\"\n            value={number}\n            required\n          />\n\n          <Button type=\"submit\" text={'Add contact'} />\n        </Form>\n      </motion.div>\n    </FormWrap>\n  );\n};\n","import styled from 'styled-components';\n\nexport const TableCell = styled.td`\n  color: white;\n  font-size: 18px;\n  font-weight: 600;\n\n  padding-bottom: 15px;\n  padding-right: 15px;\n  & svg {\n    width: 25px;\n    height: 25px;\n    stroke: white;\n  }\n`;\n\nexport const BtnTool = styled.button`\n  cursor: pointer;\n\n  display: block;\n  margin: 0 auto;\n  padding: 5px 10px;\n\n  background-color: transparent;\n  border-radius: 5px;\n  border: none;\n\n  transition: background-color 300ms cubic-bezier(0.445, 0.05, 0.55, 0.95),\n    transform 300ms cubic-bezier(0.445, 0.05, 0.55, 0.95);\n\n  &:hover,\n  &:focus {\n    background-color: rgba(0, 0, 0, 0.6);\n    transform: scale(0.9);\n  }\n\n  & svg {\n    width: 25px;\n    height: 25px;\n    stroke: white;\n  }\n`;\n","import { useDispatch } from 'react-redux';\n\nimport { TbTrash, TbPencil, TbUser } from 'react-icons/tb';\n\nimport { deleteContact } from 'redux/contacts/contactsOperations';\n\nimport { TableCell, BtnTool } from './ContactListItem.styled';\n\nexport const ContactListItem = ({ name, number, id, toggleModal, getInfo }) => {\n  const dispatch = useDispatch();\n  const onDelete = () => dispatch(deleteContact(id));\n\n  const sendInfo = () => {\n    const contact = { id, name, number };\n    toggleModal();\n    getInfo(contact);\n  };\n\n  return (\n    <tr>\n      <TableCell>\n        <TbUser />\n      </TableCell>\n      <TableCell>{name}</TableCell>\n      <TableCell>{number}</TableCell>\n      <TableCell>\n        <BtnTool type=\"button\" onClick={sendInfo}>\n          <TbPencil />\n        </BtnTool>\n      </TableCell>\n      <TableCell>\n        <BtnTool type=\"button\" onClick={onDelete}>\n          <TbTrash />\n        </BtnTool>\n      </TableCell>\n    </tr>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterWrap = styled.div`\n  display: flex;\n`;\n\nexport const FilterInput = styled.input`\n  display: block;\n\n  padding-left: 10px;\n  margin-bottom: 20px;\n\n  width: 100%;\n  height: 30px;\n  background-color: rgba(0, 0, 0, 0.3);\n  color: white;\n\n  border-radius: 5px;\n\n  font-size: 18px;\n\n  font-family: inherit;\n  font-weight: 600;\n\n  transition: background-color 300ms cubic-bezier(0.175, 0.885, 0.32, 1.275);\n  &:hover,\n  &:focus {\n    background-color: rgba(0, 0, 0, 0.6);\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { selectFilter } from 'redux/contacts/contactsSelectors';\nimport { getFilteredContacts } from 'redux/contacts/slices/filtersSlice.js';\n\nimport { FilterInput, FilterWrap } from './Filter.styled';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const onChange = event => {\n    const value = event.target.value.trim();\n\n    dispatch(getFilteredContacts(value));\n  };\n\n  return (\n    <FilterWrap>\n      <FilterInput\n        onChange={onChange}\n        name=\"filter\"\n        type=\"filter\"\n        value={filter}\n      ></FilterInput>\n    </FilterWrap>\n  );\n};\n","import styled from 'styled-components';\n\nexport const MessageText = styled.p`\n  font-size: 20px;\n  font-weight: 600;\n  text-align: center;\n\n  color: #fff;\n`;\n","import PropTypes from 'prop-types';\n\nimport { MessageText } from './Message.styled';\n\nexport const Message = ({ text }) => <MessageText>{text}</MessageText>;\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Table = styled.table`\n  width: 100%;\n`;\n\nexport const TableHead = styled.th`\n  color: white;\n  font-size: 20px;\n  text-align: left;\n  padding-bottom: 15px;\n  min-width: 20px;\n`;\n","import PropTypes from 'prop-types';\n\nimport { useSelector } from 'react-redux';\n\nimport { motion } from 'framer-motion';\n\nimport { selectFilteredContact } from 'redux/contacts/contactsSelectors';\n\nimport { ContactListItem } from 'components/ContactListItem/ContactListItem.jsx';\nimport { Filter } from 'components/Filter/Filter.jsx';\nimport { Title } from 'components/UI/Title/Title.jsx';\nimport { Wrapper } from 'components/UI/Wrapper/Wrapper.jsx';\nimport { Message } from 'components/UI/Message/Message.jsx';\n\nimport { Table, TableHead } from './ContactsList.styled.js';\n\nexport const ContactsList = ({ toggleModal, getInfo }) => {\n  const filteredContacts = useSelector(selectFilteredContact);\n\n  return (\n    <Wrapper mr={'40px auto'} pd={'20px'} minw={'480px'}>\n      <motion.div\n        initial={{ opacity: 0, scale: 0.5 }}\n        animate={{ opacity: 1, scale: 1 }}\n        transition={{ duration: 0.7 }}\n      >\n        <Title text={'Contacts list'} size={'25px'} mb={'20px'} />\n        <Filter />\n        {!filteredContacts.length ? (\n          <Message text={'No results'} />\n        ) : (\n          <Table>\n            <thead>\n              <tr>\n                <TableHead></TableHead>\n                <TableHead>Name</TableHead>\n                <TableHead>Number</TableHead>\n                <TableHead>Edit</TableHead>\n                <TableHead>Remove</TableHead>\n              </tr>\n            </thead>\n            <tbody>\n              {filteredContacts.map(({ id, name, number }) => (\n                <ContactListItem\n                  key={id}\n                  id={id}\n                  name={name}\n                  number={number}\n                  toggleModal={toggleModal}\n                  getInfo={getInfo}\n                />\n              ))}\n            </tbody>\n          </Table>\n        )}\n      </motion.div>\n    </Wrapper>\n  );\n};\nContactsList.propTypes = {\n  toggleModal: PropTypes.func.isRequired,\n  getInfo: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nimport PhoneInput from 'react-phone-number-input';\nimport 'react-phone-number-input/style.css';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.3);\n  z-index: 1200;\n`;\n\nexport const ModalWindow = styled.div`\n  width: 300px;\n\n  padding: 40px;\n  background-color: rgba(0, 0, 0, 0.8);\n  border: 1px solid black;\n\n  position: relative;\n`;\n\nexport const BtnClose = styled.button`\n  cursor: pointer;\n\n  display: block;\n\n  padding: 5px 10px;\n  background-color: transparent;\n  position: absolute;\n  top: 0;\n  right: 0;\n  border: none;\n  border-radius: 5px;\n  transition: background-color 300ms cubic-bezier(0.445, 0.05, 0.55, 0.95),\n    transform 300ms cubic-bezier(0.445, 0.05, 0.55, 0.95);\n\n  & svg {\n    width: 30px;\n    height: 30px;\n    fill: white;\n  }\n  &:hover,\n  &:focus {\n    background-color: rgba(0, 0, 0, 0.6);\n    transform: scale(0.9);\n  }\n`;\n\nexport const InputWrapp = styled.div`\n  height: 45px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  margin-bottom: 30px;\n\n  & > svg {\n    top: -50px;\n    left: -31px;\n    width: 30px;\n    height: 30px;\n    stroke: white;\n    margin-right: 15px;\n  }\n`;\n\nexport const Input = styled.input`\n  width: -webkit-fill-available;\n\n  font-size: 18px;\n\n  font-family: inherit;\n\n  background-color: rgba(0, 0, 0, 0.3);\n  color: white;\n  outline: white;\n\n  padding-left: 15px;\n\n  display: block;\n\n  height: 30px;\n  border-radius: 5px;\n\n  transition: border-color 300ms cubic-bezier(0.175, 0.885, 0.32, 1.275),\n    background-color 300ms cubic-bezier(0.175, 0.885, 0.32, 1.275);\n\n  &:hover,\n  &:focus {\n    background-color: rgba(0, 0, 0, 0.6);\n    border-bottom: 1px solid white;\n  }\n`;\n\nexport const NumberInput = styled(PhoneInput)`\n  margin-bottom: 30px;\n  font-family: inherit;\n\n  & input {\n    color: white;\n    font-size: 18px;\n\n    background-color: rgba(0, 0, 0, 0.3);\n\n    padding-left: 15px;\n\n    height: 30px;\n    border-radius: 5px;\n    transition: background-color 300ms cubic-bezier(0.175, 0.885, 0.32, 1.275);\n    &:hover,\n    &:focus {\n      background-color: rgba(0, 0, 0, 0.6);\n    }\n  }\n`;\n\nexport const BtnSubmit = styled.button`\n  cursor: pointer;\n\n  display: block;\n  padding: 5px 10px;\n\n  background-color: transparent;\n  margin: 0 auto;\n  border-radius: 5px;\n\n  border: none;\n  transition: transform 300ms cubic-bezier(0.175, 0.885, 0.32, 1.275),\n    background-color 300ms cubic-bezier(0.175, 0.885, 0.32, 1.275),\n    padding 300ms cubic-bezier(0.175, 0.885, 0.32, 1.275);\n\n  &:hover,\n  &:focus {\n    transform: scale(0.9);\n\n    background-color: rgba(0, 0, 0, 0.6);\n  }\n\n  & svg {\n    width: 30px;\n    height: 30px;\n    stroke: white;\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { toast } from 'react-toastify';\nimport { motion } from 'framer-motion';\n\nimport { TbCheck, TbUserSearch } from 'react-icons/tb';\nimport { MdOutlineClose } from 'react-icons/md';\n\nimport { editContact } from 'redux/contacts/contactsOperations';\n\nimport { Title } from 'components/UI/Title/Title';\n\nimport {\n  Backdrop,\n  ModalWindow,\n  BtnClose,\n  InputWrapp,\n  Input,\n  NumberInput,\n  BtnSubmit,\n} from './ModalEdit.styled';\n\nexport const ModalEdit = ({ onClose, toggle, info }) => {\n  const [name, setName] = useState(info.name);\n  const [number, setNumber] = useState(info.number);\n\n  const dispatch = useDispatch();\n\n  const onBackdropClick = e => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (name === info.name && number === info.number) {\n      toast.info(`Edit name or number`, {\n        position: toast.POSITION.TOP_RIGHT,\n        theme: 'colored',\n        pauseOnHover: true,\n      });\n      return;\n    }\n\n    dispatch(editContact({ id: info.id, name, number }));\n    onClose();\n  };\n\n  return (\n    <>\n      {toggle && (\n        <Backdrop onClick={onBackdropClick}>\n          <motion.div\n            initial={{ opacity: 0, scale: 0.5 }}\n            animate={{ opacity: 1, scale: 1 }}\n            transition={{ duration: 0.7 }}\n          >\n            <ModalWindow>\n              <BtnClose type=\"button\" onClick={onClose}>\n                <MdOutlineClose />\n              </BtnClose>\n              <Title text={'Edit contact'} size={'25px'} mb={'20px'} />\n              <form onSubmit={handleSubmit}>\n                <InputWrapp>\n                  <TbUserSearch />\n                  <Input\n                    type=\"text\"\n                    name=\"name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    value={name}\n                    onChange={e => {\n                      setName(e.currentTarget.value);\n                    }}\n                    required\n                  />\n                </InputWrapp>\n                <NumberInput\n                  defaultCountry=\"UA\"\n                  onChange={value => {\n                    if (!value) {\n                      return;\n                    }\n                    setNumber(value);\n                  }}\n                  region=\"Europe\"\n                  title=\"Number\"\n                  type=\"tel\"\n                  name=\"number\"\n                  international\n                  maxLength=\"16\"\n                  value={number}\n                  required\n                />\n                <BtnSubmit type=\"submit\">\n                  <TbCheck />\n                </BtnSubmit>\n              </form>\n            </ModalWindow>\n          </motion.div>\n        </Backdrop>\n      )}\n    </>\n  );\n};\n\nModalEdit.propTypes = {\n  toggle: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  info: PropTypes.objectOf(PropTypes.string).isRequired,\n};\n","import { useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport {\n  selectContacts,\n  selectIsLoading,\n} from 'redux/contacts/contactsSelectors';\n\nimport { Loader } from 'components/Loader';\nimport { ContactsList } from 'components/ContactsList/ContactsList.jsx';\nimport { ModalEdit } from 'components/ModalEdit/ModalEdit.jsx';\nimport { Message } from 'components/UI/Message/Message.jsx';\n\nexport const ContactBook = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [contactInfo, setContactInfo] = useState(null);\n\n  const contacts = useSelector(selectContacts);\n\n  const isLoading = useSelector(selectIsLoading);\n\n  const toggleModal = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const getInfo = info => {\n    setContactInfo(info);\n  };\n  return (\n    <>\n      {isLoading && <Loader />}\n      {!contacts.length ? (\n        <Message text={'No contacts yet. Add your first contact'} />\n      ) : (\n        <ContactsList getInfo={getInfo} toggleModal={toggleModal} />\n      )}\n\n      {isOpen && (\n        <ModalEdit onClose={toggleModal} toggle={isOpen} info={contactInfo} />\n      )}\n    </>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { fetchContacts } from 'redux/contacts/contactsOperations';\n\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactBook } from 'components/ContactBook/ContactBook';\nimport { selectIsLoggedIn } from 'redux/auth/authSelectors';\n\nconst Contacts = () => {\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!isLoggedIn) {\n      return;\n    }\n    dispatch(fetchContacts());\n  }, [dispatch, isLoggedIn]);\n\n  return (\n    <>\n      <ContactForm />\n      <ContactBook />\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["Btn","styled","Button","text","MainTitle","p","size","mb","Title","Wrapp","width","height","mr","pd","minw","Wrapper","children","heigth","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectFilter","filter","selectFilteredContact","createSelector","normalizedValue","toLowerCase","contact","name","includes","FormWrap","Form","InputWrap","Input","NumberInput","PhoneInput","ContactForm","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","reset","motion","initial","opacity","scale","animate","transition","duration","onSubmit","event","preventDefault","toast","position","theme","pauseOnHover","addContact","placeholder","type","pattern","title","onChange","e","currentTarget","value","required","defaultCountry","region","international","maxLength","TableCell","BtnTool","ContactListItem","id","toggleModal","getInfo","onClick","deleteContact","FilterWrap","FilterInput","Filter","target","trim","getFilteredContacts","MessageText","Message","Table","TableHead","ContactsList","filteredContacts","length","map","Backdrop","ModalWindow","BtnClose","InputWrapp","BtnSubmit","ModalEdit","onClose","toggle","info","editContact","ContactBook","isOpen","setIsOpen","contactInfo","setContactInfo","Loader","isLoggedIn","selectIsLoggedIn","useEffect","fetchContacts"],"sourceRoot":""}