{"version":3,"file":"static/js/746.4a1b1c8e.chunk.js","mappings":"qLAmBO,IAAIA,EAA8B,qBAAXC,OCiB9B,EApBe,SAAUC,EAAOC,GAC5B,IAAIC,GAAKC,EAAAA,EAAAA,UAfS,SAAUH,EAAOC,GAEnC,YAAqBG,IAAjBH,EACOA,IAEPH,GACOC,OAAOM,WAAWL,GAAOM,OAOvC,CAEqBC,CAAgBP,EAAOC,IAAgBO,EAAQN,EAAG,GAAIO,EAAWP,EAAG,GAiBtF,OAhBAQ,EAAAA,EAAAA,YAAU,WACN,IAAIC,GAAU,EACVC,EAAMb,OAAOM,WAAWL,GACxBa,EAAW,WACNF,GAGLF,IAAWG,EAAIN,QAClB,EAGD,OAFAM,EAAIE,YAAYD,GAChBJ,EAASG,EAAIN,SACN,WACHK,GAAU,EACVC,EAAIG,eAAeF,EACtB,CACJ,GAAE,CAACb,IACGQ,CACV,C,sBCnCc,SAASQ,EAAuBC,EAASC,GAItD,OAHKA,IACHA,EAAMD,EAAQE,MAAM,IAEfC,OAAOC,OAAOD,OAAOE,iBAAiBL,EAAS,CACpDC,IAAK,CACHK,MAAOH,OAAOC,OAAOH,MAG3B,C,8GCJMM,GAAsBC,EAAAA,EAAAA,eAAc,CACtCC,mBAAoB,SAACC,GAAD,OAAOA,CAAP,EACpBC,UAAU,EACVC,cAAe,UCNbC,GAAgBL,EAAAA,EAAAA,eAAc,CAAC,GCGrC,IAAMM,GAAkBN,EAAAA,EAAAA,eAAc,MCLhC3B,EAAgC,qBAAbkC,SCGnBC,EAA4BnC,EAAYoC,EAAAA,gBAAkBxB,EAAAA,UCD1DyB,GAAcV,EAAAA,EAAAA,eAAc,CAAEW,QAAQ,ICK5C,SAASC,EAAiBC,EAAWC,EAAaC,EAAOC,GACrD,IAAMC,GLJCC,EAAAA,EAAAA,YAAWb,GAAec,cKK3BC,GAAcF,EAAAA,EAAAA,YAAWR,GACzBW,GAAkBH,EAAAA,EAAAA,YAAWZ,GAC7BgB,GAAsBJ,EAAAA,EAAAA,YAAWnB,GAAqBK,cACtDmB,GAAmBC,EAAAA,EAAAA,UAIzBR,EAAsBA,GAAuBI,EAAYK,UACpDF,EAAiBG,SAAWV,IAC7BO,EAAiBG,QAAUV,EAAoBH,EAAW,CACtDC,YAAAA,EACAG,OAAAA,EACAF,MAAAA,EACAY,WAAYN,EAAkBA,EAAgBO,QAAKjD,EACnDkD,wBAAuBR,IACW,IAA5BA,EAAgBS,QAEtBR,oBAAAA,KAGR,IAAMH,EAAgBI,EAAiBG,QAUvC,OATAlB,GAA0B,WACtBW,GAAiBA,EAAcY,QAClC,KACD9C,EAAAA,EAAAA,YAAU,WACFkC,GAAiBA,EAAca,gBAC/Bb,EAAca,eAAeC,gBAEpC,IACDzB,GAA0B,kBAAM,kBAAMW,GAAiBA,EAAce,OAAO,UAA5C,CAAN,GAA8D,IACjFf,CACV,CCxCD,SAASgB,EAAYC,GACjB,MAAuB,kBAARA,GACXzC,OAAO0C,UAAUC,eAAeC,KAAKH,EAAK,UACjD,CCAD,SAASI,EAAeC,GACpB,MAAoB,kBAANA,GAAkBC,MAAMC,QAAQF,EACjD,CCLD,SAASG,EAAoBH,GACzB,MAAoB,kBAANA,GAAqC,oBAAZA,EAAEI,KAC5C,CCCD,IAAMC,EAAe,CACjB,UACA,UACA,OACA,aACA,YACA,WACA,aACA,eAEJ,SAASC,EAAsBhC,GAC3B,OAAQ6B,EAAoB7B,EAAMiC,UAC9BF,EAAaG,MAAK,SAACC,GAAD,OAAUV,EAAezB,EAAMmC,GAA/B,GACzB,CACD,SAASC,EAAcpC,GACnB,OAAOqC,QAAQL,EAAsBhC,IAAUA,EAAMsC,SACxD,CCfD,SAASC,EAAuBvC,GAC5B,MCFJ,SAAgCA,EAAOwC,GACnC,GAAIR,EAAsBhC,GAAQ,CAC9B,IAAQe,EAAqBf,EAArBe,QAASkB,EAAYjC,EAAZiC,QACjB,MAAO,CACHlB,SAAqB,IAAZA,GAAqBU,EAAeV,GACvCA,OACAnD,EACNqE,QAASR,EAAeQ,GAAWA,OAAUrE,EAEpD,CACD,OAAyB,IAAlBoC,EAAMyC,QAAoBD,EAAU,CAAC,CAC/C,CDTgCE,CAAuB1C,GAAOG,EAAAA,EAAAA,YAAWb,IAA9DyB,EAAR,EAAQA,QAASkB,EAAjB,EAAiBA,QACjB,OAAOU,EAAAA,EAAAA,UAAQ,iBAAO,CAAE5B,QAAAA,EAASkB,QAAAA,EAAlB,GAA8B,CAACW,EAA0B7B,GAAU6B,EAA0BX,IAC/G,CACD,SAASW,EAA0BC,GAC/B,OAAOlB,MAAMC,QAAQiB,GAAQA,EAAKC,KAAK,KAAOD,CACjD,CEVD,IAAME,EAAmB,SAACC,GAAD,MAAgB,CACrCC,UAAW,SAACjD,GAAD,OAAWgD,EAAUd,MAAK,SAACC,GAAD,QAAYnC,EAAMmC,EAAlB,GAA1B,EADU,EAGnBe,EAAqB,CACvBC,cAAeJ,EAAiB,CAAC,SAAU,WAAY,SACvDK,UAAWL,EAAiB,CACxB,UACA,OACA,WACA,aACA,WACA,aACA,YACA,gBAEJM,KAAMN,EAAiB,CAAC,SACxBO,KAAMP,EAAiB,CAAC,OAAQ,iBAChCQ,MAAOR,EAAiB,CAAC,eACzBS,MAAOT,EAAiB,CAAC,aAAc,eAAgB,eACvDU,IAAKV,EAAiB,CAAC,WAAY,QAAS,aAAc,gBAC1DW,IAAKX,EAAiB,CAClB,QACA,aACA,oBACA,aAEJY,OAAQZ,EAAiB,CACrB,cACA,kBACA,qBCpBR,SAASa,EAAYC,GACjB,IAAMxC,GAAMZ,EAAAA,EAAAA,QAAO,MAInB,OAHoB,OAAhBY,EAAIV,UACJU,EAAIV,QAAUkD,KAEXxC,EAAIV,OACd,CCVD,IAAMmD,EAAwB,CAK1BC,wBAAwB,EAKxBC,gBAAgB,GCZhBnD,EAAK,ECDT,IAAMoD,GAAqBhF,EAAAA,EAAAA,eAAc,CAAC,G,sCCApCiF,EAAAA,SAAAA,I,8IAIF,WACI,MAAiCC,KAAKnE,MAA9BI,EAAR,EAAQA,cAAeJ,EAAvB,EAAuBA,MAGvB,OAFII,GACAA,EAAcgE,SAASpE,GACpB,IACV,G,gCACD,WAAwB,G,oBACxB,WACI,OAAOmE,KAAKnE,MAAMqE,QACrB,K,EAbCH,CAA6BI,EAAAA,WCG7BC,GAA2BtF,EAAAA,EAAAA,eAAc,CAAC,GCL1CuF,EAAwBC,OAAOC,IAAI,yBC0BzC,SAASC,EAAT,GAA6I,IAA5GC,EAA4G,EAA5GA,kBAAmB3E,EAAyF,EAAzFA,oBAAqB4E,EAAoE,EAApEA,0BAA2BC,EAAyC,EAAzCA,UAAWC,EAA8B,EAA9BA,eAAgBjF,EAAc,EAAdA,UAC3H8E,GCzBJ,SAAsBI,GAClB,IAAK,IAAMC,KAAOD,EACF,8BAARC,EACA/B,EAAmB2B,0BAA4BG,EAASC,GAGxD/B,EAAmB+B,GAAKnF,UAAYkF,EAASC,EAGxD,CDgBwBC,CAAaN,GAuDlC,IAAMO,GAAsBC,EAAAA,EAAAA,aAtD5B,SAAyBpF,EAAOqF,GAC5B,IAAMC,GAAiB,2BAChBnF,EAAAA,EAAAA,YAAWnB,IACXgB,GAFa,IAGhBuF,SAAUC,EAAYxF,KAElBZ,EAAakG,EAAblG,SACJ4F,EAAW,KACTxC,EAAUD,EAAuBvC,GAYjCyF,EAAerG,OAAWxB,EL3C7BgG,GAAY,WACf,GAAIE,EAAsBE,eACtB,OAAOnD,GAEd,IK2CSd,EAAcgF,EAAe/E,EAAOZ,GAC1C,IAAKA,GAAY9B,EAAW,CAOxBkF,EAAQpC,cAAgBP,EAAiBC,EAAWC,EAAauF,EAAgBrF,GAKjF,IAAMyF,GAAiBvF,EAAAA,EAAAA,YAAWR,GAAaC,OACzC+F,GAA2BxF,EAAAA,EAAAA,YAAWoE,GACxC/B,EAAQpC,gBACR4E,EAAWxC,EAAQpC,cAAc8E,aAEjCI,EAAgBI,EAAgBd,EAAmBa,EAAcZ,GAC7D3B,EAAmB2B,0BAA2Bc,GAEzD,CAKD,OAAQC,EAAAA,cAAoB1B,EAAsB,CAAE9D,cAAeoC,EAAQpC,cAAeJ,MAAOsF,GAC7FN,EACAY,EAAAA,cAAoBtG,EAAcuG,SAAU,CAAE9G,MAAOyD,GAAWsC,EAAUhF,EAAWE,EAAOyF,EEzExG,SAAsB1F,EAAaK,EAAeiF,GAC9C,OAAOS,EAAAA,EAAAA,cAAY,SAACC,GAChBA,GAAYhG,EAAYiG,OAASjG,EAAYiG,MAAMD,GAC/C3F,IACA2F,EACM3F,EAAc4F,MAAMD,GACpB3F,EAAc6F,WAEpBZ,IAC2B,oBAAhBA,EACPA,EAAYU,GAEP3E,EAAYiE,KACjBA,EAAY1E,QAAUoF,GAGjC,GAMD,CAAC3F,GACJ,CFkDqH8F,CAAanG,EAAayC,EAAQpC,cAAeiF,GAActF,EAAaX,EAAUoD,EAAQpC,gBAC/M,IAGD,OADA+E,EAAoBX,GAAyB1E,EACtCqF,CACV,CACD,SAASK,EAAT,GAAmC,IAAZD,EAAY,EAAZA,SACbY,GAAgBhG,EAAAA,EAAAA,YAAW8D,GAAoBpD,GACrD,OAAOsF,QAA8BvI,IAAb2H,EAClBY,EAAgB,IAAMZ,EACtBA,CACT,CG3ED,SAASa,EAAkBC,GACvB,SAASC,EAAOxG,GAA6C,IAAlCyG,EAAkC,uDAAJ,CAAC,EACtD,OAAO5B,EAAsB0B,EAAavG,EAAWyG,GACxD,CACD,GAAqB,qBAAVC,MACP,OAAOF,EAMX,IAAMG,EAAiB,IAAIC,IAC3B,OAAO,IAAIF,MAAMF,EAAQ,CAMrBK,IAAK,SAACC,EAAS3B,GAOX,OAHKwB,EAAeI,IAAI5B,IACpBwB,EAAeK,IAAI7B,EAAKqB,EAAOrB,IAE5BwB,EAAeE,IAAI1B,EAC7B,GAER,CCxCD,IAAM8B,EAAuB,CACzB,UACA,SACA,OACA,OACA,UACA,IACA,QACA,OACA,SACA,SACA,OACA,WACA,OACA,UACA,UACA,WACA,OACA,OACA,SACA,SACA,OACA,QACA,MACA,QC1BJ,SAASC,EAAelH,GACpB,MAKqB,kBAAdA,IAIHA,EAAUmH,SAAS,SAOvBF,EAAqBG,QAAQpH,IAAc,GAIvC,QAAQqH,KAAKrH,GAIpB,CC3BD,IAAMsH,EAAkB,CAAC,ECGzB,IAAMC,EAAqB,CACvB,uBACA,IACA,IACA,IACA,aACA,aACA,aACA,QACA,SACA,SACA,SACA,UACA,UACA,UACA,OACA,QACA,SAKEC,EAAiB,IAAIC,IAAIF,GCtB/B,SAASG,EAAoBvC,EAA7B,GAAwD,IAApBwC,EAAoB,EAApBA,OAAQlC,EAAY,EAAZA,SACxC,OAAQ+B,EAAeT,IAAI5B,IACvBA,EAAIyC,WAAW,YACbD,QAAuB7J,IAAb2H,OACL6B,EAAgBnC,IAAgB,YAARA,EACtC,CCRD,IAAM0C,EAAgB,SAAC5I,GAAD,SAAwB,OAAVA,QAA4B,IAAVA,OAAmB,EAASA,EAAM6I,YAAlE,E,UCEhBC,EAAiB,CACnBC,EAAG,aACHC,EAAG,aACHC,EAAG,aACHC,qBAAsB,eAKpBC,EAAqB,SAACC,EAAGC,GAAJ,OAAUf,EAAmBH,QAAQiB,GAAKd,EAAmBH,QAAQkB,EAArE,ECR3B,SAASC,EAAcpD,GACnB,OAAOA,EAAIyC,WAAW,KACzB,CCFD,IAAMY,EAAiB,SAACvJ,EAAOwJ,GAC3B,OAAOA,GAAyB,kBAAVxJ,EAChBwJ,EAAKC,UAAUzJ,GACfA,CACT,ECPK0J,EAAQ,SAACC,EAAKC,GAAN,OAAc,SAACjH,GAAD,OAAOkH,KAAKD,IAAIC,KAAKF,IAAIhH,EAAGiH,GAAMD,EAAlC,CAAd,EACRG,EAAW,SAACnH,GAAD,OAAQA,EAAI,EAAIoH,OAAOpH,EAAEqH,QAAQ,IAAMrH,CAAvC,EACXsH,EAAa,uBACbC,EAAa,+HACbC,EAAmB,mHACzB,SAASC,EAASzH,GACd,MAAoB,kBAANA,CACjB,CCLD,IAAM0H,GAAiB,SAACC,GAAD,MAAW,CAC9BlC,KAAM,SAACzF,GAAD,OAAOyH,EAASzH,IAAMA,EAAE4H,SAASD,IAAiC,IAAxB3H,EAAE6H,MAAM,KAAKC,MAAvD,EACNC,MAAOC,WACPlB,UAAW,SAAC9G,GAAD,gBAAUA,GAAV,OAAc2H,EAAd,EAHQ,EAKjBM,GAAUP,GAAe,OACzBQ,GAAUR,GAAe,KACzBS,GAAKT,GAAe,MACpBU,GAAKV,GAAe,MACpBW,GAAKX,GAAe,MACpBY,GAAqBpL,OAAOqL,OAAOrL,OAAOqL,OAAO,CAAC,EAAGL,IAAU,CAAEH,MAAO,SAAC/H,GAAD,OAAOkI,GAAQH,MAAM/H,GAAK,GAA1B,EAA+B8G,UAAW,SAAC9G,GAAD,OAAOkI,GAAQpB,UAAc,IAAJ9G,EAAzB,ICVlHwI,GAAS,CACX/C,KAAM,SAACzF,GAAD,MAAoB,kBAANA,CAAd,EACN+H,MAAOC,WACPlB,UAAW,SAAC9G,GAAD,OAAOA,CAAP,GAETyI,GAAQvL,OAAOqL,OAAOrL,OAAOqL,OAAO,CAAC,EAAGC,IAAS,CAAE1B,UAAWC,EAAM,EAAG,KACvE2B,GAAQxL,OAAOqL,OAAOrL,OAAOqL,OAAO,CAAC,EAAGC,IAAS,CAAEG,QAAS,ICN5DC,IAAM,kBACLJ,IADE,IAEL1B,UAAWI,KAAK2B,QCDdC,GAAmB,CAErBC,YAAaZ,GACba,eAAgBb,GAChBc,iBAAkBd,GAClBe,kBAAmBf,GACnBgB,gBAAiBhB,GACjBiB,aAAcjB,GACdkB,OAAQlB,GACRmB,oBAAqBnB,GACrBoB,qBAAsBpB,GACtBqB,wBAAyBrB,GACzBsB,uBAAwBtB,GAExBuB,MAAOvB,GACPwB,SAAUxB,GACVyB,OAAQzB,GACR0B,UAAW1B,GACX2B,KAAM3B,GACN4B,IAAK5B,GACL6B,MAAO7B,GACP8B,OAAQ9B,GACR+B,KAAM/B,GAENgC,QAAShC,GACTiC,WAAYjC,GACZkC,aAAclC,GACdmC,cAAenC,GACfoC,YAAapC,GACbqC,OAAQrC,GACRsC,UAAWtC,GACXuC,YAAavC,GACbwC,aAAcxC,GACdyC,WAAYzC,GAEZ0C,OAAQ5C,GACR6C,QAAS7C,GACT8C,QAAS9C,GACT+C,QAAS/C,GACTS,MAAAA,GACAuC,OAAQvC,GACRwC,OAAQxC,GACRyC,OAAQzC,GACR0C,KAAMnD,GACNoD,MAAOpD,GACPqD,MAAOrD,GACPsD,SAAUpD,GACVqD,WAAYrD,GACZsD,WAAYtD,GACZuD,WAAYvD,GACZ/B,EAAG+B,GACH9B,EAAG8B,GACH7B,EAAG6B,GACHwD,YAAaxD,GACb5B,qBAAsB4B,GACtByD,QAASnD,GACToD,QAASvD,GACTwD,QAASxD,GACTyD,QAAS5D,GAET6D,OAAQpD,GAERqD,YAAaxD,GACbyD,cAAezD,GACf0D,WAAYvD,IC7DhB,SAASwD,GAAgB9P,EAAO+P,EAAcC,EAASC,GACnD,IAAQC,EAA2DlQ,EAA3DkQ,MAAOC,EAAoDnQ,EAApDmQ,KAAM3F,EAA8CxK,EAA9CwK,UAAW4F,EAAmCpQ,EAAnCoQ,cAAeC,EAAoBrQ,EAApBqQ,gBAC/CD,EAAc5E,OAAS,EAEvB,IAAI8E,GAAe,EACfC,GAAqB,EAErBC,GAAkB,EAOtB,IAAK,IAAMvJ,KAAO8I,EAAc,CAC5B,IAAMhP,EAAQgP,EAAa9I,GAI3B,GAAIoD,EAAcpD,GACdkJ,EAAKlJ,GAAOlG,MADhB,CAKA,IAAM0P,EAAYjE,GAAiBvF,GAC7ByJ,EAAcpG,EAAevJ,EAAO0P,GAC1C,GAAInH,EAAeT,IAAI5B,GAAM,CAMzB,GAJAqJ,GAAe,EACf9F,EAAUvD,GAAOyJ,EACjBN,EAAcO,KAAK1J,IAEduJ,EACD,SAEAzP,KAAW0P,EAAUpE,SAAW,KAChCmE,GAAkB,EACzB,MACQvJ,EAAIyC,WAAW,WAEpB6G,GAAqB,EACrBF,EAAgBpJ,GAAOyJ,GAGvBR,EAAMjJ,GAAOyJ,CAtBhB,CAwBJ,CAiBD,GAhBKX,EAAavF,YACV8F,GAAgBL,EAChBC,EAAM1F,URrClB,aAA0HoG,EAAoBX,GAAmB,IAAvIzF,EAAuI,EAAvIA,UAAW4F,EAA4H,EAA5HA,cAA4H,IAAxGS,2BAAAA,OAAwG,aAArEC,mBAAAA,OAAqE,SAEzJC,EAAkB,GAEtBX,EAAcY,KAAK9G,GAJ0I,gBAM3IkG,GAN2I,IAM7J,2BAAiC,KAAtBnJ,EAAsB,QAC7B8J,GAAmB,GAAJ,OAAOlH,EAAe5C,IAAQA,EAA9B,YAAqCuD,EAAUvD,GAA/C,KAClB,CAR4J,+BAqB7J,OAZI4J,IAA+BrG,EAAUR,IACzC+G,GAAmB,iBAEvBA,EAAkBA,EAAgBE,OAG9BhB,EACAc,EAAkBd,EAAkBzF,EAAWoG,EAAqB,GAAKG,GAEpED,GAAsBF,IAC3BG,EAAkB,QAEfA,CACV,CQe6BG,CAAelR,EAAOgQ,EAASQ,EAAiBP,GAE7DC,EAAM1F,YAKX0F,EAAM1F,UAAY,SAOtB+F,EAAoB,CACpB,MAA2DF,EAAnDd,QAAAA,OAAR,MAAkB,MAAlB,IAA2Dc,EAAlCb,QAAAA,OAAzB,MAAmC,MAAnC,IAA2Da,EAAjBZ,QAAAA,OAA1C,MAAoD,EAApD,EACAS,EAAMG,gBAAN,UAA2Bd,EAA3B,YAAsCC,EAAtC,YAAiDC,EACpD,CACJ,CCzED,IAAM0B,GAAwB,iBAAO,CACjCjB,MAAO,CAAC,EACR1F,UAAW,CAAC,EACZ4F,cAAe,GACfC,gBAAiB,CAAC,EAClBF,KAAM,CAAC,EALmB,ECM9B,SAASiB,GAAkBC,EAAQC,EAAQtP,GACvC,IAAK,IAAMiF,KAAOqK,EACT3H,EAAc2H,EAAOrK,KAAUuC,EAAoBvC,EAAKjF,KACzDqP,EAAOpK,GAAOqK,EAAOrK,GAGhC,CAQD,SAASsK,GAASvP,EAAOD,EAAaX,GAClC,IACM8O,EAAQ,CAAC,EAMf,OAFAkB,GAAkBlB,EALAlO,EAAMkO,OAAS,CAAC,EAKElO,GACpCpB,OAAOqL,OAAOiE,EAdlB,WAAuDnO,EAAaX,GAAU,IAA5C6O,EAA4C,EAA5CA,kBAC9B,OAAOtL,EAAAA,EAAAA,UAAQ,WACX,IAAM3E,EDfuB,CACjCkQ,MAAO,CAAC,EACR1F,UAAW,CAAC,EACZ4F,cAAe,GACfC,gBAAiB,CAAC,EAClBF,KAAM,CAAC,GCYH,OADAL,GAAgB9P,EAAO+B,EAAa,CAAE8O,4BAA6BzP,GAAY6O,GACxErP,OAAOqL,OAAO,CAAC,EAAGjM,EAAMmQ,KAAMnQ,EAAMkQ,MAC9C,GAAE,CAACnO,GACP,CAQwByP,CAAuBxP,EAAOD,EAAaX,IACzDY,EAAMyP,gBAAkBzP,EAAMyP,gBAAgBvB,GAASA,CACjE,CACD,SAASwB,GAAa1P,EAAOD,EAAaX,GAEtC,IAAMuQ,EAAY,CAAC,EACbzB,EAAQqB,GAASvP,EAAOD,EAAaX,GAgB3C,OAfIY,EAAMsD,OAA+B,IAAvBtD,EAAM4P,eAEpBD,EAAUE,WAAY,EAEtB3B,EAAM4B,WACF5B,EAAM6B,iBACF7B,EAAM8B,mBACF,OAEZ9B,EAAM+B,aACa,IAAfjQ,EAAMsD,KACA,OADN,cAE4B,MAAftD,EAAMsD,KAAe,IAAM,MAEhDqM,EAAUzB,MAAQA,EACXyB,CACV,CClDD,IAwBMO,GAAmB,IAAI3I,IAAJ,CACrB,UACA,QACA,SACA,WACA,aACA,oBACA,kBACA,SACA,UACA,SACA,WACA,mBACA,yBACA,4BACA,kBACA,wBACA,mBACA,sBACA,WACA,cACA,SACA,YACA,2BACA,kBACA,sBACA,OACA,eACA,eACA,kBACA,oBACA,mBACA,SACA,SACA,cACA,eACA,kBACA,iBACA,eACA,aACA,gBAxCqB,OAZL,CAChB,cACA,kBACA,kBACA,YANa,CAAC,WAAY,QAAS,aAAc,eAV9B,CACnB,UACA,OACA,WACA,aACA,WACA,aACA,YACA,eAGa,CAAC,QAAS,aAAc,oBAAqB,cAmE9D,SAAS4I,GAAkBlL,GACvB,OAAOiL,GAAiBrJ,IAAI5B,EAC/B,CC9ED,IACiCmL,GAD7BC,GAAgB,SAACpL,GAAD,OAAUkL,GAAkBlL,EAA5B,EAoBpB,KAnBiCmL,GAyBLE,QAAQ,0BAA0BjG,WArB1DgG,GAAgB,SAACpL,GAAD,OAASA,EAAIyC,WAAW,OAASyI,GAAkBlL,GAAOmL,GAAYnL,EAAtE,EAyBnB,CAFD,MAAOvH,IAEN,CACD,SAAS6S,GAAYvQ,EAAOwQ,EAAOC,GAC/B,IAAMC,EAAgB,CAAC,EACvB,IAAK,IAAMzL,KAAOjF,GACVqQ,GAAcpL,KACU,IAAvBwL,GAA+BN,GAAkBlL,KAChDuL,IAAUL,GAAkBlL,IAE7BjF,EAAK,WAAiBiF,EAAIyC,WAAW,aACtCgJ,EAAczL,GAAOjF,EAAMiF,IAGnC,OAAOyL,CACV,C,eC3CD,SAASC,GAAWC,EAAQC,EAAQrF,GAChC,MAAyB,kBAAXoF,EACRA,EACA/G,GAAGrB,UAAUqI,EAASrF,EAAOoF,EACtC,CCJD,IAAME,GAAW,CACbD,OAAQ,oBACRE,MAAO,oBAELC,GAAY,CACdH,OAAQ,mBACRE,MAAO,mB,qFCDX,SAASE,GAAcjT,EAAvB,EAEagQ,EAASC,GAAmB,IAFTiD,EAES,EAFTA,MAAOC,EAEE,EAFFA,MAAO5D,EAEL,EAFKA,QAASC,EAEd,EAFcA,QAAS4D,EAEvB,EAFuBA,WAEvB,IAFmCC,YAAAA,OAEnC,MAFiD,EAEjD,MAFoDC,WAAAA,OAEpD,MAFiE,EAEjE,EACrCxD,GAAgB9P,GADqB,cACNgQ,EAASC,GACxCjQ,EAAMuT,MAAQvT,EAAMkQ,MACpBlQ,EAAMkQ,MAAQ,CAAC,EACf,IAAQqD,EAA6BvT,EAA7BuT,MAAOrD,EAAsBlQ,EAAtBkQ,MAAOsD,EAAexT,EAAfwT,WAKlBD,EAAM/I,YACFgJ,IACAtD,EAAM1F,UAAY+I,EAAM/I,kBACrB+I,EAAM/I,WAGbgJ,SACa5T,IAAZ2P,QAAqC3P,IAAZ4P,GAAyBU,EAAM1F,aACzD0F,EAAMG,gBFfd,SAAgCmD,EAAYjE,EAASC,GACjD,IAAMiE,EAAYd,GAAWpD,EAASiE,EAAW1J,EAAG0J,EAAWpG,OACzDsG,EAAYf,GAAWnD,EAASgE,EAAWzJ,EAAGyJ,EAAWlG,QAC/D,gBAAUmG,EAAV,YAAuBC,EAC1B,CEW+BC,CAAuBH,OAAwB5T,IAAZ2P,EAAwBA,EAAU,QAAiB3P,IAAZ4P,EAAwBA,EAAU,UAG1H5P,IAAVsT,IACAK,EAAMzJ,EAAIoJ,QACAtT,IAAVuT,IACAI,EAAMxJ,EAAIoJ,QAEKvT,IAAfwT,GDjBR,SAAsBG,EAAO/H,GAAqD,IAA7CoI,EAA6C,uDAAnC,EAAGf,EAAgC,uDAAvB,EAAGgB,IAAoB,yDAE9EN,EAAMH,WAAa,EAGnB,IAAMU,EAAOD,EAAcf,GAAWE,GAEtCO,EAAMO,EAAKjB,QAAUhH,GAAGrB,WAAWqI,GAEnC,IAAMO,EAAavH,GAAGrB,UAAUgB,GAC1B6H,EAAcxH,GAAGrB,UAAUoJ,GACjCL,EAAMO,EAAKf,OAAX,UAAuBK,EAAvB,YAAqCC,EACxC,CCMOU,CAAaR,EAAOH,EAAYC,EAAaC,GAAY,EAEhE,CCnCD,IAAMU,GAAuB,0BAAC,UPFO,CACjC9D,MAAO,CAAC,EACR1F,UAAW,CAAC,EACZ4F,cAAe,GACfC,gBAAiB,CAAC,EAClBF,KAAM,CAAC,IOHkB,IAEzBoD,MAAO,CAAC,GAFiB,ECG7B,SAASU,GAAYjS,EAAOD,GACxB,IAAMmS,GAAcvP,EAAAA,EAAAA,UAAQ,WACxB,IAAM3E,EAAQgU,KAEd,OADAf,GAAcjT,EAAO+B,EAAa,CAAE8O,4BAA4B,GAAS7O,EAAMiO,oBAC/E,kBACOjQ,EAAMuT,OADb,IAEIrD,OAAO,UAAKlQ,EAAMkQ,QAEzB,GAAE,CAACnO,IACJ,GAAIC,EAAMkO,MAAO,CACb,IAAMiE,EAAY,CAAC,EACnB/C,GAAkB+C,EAAWnS,EAAMkO,MAAOlO,GAC1CkS,EAAYhE,OAAZ,kBAAyBiE,GAAcD,EAAYhE,MACtD,CACD,OAAOgE,CACV,CCdD,SAASE,KAA4C,IAA5B3B,EAA4B,wDAC3C3L,EAAY,SAAChF,EAAWE,EAAOyF,EAAcpE,EAAjC,EAAwDjC,GAAa,IAA7B2O,EAA6B,EAA7BA,aAIhDmE,GAHiBlL,EAAelH,GAChCmS,GACAvC,IAC6B1P,EAAO+N,EAAc3O,GAClDsR,EAAgBH,GAAYvQ,EAA4B,kBAAdF,EAAwB2Q,GAClE4B,GAAe,0BACd3B,GACAwB,GAFW,IAGd7Q,IAAAA,IAKJ,OAHIoE,IACA4M,EAAa,sBAAwB5M,IAElC6M,EAAAA,EAAAA,eAAcxS,EAAWuS,EACnC,EACD,OAAOvN,CACV,CCrBD,IAAMyN,GAAc,SAACC,GAAD,OAASA,EAAIC,QAAQ,kBAAmB,SAASC,aAAjD,ECHpB,SAASC,GAAWC,EAApB,EAA8CC,EAAWC,GAAY,IAAtC5E,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,KAGlC,IAAK,IAAMlJ,KAFXrG,OAAOqL,OAAO2I,EAAQ1E,MAAOA,EAAO4E,GAAcA,EAAWC,oBAAoBF,IAE/D1E,EACdyE,EAAQ1E,MAAM8E,YAAY/N,EAAKkJ,EAAKlJ,GAE3C,CCHD,IAAMgO,GAAsB,IAAI1L,IAAI,CAChC,gBACA,kBACA,eACA,mBACA,aACA,WACA,oBACA,eACA,cACA,aACA,UACA,UACA,eACA,mBACA,mBACA,eACA,cACA,UACA,oBACA,eCnBJ,SAAS2L,GAAUN,EAASO,EAAaC,EAAYN,GAEjD,IAAK,IAAM7N,KADX0N,GAAWC,EAASO,OAAavV,EAAWkV,GAC1BK,EAAY5B,MAC1BqB,EAAQS,aAAcJ,GAAoBpM,IAAI5B,GAA0BA,EAAnBsN,GAAYtN,GAAYkO,EAAY5B,MAAMtM,GAEtG,CCND,SAASqO,GAA4BtT,GACjC,IAAQkO,EAAUlO,EAAVkO,MACFqF,EAAY,CAAC,EACnB,IAAK,IAAMtO,KAAOiJ,GACVvG,EAAcuG,EAAMjJ,KAASuC,EAAoBvC,EAAKjF,MACtDuT,EAAUtO,GAAOiJ,EAAMjJ,IAG/B,OAAOsO,CACV,CCTD,SAASD,GAA4BtT,GACjC,IAAMuT,EAAYC,GAA8BxT,GAChD,IAAK,IAAMiF,KAAOjF,EAAO,CACrB,GAAI2H,EAAc3H,EAAMiF,IAEpBsO,EAD0B,MAARtO,GAAuB,MAARA,EAAc,OAASA,EAAIwO,cAAgBxO,GACrDjF,EAAMiF,EAEpC,CACD,OAAOsO,CACV,CCZD,SAASG,GAAwB1T,EAAO2T,EAAYrN,GAAkD,IAA1CsN,EAA0C,uDAA1B,CAAC,EAAGC,EAAsB,uDAAJ,CAAC,EAsB/F,MAlB0B,oBAAfF,IACPA,EAAaA,OAAsB/V,IAAX0I,EAAuBA,EAAStG,EAAMsG,OAAQsN,EAAeC,IAM/D,kBAAfF,IACPA,EAAa3T,EAAMsC,UAAYtC,EAAMsC,SAASqR,IAOxB,oBAAfA,IACPA,EAAaA,OAAsB/V,IAAX0I,EAAuBA,EAAStG,EAAMsG,OAAQsN,EAAeC,IAElFF,CACV,CCvBD,IAAMG,GAAoB,SAACpS,GACvB,OAAOC,MAAMC,QAAQF,EACxB,ECGKqS,GAA+B,SAACrS,GAElC,OAAOoS,GAAkBpS,GAAKA,EAAEA,EAAE8H,OAAS,IAAM,EAAI9H,CACxD,ECAD,SAASsS,GAAmBjV,GACxB,IDPmB2C,ECObuS,EAAiBtM,EAAc5I,GAASA,EAAM4H,MAAQ5H,EAC5D,ODRmB2C,ECQEuS,EDPd5R,QAAQX,GAAkB,kBAANA,GAAkBA,EAAEwS,KAAOxS,EAAEyS,SCQlDF,EAAeE,UACfF,CACT,C,sCCMD,IAAMG,GAAqB,SAACC,GAAD,OAAY,SAACrU,EAAOZ,GAC3C,IAAMoD,GAAUrC,EAAAA,EAAAA,YAAWb,GACrBgB,GAAkBH,EAAAA,EAAAA,YAAWZ,GAC7B+U,EAAO,kBAbjB,WAAiFtU,EAAOwC,EAASlC,GAAiB,IAA7FgT,EAA6F,EAA7FA,4BAA6BiB,EAAgE,EAAhEA,kBAAmBC,EAA6C,EAA7CA,QAC3DxW,EAAQ,CACV+P,aAAc0G,GAAiBzU,EAAOwC,EAASlC,EAAiBgT,GAChEH,YAAaoB,KAKjB,OAHIC,IACAxW,EAAMgI,MAAQ,SAACD,GAAD,OAAcyO,EAAQxU,EAAO+F,EAAU/H,EAAvC,GAEXA,CACV,CAIsB0W,CAAUL,EAAQrU,EAAOwC,EAASlC,EAAxC,EACb,OAAOlB,EAAWkV,IAAS1Q,EAAY0Q,EAC1C,CAL0B,EAM3B,SAASG,GAAiBzU,EAAOwC,EAASlC,EAAiBqU,GACvD,IAAMC,EAAS,CAAC,EACVC,EAAeF,EAAmB3U,GACxC,IAAK,IAAMiF,KAAO4P,EACdD,EAAO3P,GAAO+O,GAAmBa,EAAa5P,IAElD,IAAMlE,EAAqBf,EAArBe,QAASkB,EAAYjC,EAAZiC,QACT6S,EAA0B9S,EAAsBhC,GAChD+U,EAAkB3S,EAAcpC,GAClCwC,GACAuS,IACCD,IACiB,IAAlB9U,EAAMyC,eACU7E,IAAZmD,IACAA,EAAUyB,EAAQzB,cACNnD,IAAZqE,IACAA,EAAUO,EAAQP,UAE1B,IAAI+S,IAA4B1U,IACE,IAA5BA,EAAgBS,QAGhBkU,GADND,EAA4BA,IAAyC,IAAZjU,GACRkB,EAAUlB,EACvDkU,GACwB,mBAAjBA,IACNpT,EAAoBoT,KACRtT,MAAMC,QAAQqT,GAAgBA,EAAe,CAACA,IACtDC,SAAQ,SAACvB,GACV,IAAMwB,EAAWzB,GAAwB1T,EAAO2T,GAChD,GAAKwB,EAAL,CAEA,IAAQC,EAAyCD,EAAzCC,cAA8B/F,GAAW8F,EAA1BE,YAAvB,QAAiDF,EAAjD,KACA,IAAK,IAAMlQ,KAAOoK,EAAQ,CACtB,IAAIiG,EAAcjG,EAAOpK,GACzB,GAAItD,MAAMC,QAAQ0T,GAQdA,EAAcA,EAHAN,EACRM,EAAY9L,OAAS,EACrB,GAGU,OAAhB8L,IACAV,EAAO3P,GAAOqQ,EAErB,CACD,IAAK,IAAMrQ,KAAOmQ,EACdR,EAAO3P,GAAOmQ,EAAcnQ,EAnBtB,CAoBb,IAEL,OAAO2P,CACV,CCxED,ICNIW,GDMEC,GAAkB,CACpBzQ,eAAgBqP,GAAmB,CAC/Bd,4BAA6BA,GAC7BiB,kBAAmBvC,GACnBwC,QAAS,SAACxU,EAAO+F,EAAR,GAAoD,IAAhCoN,EAAgC,EAAhCA,YAAapF,EAAmB,EAAnBA,aACtC,IACIoF,EAAY3B,WAEJ,oBADGzL,EAAS0P,QAEV1P,EAAS0P,UACT1P,EAAS2P,uBAUtB,CARD,MAAOC,GAEHxC,EAAY3B,WAAa,CACrB1J,EAAG,EACHC,EAAG,EACHqD,MAAO,EACPE,OAAQ,EAEf,CACD2F,GAAckC,EAAapF,EAAc,CAAEc,4BAA4B,GAAS7O,EAAMiO,mBACtFiF,GAAUnN,EAAUoN,EACvB,KEzBHyC,GAAmB,CACrB7Q,eAAgBqP,GAAmB,CAC/Bd,4BAAAA,GACAiB,kBAAmBpF,MCL3B,SAAS0G,GAAYxG,EAAQyG,EAAWC,GAAsC,IAA7B/H,EAA6B,uDAAnB,CAAEgI,SAAS,GAElE,OADA3G,EAAO4G,iBAAiBH,EAAWC,EAAS/H,GACrC,kBAAMqB,EAAO6G,oBAAoBJ,EAAWC,EAA5C,CACV,CAsBD,SAASI,GAAY9U,EAAKyU,EAAWC,EAAS/H,IAC1C9P,EAAAA,EAAAA,YAAU,WACN,IAAM0U,EAAUvR,EAAIV,QACpB,GAAIoV,GAAWnD,EACX,OAAOiD,GAAYjD,EAASkD,EAAWC,EAAS/H,EAEvD,GAAE,CAAC3M,EAAKyU,EAAWC,EAAS/H,GAChC,CClCD,SAASoI,GAAaC,GAElB,MAA4B,qBAAjBC,cAAgCD,aAAiBC,eACxB,UAAtBD,EAAME,aAEbF,aAAiBG,UAC3B,CACD,SAASC,GAAaJ,GAElB,QADqBA,EAAMK,OAE9B,CCJD,SAASC,GAAqBC,GAC1B,OAAO,SAACP,GACJ,IAAMD,EAAeC,aAAiBG,aACZJ,GACrBA,GAAiC,IAAjBC,EAAMQ,SAEvBD,EAAaP,EAEpB,CACJ,EJdD,SAAWd,GACPA,EAAa,QAAc,UAC3BA,EAAa,MAAY,aACzBA,EAAa,IAAU,WACvBA,EAAa,KAAW,YACxBA,EAAa,MAAY,aACzBA,EAAa,OAAa,cAC1BA,EAAa,KAAW,MAP5B,EAQGA,KAAkBA,GAAgB,CAAC,IIOtC,IAAMuB,GAAmB,CAAEC,MAAO,EAAGC,MAAO,GAC5C,SAASC,GAAetB,GAAuB,IAApBuB,EAAoB,uDAAR,OAC7BC,EAAexB,EAAEe,QAAQ,IAAMf,EAAEyB,eAAe,GAChDC,EAAQF,GAAgBL,GAC9B,MAAO,CACHhP,EAAGuP,EAAMH,EAAY,KACrBnP,EAAGsP,EAAMH,EAAY,KAE5B,CACD,SAASI,GAAeD,GAA2B,IAApBH,EAAoB,uDAAR,OACvC,MAAO,CACHpP,EAAGuP,EAAMH,EAAY,KACrBnP,EAAGsP,EAAMH,EAAY,KAE5B,CACD,SAASK,GAAiBlB,GAA2B,IAApBa,EAAoB,uDAAR,OACzC,MAAO,CACHG,MAAOZ,GAAaJ,GACdY,GAAeZ,EAAOa,GACtBI,GAAejB,EAAOa,GAEnC,CACD,IAAMM,GAAc,SAACzB,GAAgD,IAAvC0B,EAAuC,wDAC3DC,EAAW,SAACrB,GAAD,OAAWN,EAAQM,EAAOkB,GAAiBlB,GAA3C,EACjB,OAAOoB,EACDd,GAAqBe,GACrBA,CACT,ECvCKC,GAAkB,CACpBC,YAAa,YACbC,YAAa,YACbC,UAAW,UACXC,cAAe,cACfC,YAAa,YACbC,WAAY,WACZC,aAAc,aACdC,aAAc,cAEZC,GAAkB,CACpBR,YAAa,aACbC,YAAa,YACbC,UAAW,WACXC,cAAe,eAEnB,SAASM,GAAoBlW,GACzB,OClBgC7E,GAAsC,OAAzBC,OAAO+a,cDmBzCnW,EClBmB7E,GAAqC,OAAxBC,OAAOgb,aDqBvCH,GAAgBjW,GCpBG7E,GAAoC,OAAvBC,OAAOib,YDuBvCb,GAAgBxV,GAEpBA,CACV,CACD,SAASsW,GAAgBpJ,EAAQyG,EAAWC,EAAS/H,GACjD,OAAO6H,GAAYxG,EAAQgJ,GAAoBvC,GAAY0B,GAAYzB,EAAuB,gBAAdD,GAA8B9H,EACjH,CACD,SAAS0K,GAAgBrX,EAAKyU,EAAWC,EAAS/H,GAC9C,OAAOmI,GAAY9U,EAAKgX,GAAoBvC,GAAYC,GAAWyB,GAAYzB,EAAuB,gBAAdD,GAA8B9H,EACzH,CErCD,SAAS2K,GAAWxW,GAChB,IAAIyW,EAAO,KACX,OAAO,WAIH,OAAa,OAATA,IACAA,EAAOzW,EAJM,WACbyW,EAAO,IACV,EAMJ,CACJ,CACD,IAAMC,GAAuBF,GAAW,kBAClCG,GAAqBH,GAAW,gBACtC,SAASI,GAAczV,GACnB,IAAIsV,GAAO,EACX,GAAa,MAATtV,EACAsV,EAAOE,UAEN,GAAa,MAATxV,EACLsV,EAAOC,SAEN,CACD,IAAMG,EAAiBH,KACjBI,EAAeH,KACjBE,GAAkBC,EAClBL,EAAO,WACHI,IACAC,GACH,GAIGD,GACAA,IACAC,GACAA,IAEX,CACD,OAAOL,CACV,CACD,SAASM,KAGL,IAAMC,EAAkBJ,IAAc,GACtC,OAAKI,IAELA,KACO,EACV,CC7CD,SAASC,GAAiBhZ,EAAeiZ,EAAUC,GAC/C,OAAO,SAACjD,EAAOkD,GACNnD,GAAaC,KAAU6C,OAKxB9Y,EAAca,gBACdb,EAAca,eAAeuY,UAAUjE,GAAckE,MAAOJ,GAEhEC,GAAYA,EAASjD,EAAOkD,GAC/B,CACJ,CCVD,IAAMG,GAAgB,SAAhBA,EAAiBxZ,EAAQyZ,GAC3B,QAAKA,IAGIzZ,IAAWyZ,GAITD,EAAcxZ,EAAQyZ,EAAMC,eAE1C,ECfD,SAASC,GAAiBP,GACtB,OAAOpb,EAAAA,EAAAA,YAAU,kBAAM,kBAAMob,GAAN,CAAN,GAAwB,GAC5C,CCGD,IAAMQ,GAAmB,SAAC3R,EAAGC,GAAJ,OAAU,SAAC1G,GAAD,OAAO0G,EAAED,EAAEzG,GAAX,CAAV,EACnBqY,GAAO,sCAAIC,EAAJ,yBAAIA,EAAJ,uBAAqBA,EAAaC,OAAOH,GAAzC,ECRE,IAAIvS,I,gBCKb2S,GAAoB,IAAIC,QAMxBC,GAAY,IAAID,QAChBE,GAAuB,SAACC,GAC1B,IAAMhB,EAAWY,GAAkBvT,IAAI2T,EAAMjL,QAC7CiK,GAAYA,EAASgB,EACxB,EACKC,GAA2B,SAACC,GAC9BA,EAAQtF,QAAQmF,GACnB,EAoBD,SAASI,GAAoB7H,EAAS5E,EAASsL,GAC3C,IAAMoB,EApBV,YAAwD,IAApBC,EAAoB,EAApBA,KAAS3M,GAAW,cAC9C4M,EAAaD,GAAQnb,SAItB4a,GAAUvT,IAAI+T,IACfR,GAAUtT,IAAI8T,EAAY,CAAC,GAE/B,IAAMC,EAAgBT,GAAUzT,IAAIiU,GAC9B3V,EAAM6V,KAAKC,UAAU/M,GAQ3B,OAHK6M,EAAc5V,KACf4V,EAAc5V,GAAO,IAAI+V,qBAAqBT,IAAzB,QAAqDI,KAAAA,GAAS3M,KAEhF6M,EAAc5V,EACxB,CAEqCgW,CAAyBjN,GAG3D,OAFAkM,GAAkBpT,IAAI8L,EAAS0G,GAC/BoB,EAA0BQ,QAAQtI,GAC3B,WACHsH,GAAkBiB,OAAOvI,GACzB8H,EAA0BU,UAAUxI,EACvC,CACJ,CC3BD,IAAMyI,GAAiB,CACnBnZ,KAAM,EACNoZ,IAAK,GAET,SAASC,GAAwBC,EAAexd,EAAOoC,EAAvD,GAA2H,IAAnDua,EAAmD,EAAnDA,KAAcc,EAAqC,EAA7CvP,OAA6C,IAAzBwP,OAAAA,OAAyB,MAAhB,OAAgB,EAARC,EAAQ,EAARA,MAC/Gzd,EAAAA,EAAAA,YAAU,WACN,GAAKsd,GAAkBpb,EAAcO,QAArC,CAEA,IAAMqN,EAAU,CACZ2M,KAAe,OAATA,QAA0B,IAATA,OAAkB,EAASA,EAAKha,QACvD8a,WAAAA,EACAG,UAA6B,kBAAXF,EAAsBA,EAASL,GAAeK,IAiCpE,OAAOjB,GAAoBra,EAAcO,QAASqN,GA/BrB,SAACsM,GAC1B,IAAQuB,EAAmBvB,EAAnBuB,eAIR,GAAI7d,EAAM8d,WAAaD,IAEvB7d,EAAM8d,SAAWD,GAKbF,GAASE,IAAkB7d,EAAM+d,gBAArC,CAGSF,IACL7d,EAAM+d,gBAAiB,GAEvB3b,EAAca,gBACdb,EAAca,eAAeuY,UAAUjE,GAAcyG,OAAQH,GAMjE,IAAM7b,EAAQI,EAAc6b,WACtB3C,EAAWuC,EACX7b,EAAMkc,gBACNlc,EAAMmc,gBACZ7C,GAAYA,EAASgB,EAZpB,CAaJ,GApCS,CAsCb,GAAE,CAACkB,EAAeb,EAAMc,EAAYC,GACxC,CAMD,SAASU,GAA+BZ,EAAexd,EAAOoC,EAA9D,GAAkG,QAAnBic,SAAAA,OAAmB,UAC9Fne,EAAAA,EAAAA,YAAU,WACDsd,GAAkBa,GAavBC,uBAAsB,WAClBte,EAAM+d,gBAAiB,EACvB,IAAQG,EAAoB9b,EAAc6b,WAAlCC,gBACRA,GAAmBA,EAAgB,MAC/B9b,EAAca,gBACdb,EAAca,eAAeuY,UAAUjE,GAAcyG,QAAQ,EAEpE,GACJ,GAAE,CAACR,GACP,CC/FD,IAAMe,GAA0B,SAACC,GAAD,OAAU,SAACxc,GAEvC,OADAwc,EAAKxc,GACE,IACV,CAH+B,ECM1Byc,GAAoB,CACtB9Y,OAAQ4Y,IFDZ,YAAuG,IAAhFnc,EAAgF,EAAhFA,cAAesc,EAAiE,EAAjEA,YAAaR,EAAoD,EAApDA,gBAAiBC,EAAmC,EAAnCA,gBAAmC,IAAlBQ,SAAAA,OAAkB,MAAP,CAAC,EAAM,EAC7F3e,GAAQyC,EAAAA,EAAAA,QAAO,CACjBsb,gBAAgB,EAChBD,UAAU,IAEVN,EAAgBnZ,QAAQqa,GAAeR,GAAmBC,GAC1DQ,EAAShB,MAAQ3d,EAAM2C,QAAQob,iBAC/BP,GAAgB,IACgC,qBAAzBR,qBACrBoB,GACAb,IACMC,EAAexd,EAAM2C,QAASP,EAAeuc,EAC5D,IEVGlZ,IAAK8Y,ICIT,YAAqF,IAA5DK,EAA4D,EAA5DA,MAAOC,EAAqD,EAArDA,WAAYC,EAAyC,EAAzCA,YAAaC,EAA4B,EAA5BA,SAAU3c,EAAkB,EAAlBA,cACzD4c,EAAoBJ,GAASC,GAAcC,GAAeC,EAC1DE,GAAaxc,EAAAA,EAAAA,SAAO,GACpByc,GAA4Bzc,EAAAA,EAAAA,QAAO,MAInC0c,EAAe,CACjBnH,UAAW6G,GAAcD,GAASE,GAAeM,IAErD,SAASC,IACLH,EAA0Bvc,SAAWuc,EAA0Bvc,UAC/Duc,EAA0Bvc,QAAU,IACvC,CACD,SAAS2c,IAKL,OAJAD,IACAJ,EAAWtc,SAAU,EACrBP,EAAca,gBACVb,EAAca,eAAeuY,UAAUjE,GAAcgI,KAAK,IACtDrE,IACX,CACD,SAASsE,EAAYnH,EAAOkD,GACnB+D,MAMJ5D,GAActZ,EAAcO,QAAS0V,EAAMhH,QAEtCuN,GAASA,EAAMvG,EAAOkD,GADtBuD,GAAeA,EAAYzG,EAAOkD,GAE3C,CACD,SAASkE,EAAgBpH,EAAOkD,GACvB+D,KAELR,GAAeA,EAAYzG,EAAOkD,EACrC,CACD,SAAS6D,EAAc/G,EAAOkD,GAC1B8D,IACIJ,EAAWtc,UAEfsc,EAAWtc,SAAU,EACrBuc,EAA0Bvc,QAAUoZ,GAAKtB,GAAgBlb,OAAQ,YAAaigB,EAAaL,GAAe1E,GAAgBlb,OAAQ,gBAAiBkgB,EAAiBN,IAIpK/c,EAAca,gBACVb,EAAca,eAAeuY,UAAUjE,GAAcgI,KAAK,GAC9DV,GAAcA,EAAWxG,EAAOkD,GACnC,CACDb,GAAgBtY,EAAe,cAAe4c,EAAoBI,OAAgBxf,EAAWuf,GAC7FtD,GAAiBwD,EACpB,IDvDG9Z,MAAOgZ,IEAX,YAAyD,IAA9BmB,EAA8B,EAA9BA,WAAYtd,EAAkB,EAAlBA,cAC3Ba,EAAmBb,EAAnBa,eAORkV,GAAY/V,EAAe,QAASsd,EANpB,WACZzc,GAAkBA,EAAeuY,UAAUjE,GAAcoI,OAAO,EACnE,OAI0D/f,GAC3DuY,GAAY/V,EAAe,OAAQsd,EAJpB,WACXzc,GAAkBA,EAAeuY,UAAUjE,GAAcoI,OAAO,EACnE,OAEwD/f,EAC5D,IFTG4F,MAAO+Y,IRQX,YAAmF,IAAxDqB,EAAwD,EAAxDA,aAAcC,EAA0C,EAA1CA,WAAYC,EAA8B,EAA9BA,WAAY1d,EAAkB,EAAlBA,cAC7DsY,GAAgBtY,EAAe,eAAgBwd,GAAgBE,EACzD1E,GAAiBhZ,GAAe,EAAMwd,QACtChgB,EAAW,CAAEoY,SAAU4H,IAC7BlF,GAAgBtY,EAAe,eAAgByd,GAAcC,EACvD1E,GAAiBhZ,GAAe,EAAOyd,QACvCjgB,EAAW,CAAEoY,SAAU6H,GAChC,K,UWCD,SAASE,KACL,IAAMvb,GAAUrC,EAAAA,EAAAA,YAAWZ,GAC3B,GAAgB,OAAZiD,EACA,MAAO,EAAC,EAAM,MAClB,IAAQwb,EAAwCxb,EAAxCwb,UAAWC,EAA6Bzb,EAA7Byb,eAAgBC,EAAa1b,EAAb0b,SAI7Brd,GAAKsd,EAAAA,EAAAA,UACXjgB,EAAAA,EAAAA,YAAU,kBAAMggB,EAASrd,EAAf,GAAoB,IAE9B,OAAQmd,GAAaC,EAAiB,EAAC,EADlB,kBAAMA,GAAkBA,EAAepd,EAAvC,GACyC,EAAC,EAClE,C,0BCtCD,SAASud,GAAeC,EAAMC,GAC1B,IAAK3c,MAAMC,QAAQ0c,GACf,OAAO,EACX,IAAMC,EAAaD,EAAK9U,OACxB,GAAI+U,IAAeF,EAAK7U,OACpB,OAAO,EACX,IAAK,IAAIgV,EAAI,EAAGA,EAAID,EAAYC,IAC5B,GAAIF,EAAKE,KAAOH,EAAKG,GACjB,OAAO,EAEf,OAAO,CACV,CCLD,IAAMC,GAAwB,SAACC,GAAD,OAAuB,IAAVA,CAAb,ECN9B,IAAMC,GAAO,SAACC,GAAD,OAASA,CAAT,ECoBPC,GAAa,SAACC,EAAGC,EAAIC,GAAR,SAAkB,EAAM,EAAMA,EAAK,EAAMD,GAAMD,GAAK,EAAME,EAAK,EAAMD,IAAOD,EAAI,EAAMC,GACrGD,CADe,EAqBnB,SAASG,GAAYC,EAAKC,EAAKC,EAAKC,GAEhC,GAAIH,IAAQC,GAAOC,IAAQC,EACvB,OAAOV,GACX,IAAMW,EAAW,SAACC,GAAD,OArBrB,SAAyBzX,EAAG0X,EAAYC,EAAYP,EAAKE,GACrD,IAAIM,EACAC,EACAnB,EAAI,EACR,IAEIkB,EAAWb,GADXc,EAAWH,GAAcC,EAAaD,GAAc,EACpBN,EAAKE,GAAOtX,GAC7B,EACX2X,EAAaE,EAGbH,EAAaG,QAEZ/W,KAAKgX,IAAIF,GAfO,QAgBnBlB,EAfuB,IAgB7B,OAAOmB,CACV,CAK4BE,CAAgBN,EAAI,EAAG,EAAGL,EAAKE,EAAvC,EAEjB,OAAO,SAACN,GAAD,OAAa,IAANA,GAAiB,IAANA,EAAUA,EAAID,GAAWS,EAASR,GAAIK,EAAKE,EAA7D,CACV,CC9CD,IAAMS,GAAe,SAACC,GAAD,OAAY,SAAC5gB,GAAD,OAAOA,GAAK,GAAM4gB,EAAO,EAAI5gB,GAAK,GAAK,EAAI4gB,EAAO,GAAK,EAAI5gB,KAAO,CAAlE,CAAZ,ECAf6gB,GAAgB,SAACD,GAAD,OAAY,SAAC5gB,GAAD,OAAO,EAAI4gB,EAAO,EAAI5gB,EAAtB,CAAZ,ECChB8gB,GAAS,SAAC9gB,GAAD,OAAOA,EAAIA,CAAX,EACT+gB,GAAUF,GAAcC,IACxBE,GAAYL,GAAaG,ICFzBG,GAAS,SAACjhB,GAAD,OAAO,EAAIyJ,KAAKyX,IAAIzX,KAAK0X,KAAKnhB,GAA9B,EACTohB,GAAUP,GAAcI,IACxBI,GAAYV,GAAaS,ICFzBE,GAAe,eAACC,EAAD,uDAAS,MAAT,OAAmB,SAACvhB,GAAD,OAAOA,EAAIA,IAAMuhB,EAAQ,GAAKvhB,EAAIuhB,EAAlC,CAAnB,EACfC,GAASF,KACTG,GAAUZ,GAAcW,IACxBE,GAAYf,GAAaa,ICEzBG,GANmB,SAACJ,GACtB,IAAMK,EAAaN,GAAaC,GAChC,OAAO,SAACvhB,GAAD,OAAQA,GAAK,GAAK,EACnB,GAAM4hB,EAAW5hB,GACjB,IAAO,EAAIyJ,KAAKoY,IAAI,GAAI,IAAM7hB,EAAI,IAFjC,CAGV,CACkB8hB,GCAbC,GAAe,CACjBC,OAAQxC,GACRsB,OAAAA,GACAE,UAAAA,GACAD,QAAAA,GACAE,OAAAA,GACAI,UAAAA,GACAD,QAAAA,GACAI,OAAAA,GACAE,UAAAA,GACAD,QAAAA,GACAE,WAAAA,IAEEM,GAA6B,SAACzN,GAChC,GAAIhS,MAAMC,QAAQ+R,GAAa,CAEjBA,EAAWnK,OACrB,eAAyBmK,EAAzB,GACA,OAAOsL,GADP,oBAEH,CACI,MAA0B,kBAAftL,GAEH,+BAAiEA,EAAjE,KACFuN,GAAavN,IAEjBA,CACV,EChCK0N,GAAgB,SAAC9Y,EAAM+Y,GAAP,OAAoB,SAAC5f,GACvC,OAAOW,QAAS8G,EAASzH,IAAMwH,EAAiB/B,KAAKzF,IAAMA,EAAEgG,WAAWa,IACnE+Y,GAAY1iB,OAAO0C,UAAUC,eAAeC,KAAKE,EAAG4f,GAC5D,CAHqB,EAIhBC,GAAa,SAACC,EAAOC,EAAOC,GAAf,OAAyB,SAAChgB,GAAM,MAC/C,IAAKyH,EAASzH,GACV,OAAOA,EACX,MAAyBA,EAAEigB,MAAM3Y,GAAjC,gBAAOb,EAAP,KAAUC,EAAV,KAAawZ,EAAb,KAAgBzX,EAAhB,KACA,uBACKqX,EAAQ9X,WAAWvB,KADxB,UAEKsZ,EAAQ/X,WAAWtB,KAFxB,UAGKsZ,EAAQhY,WAAWkY,KAHxB,uBAIqBhkB,IAAVuM,EAAsBT,WAAWS,GAAS,GAJrD,CAMH,CAVkB,ECFb0X,GAAepZ,EAAM,EAAG,KACxBqZ,GAAUljB,OAAOqL,OAAOrL,OAAOqL,OAAO,CAAC,EAAGC,IAAS,CAAE1B,UAAW,SAAC9G,GAAD,OAAOkH,KAAK2B,MAAMsX,GAAangB,GAA/B,IAChEqgB,GAAO,CACT5a,KAAMka,GAAc,MAAO,OAC3B5X,MAAO8X,GAAW,MAAO,QAAS,QAClC/Y,UAAW,gBAAGwZ,EAAH,EAAGA,IAAKC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,KAAf,IAAqB/X,MAAOgY,OAA5B,MAAsC,EAAtC,QAA8C,QACrDL,GAAQtZ,UAAUwZ,GAClB,KACAF,GAAQtZ,UAAUyZ,GAClB,KACAH,GAAQtZ,UAAU0Z,GAClB,KACArZ,EAASsB,GAAM3B,UAAU2Z,IACzB,GARO,GCsBf,IAAMC,GAAM,CACRjb,KAAMka,GAAc,KACpB5X,MA9BJ,SAAkB/H,GACd,IAAI2gB,EAAI,GACJC,EAAI,GACJla,EAAI,GACJD,EAAI,GAiBR,OAhBIzG,EAAE8H,OAAS,GACX6Y,EAAI3gB,EAAE6gB,OAAO,EAAG,GAChBD,EAAI5gB,EAAE6gB,OAAO,EAAG,GAChBna,EAAI1G,EAAE6gB,OAAO,EAAG,GAChBpa,EAAIzG,EAAE6gB,OAAO,EAAG,KAGhBF,EAAI3gB,EAAE6gB,OAAO,EAAG,GAChBD,EAAI5gB,EAAE6gB,OAAO,EAAG,GAChBna,EAAI1G,EAAE6gB,OAAO,EAAG,GAChBpa,EAAIzG,EAAE6gB,OAAO,EAAG,GAChBF,GAAKA,EACLC,GAAKA,EACLla,GAAKA,EACLD,GAAKA,GAEF,CACH6Z,IAAKQ,SAASH,EAAG,IACjBJ,MAAOO,SAASF,EAAG,IACnBJ,KAAMM,SAASpa,EAAG,IAClB+B,MAAOhC,EAAIqa,SAASra,EAAG,IAAM,IAAM,EAE1C,EAIGK,UAAWuZ,GAAKvZ,WC7Bdia,GAAO,CACTtb,KAAMka,GAAc,MAAO,OAC3B5X,MAAO8X,GAAW,MAAO,aAAc,aACvC/Y,UAAW,YAAwD,IAArDka,EAAqD,EAArDA,IAAKC,EAAgD,EAAhDA,WAAYC,EAAoC,EAApCA,UAAoC,IAAzBzY,MAAOgY,OAAkB,MAAR,EAAQ,EAC/D,MAAQ,QACJvZ,KAAK2B,MAAMmY,GACX,KACA9Y,GAAQpB,UAAUK,EAAS8Z,IAC3B,KACA/Y,GAAQpB,UAAUK,EAAS+Z,IAC3B,KACA/Z,EAASsB,GAAM3B,UAAU2Z,IACzB,GACP,GCbCU,GAAQ,CACV1b,KAAM,SAACzF,GAAD,OAAOqgB,GAAK5a,KAAKzF,IAAM0gB,GAAIjb,KAAKzF,IAAM+gB,GAAKtb,KAAKzF,EAAhD,EACN+H,MAAO,SAAC/H,GACJ,OAAIqgB,GAAK5a,KAAKzF,GACHqgB,GAAKtY,MAAM/H,GAEb+gB,GAAKtb,KAAKzF,GACR+gB,GAAKhZ,MAAM/H,GAGX0gB,GAAI3Y,MAAM/H,EAExB,EACD8G,UAAW,SAAC9G,GACR,OAAOyH,EAASzH,GACVA,EACAA,EAAEH,eAAe,OACbwgB,GAAKvZ,UAAU9G,GACf+gB,GAAKja,UAAU9G,EAC5B,GCpBCohB,GAAa,OACbC,GAAc,OAOpB,SAASC,GAAQthB,GACI,kBAANA,IACPA,EAAI,GAAH,OAAMA,IACX,IAAMkT,EAAS,GACXqO,EAAY,EACVC,EAASxhB,EAAEigB,MAAM1Y,GACnBia,IACAD,EAAYC,EAAO1Z,OACnB9H,EAAIA,EAAE+Q,QAAQxJ,EAAY6Z,IAC1BlO,EAAOjG,KAAP,MAAAiG,GAAM,QAASsO,EAAOC,IAAIN,GAAMpZ,UAEpC,IAAM2Z,EAAU1hB,EAAEigB,MAAM3Y,GAKxB,OAJIoa,IACA1hB,EAAIA,EAAE+Q,QAAQzJ,EAAY+Z,IAC1BnO,EAAOjG,KAAP,MAAAiG,GAAM,QAASwO,EAAQD,IAAIjZ,GAAOT,UAE/B,CAAEmL,OAAAA,EAAQqO,UAAAA,EAAWI,UAAW3hB,EAC1C,CACD,SAAS+H,GAAM/H,GACX,OAAOshB,GAAQthB,GAAGkT,MACrB,CACD,SAAS0O,GAAkB5hB,GACvB,MAAyCshB,GAAQthB,GAAzCkT,EAAR,EAAQA,OAAQqO,EAAhB,EAAgBA,UAAWI,EAA3B,EAA2BA,UACrBE,EAAY3O,EAAOpL,OACzB,OAAO,SAAC9H,GAEJ,IADA,IAAI8hB,EAASH,EACJ7E,EAAI,EAAGA,EAAI+E,EAAW/E,IAC3BgF,EAASA,EAAO/Q,QAAQ+L,EAAIyE,EAAYH,GAAaC,GAAavE,EAAIyE,EAAYJ,GAAMra,UAAU9G,EAAE8c,IAAM3V,EAASnH,EAAE8c,KAEzH,OAAOgF,CACV,CACJ,CACD,IAAMC,GAAuB,SAAC/hB,GAAD,MAAoB,kBAANA,EAAiB,EAAIA,CAAnC,EAM7B,IAAMgiB,GAAU,CAAEvc,KA5ClB,SAAczF,GACV,IAAIhE,EAAIimB,EAAIC,EAAIC,EAChB,OAAQC,MAAMpiB,IACVyH,EAASzH,KAC6E,QAApFiiB,EAAoC,QAA9BjmB,EAAKgE,EAAEigB,MAAM3Y,UAAgC,IAAPtL,OAAgB,EAASA,EAAG8L,cAA2B,IAAPma,EAAgBA,EAAK,IAA2F,QAApFE,EAAoC,QAA9BD,EAAKliB,EAAEigB,MAAM1Y,UAAgC,IAAP2a,OAAgB,EAASA,EAAGpa,cAA2B,IAAPqa,EAAgBA,EAAK,GAAK,CACvP,EAuCuBpa,MAAAA,GAAO6Z,kBAAAA,GAAmBS,kBALlD,SAA2BriB,GACvB,IAAMsiB,EAASva,GAAM/H,GAErB,OADoB4hB,GAAkB5hB,EAC/BuiB,CAAYD,EAAOb,IAAIM,IACjC,GCtCKS,GAAe,SAACjf,EAAKlG,GAEvB,MAAY,WAARkG,MAKiB,kBAAVlG,IAAsB4C,MAAMC,QAAQ7C,OAE1B,kBAAVA,IACP2kB,GAAQvc,KAAKpI,IACZA,EAAM2I,WAAW,SAKzB,ECzBKyc,GAAoB,iBAAO,CAC7B5b,KAAM,SACN6b,UAAW,IACXC,QAAS,GACTC,UAAW,GAJW,EAMpBC,GAAyB,SAACC,GAAD,MAAS,CACpCjc,KAAM,SACN6b,UAAW,IACXC,QAAgB,IAAPG,EAAW,EAAI5b,KAAK6b,KAAK,KAAO,GACzCH,UAAW,GAJgB,EAMzBI,GAAc,iBAAO,CACvBnc,KAAM,YACNoc,KAAM,SACNC,SAAU,GAHM,EAKdC,GAAY,SAACjQ,GAAD,MAAa,CAC3BrM,KAAM,YACNqc,SAAU,GACVhQ,OAAAA,EAHc,EAKZkQ,GAAqB,CACvBhd,EAAGqc,GACHpc,EAAGoc,GACHnc,EAAGmc,GACH5X,OAAQ4X,GACR3X,QAAS2X,GACT1X,QAAS0X,GACTzX,QAASyX,GACTxX,OAAQ4X,GACR3X,OAAQ2X,GACRna,MAAOma,GACPjX,QAASoX,GACTK,gBAAiBL,GACjB7B,MAAO6B,GACPra,QAASka,ICnCPS,GAAc,IAAIzd,IAAI,CAAC,aAAc,WAAY,WAAY,YACnE,SAAS0d,GAAmBvjB,GACxB,MAAoBA,EAAE/C,MAAM,GAAI,GAAG4K,MAAM,KAAzC,gBAAKpH,EAAL,KAAWpD,EAAX,KACA,GAAa,gBAAToD,EACA,OAAOT,EACX,MAAiB3C,EAAM4iB,MAAM3Y,IAAe,GAArCkB,GAAP,gBACA,IAAKA,EACD,OAAOxI,EACX,IAAM2H,EAAOtK,EAAM0T,QAAQvI,EAAQ,IAC/Bgb,EAAeF,GAAYne,IAAI1E,GAAQ,EAAI,EAG/C,OAFI+H,IAAWnL,IACXmmB,GAAgB,KACb/iB,EAAO,IAAM+iB,EAAe7b,EAAO,GAC7C,CACD,IAAM8b,GAAgB,oBAChBC,GAASxmB,OAAOqL,OAAOrL,OAAOqL,OAAO,CAAC,EAAGyZ,IAAU,CAAEK,kBAAmB,SAACriB,GACvE,IAAM2jB,EAAY3jB,EAAEigB,MAAMwD,IAC1B,OAAOE,EAAYA,EAAUlC,IAAI8B,IAAoBniB,KAAK,KAAOpB,CACpE,ICfC4jB,IAAoB,kBACnB9a,IADgB,IAGnBqY,MAAAA,GACAkC,gBAAiBlC,GACjB0C,aAAc1C,GACd2C,KAAM3C,GACN4C,OAAQ5C,GAER6C,YAAa7C,GACb8C,eAAgB9C,GAChB+C,iBAAkB/C,GAClBgD,kBAAmBhD,GACnBiD,gBAAiBjD,GACjBuC,OAAAA,GACAW,aAAcX,KAKZY,GAAsB,SAAC/gB,GAAD,OAASqgB,GAAkBrgB,EAA3B,ECvB5B,SAAS8e,GAAkB9e,EAAKlG,GAC5B,IAAIrB,EACAuoB,EAAmBD,GAAoB/gB,GAI3C,OAHIghB,IAAqBb,KACrBa,EAAmBvC,IAE8B,QAA7ChmB,EAAKuoB,EAAiBlC,yBAAsC,IAAPrmB,OAAgB,EAASA,EAAG8D,KAAKykB,EAAkBlnB,EACnH,CCVD,IAAMmnB,IACO,ECDPC,GAAmB,EAAI,GAAM,IAC7BC,GAAwC,qBAAhBC,YACxB,kBAAMA,YAAYC,KAAlB,EACA,kBAAMC,KAAKD,KAAX,EACAE,GAAgC,qBAAXjpB,OACrB,SAAC+b,GAAD,OAAc/b,OAAO+e,sBAAsBhD,EAA3C,EACA,SAACA,GAAD,OAAcmN,YAAW,kBAAMnN,EAAS8M,KAAf,GAAkCD,GAA3D,ECHN,IACIO,IAAoB,EACpBC,IAAe,EACfC,IAAe,EACbC,GAAQ,CACVC,MAAO,EACPC,UAAW,GAETC,GAAa,CACf,OACA,SACA,YACA,SACA,cAEEC,GAAQD,GAAW/M,QAAO,SAACiN,EAAKjiB,GAElC,OADAiiB,EAAIjiB,GCnBR,SAA0B0hB,GACtB,IAAIQ,EAAQ,GACRC,EAAiB,GACjBC,EAAW,EACXT,GAAe,EACfU,GAAiB,EACfC,EAAc,IAAIC,QAClBC,EAAO,CACTC,SAAU,SAACpO,GAAmD,IACpDqO,EADoD,yDACnBf,EACjCgB,EAASD,EAAoBR,EAAQC,EAQ3C,OAV0D,yDAItDG,EAAYM,IAAIvO,IACc,IAA9BsO,EAAO1gB,QAAQoS,KACfsO,EAAOjZ,KAAK2K,GACRqO,GAAqBf,IACrBS,EAAWF,EAAM3d,SAElB8P,CACV,EACDwO,OAAQ,SAACxO,GACL,IAAMyO,EAAQX,EAAelgB,QAAQoS,IACtB,IAAXyO,GACAX,EAAeY,OAAOD,EAAO,GACjCR,EAAYpM,OAAO7B,EACtB,EACD2O,QAAS,SAACC,GACN,GAAItB,EACAU,GAAiB,MADrB,CAIAV,GAAe,EALK,MAMM,CAACQ,EAAgBD,GAG3C,GAHCA,EANmB,MAMZC,EANY,MAOL5d,OAAS,EACxB6d,EAAWF,EAAM3d,OAEb,IAAK,IAAIgV,EAAI,EAAGA,EAAI6I,EAAU7I,IAAK,CAC/B,IAAMlF,EAAW6N,EAAM3I,GACvBlF,EAAS4O,GACLX,EAAY1gB,IAAIyS,KAChBmO,EAAKC,SAASpO,GACdqN,IAEP,CAELC,GAAe,EACXU,IACAA,GAAiB,EACjBG,EAAKQ,QAAQC,GAlBhB,CAoBJ,GAEL,OAAOT,CACV,CDlCcU,EAAiB,kBAAOxB,IAAe,CAAtB,IACrBO,CACV,GAAE,CAAC,GACEkB,GAAOpB,GAAW/M,QAAO,SAACiN,EAAKjiB,GACjC,IAAMwiB,EAAOR,GAAMhiB,GAMnB,OALAiiB,EAAIjiB,GAAO,SAACgjB,GAAkD,IAAzCI,EAAyC,wDAAtBC,EAAsB,wDAG1D,OAFK3B,IACD4B,KACGd,EAAKC,SAASO,EAASI,EAAWC,EAC5C,EACMpB,CACV,GAAE,CAAC,GACEsB,GAAaxB,GAAW/M,QAAO,SAACiN,EAAKjiB,GAEvC,OADAiiB,EAAIjiB,GAAOgiB,GAAMhiB,GAAK6iB,OACfZ,CACV,GAAE,CAAC,GACEuB,GAAYzB,GAAW/M,QAAO,SAACiN,EAAKjiB,GAEtC,OADAiiB,EAAIjiB,GAAO,kBAAMgiB,GAAMhiB,GAAKgjB,QAAQpB,GAAzB,EACJK,CACV,GAAE,CAAC,GACEwB,GAAc,SAACC,GAAD,OAAY1B,GAAM0B,GAAQV,QAAQpB,GAAlC,EACd+B,GAAe,SAAfA,EAAgB7B,GAClBJ,IAAe,EACfE,GAAMC,MAAQJ,GACRP,GACAvd,KAAKD,IAAIC,KAAKF,IAAIqe,EAAYF,GAAME,UAzC3B,IAyCmD,GAClEF,GAAME,UAAYA,EAClBH,IAAe,EACfI,GAAW9R,QAAQwT,IACnB9B,IAAe,EACXD,KACAD,IAAoB,EACpBF,GAAYoC,GAEnB,EACKL,GAAY,WACd5B,IAAe,EACfD,IAAoB,EACfE,IACDJ,GAAYoC,GACnB,EACKC,GAAe,kBAAMhC,EAAN,EAErB,ME5DA,SAASiC,GAAMxP,EAAUyP,GACrB,IAAMjnB,EAAQukB,YAAYC,MACpB0C,EAAe,SAAfA,EAAgB,GAAkB,IAC9BC,EAD8B,EAAhBlC,UACQjlB,EACxBmnB,GAAWF,IACXP,GAAWU,KAAKF,GAChB1P,EAAS2P,EAAUF,GAE1B,EAED,OADAX,GAAAA,KAAUY,GAAc,GACjB,kBAAMR,GAAWU,KAAKF,EAAtB,CACV,CCbD,IAAMvgB,GAAQ,SAACC,EAAKC,EAAKjH,GAAX,OAAiBkH,KAAKF,IAAIE,KAAKD,IAAIjH,EAAGgH,GAAMC,EAA5C,ECqBRuL,GAAM,SAACiV,EAAM3E,EAAI4E,GAAX,OAAyBA,EAAWD,EAAOC,EAAW5E,EAAK2E,CAA3D,ECpBZ,SAASE,GAASlqB,EAAGmqB,EAAGxK,GAKpB,OAJIA,EAAI,IACJA,GAAK,GACLA,EAAI,IACJA,GAAK,GACLA,EAAI,EAAI,EACD3f,EAAc,GAATmqB,EAAInqB,GAAS2f,EACzBA,EAAI,GACGwK,EACPxK,EAAI,EAAI,EACD3f,GAAKmqB,EAAInqB,IAAM,EAAI,EAAI2f,GAAK,EAChC3f,CACV,CCLD,IAAMoqB,GAAiB,SAACJ,EAAM3E,EAAI9iB,GAC9B,IAAM8nB,EAAWL,EAAOA,EACxB,OAAOvgB,KAAK6b,KAAK7b,KAAKD,IAAI,EAAGjH,GAAK8iB,EAAKA,EAAKgF,GAAYA,GAC3D,EACKC,GAAa,CAACrH,GAAKL,GAAMU,IAE/B,SAASiH,GAAO7G,GACZ,IAFkBnhB,EAEZ6G,GAFY7G,EAEQmhB,EAFF4G,GAAWE,MAAK,SAACphB,GAAD,OAAUA,EAAKpB,KAAKzF,EAApB,KAG9BW,QAAQkG,GAAT,WAAoBsa,EAApB,wEACT,IAAI+G,EAAQrhB,EAAKkB,MAAMoZ,GAIvB,OAHIta,IAASka,KACTmH,EDLR,YAA2D,IAArClH,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,WAAYC,EAAoB,EAApBA,UAAWzY,EAAS,EAATA,MAC9CuY,GAAO,IAEPE,GAAa,IACb,IAAIZ,EAAM,EACNC,EAAQ,EACRC,EAAO,EACX,GALAS,GAAc,IAQT,CACD,IAAM2G,EAAI1G,EAAY,GAChBA,GAAa,EAAID,GACjBC,EAAYD,EAAaC,EAAYD,EACrCxjB,EAAI,EAAIyjB,EAAY0G,EAC1BtH,EAAMqH,GAASlqB,EAAGmqB,EAAG5G,EAAM,EAAI,GAC/BT,EAAQoH,GAASlqB,EAAGmqB,EAAG5G,GACvBR,EAAOmH,GAASlqB,EAAGmqB,EAAG5G,EAAM,EAAI,EACnC,MAVGV,EAAMC,EAAQC,EAAOU,EAWzB,MAAO,CACHZ,IAAKpZ,KAAK2B,MAAY,IAANyX,GAChBC,MAAOrZ,KAAK2B,MAAc,IAAR0X,GAClBC,KAAMtZ,KAAK2B,MAAa,IAAP2X,GACjB/X,MAAAA,EAEP,CCpBe0f,CAAWD,IAEhBA,CACV,CACD,IAAME,GAAW,SAACX,EAAM3E,GACpB,IAAMuF,EAAWL,GAAOP,GAClBa,EAASN,GAAOlF,GAChByF,GAAU,UAAKF,GACrB,OAAO,SAACroB,GAKJ,OAJAuoB,EAAQjI,IAAMuH,GAAeQ,EAAS/H,IAAKgI,EAAOhI,IAAKtgB,GACvDuoB,EAAQhI,MAAQsH,GAAeQ,EAAS9H,MAAO+H,EAAO/H,MAAOvgB,GAC7DuoB,EAAQ/H,KAAOqH,GAAeQ,EAAS7H,KAAM8H,EAAO9H,KAAMxgB,GAC1DuoB,EAAQ9f,MAAQ+J,GAAI6V,EAAS5f,MAAO6f,EAAO7f,MAAOzI,GAC3CqgB,GAAKvZ,UAAUyhB,EACzB,CACJ,EC5BD,SAASC,GAAStZ,EAAQvB,GACtB,MAAsB,kBAAXuB,EACA,SAAClP,GAAD,OAAOwS,GAAItD,EAAQvB,EAAQ3N,EAA3B,EAEFmhB,GAAM1b,KAAKyJ,GACTkZ,GAASlZ,EAAQvB,GAGjB8a,GAAWvZ,EAAQvB,EAEjC,CACD,IAAM+a,GAAW,SAACjB,EAAM3E,GACpB,IAAMhB,GAAS,QAAI2F,GACb5F,EAAYC,EAAOha,OACnB6gB,EAAalB,EAAKhG,KAAI,SAACmH,EAAU9L,GAAX,OAAiB0L,GAASI,EAAU9F,EAAGhG,GAAvC,IAC5B,OAAO,SAAC9c,GACJ,IAAK,IAAI8c,EAAI,EAAGA,EAAI+E,EAAW/E,IAC3BgF,EAAOhF,GAAK6L,EAAW7L,GAAG9c,GAE9B,OAAO8hB,CACV,CACJ,EACK+G,GAAY,SAAC3Z,EAAQvB,GACvB,IAAMmU,GAAS,kBAAK5S,GAAWvB,GACzBgb,EAAa,CAAC,EACpB,IAAK,IAAMplB,KAAOue,OACM5lB,IAAhBgT,EAAO3L,SAAsCrH,IAAhByR,EAAOpK,KACpColB,EAAWplB,GAAOilB,GAAStZ,EAAO3L,GAAMoK,EAAOpK,KAGvD,OAAO,SAACvD,GACJ,IAAK,IAAMuD,KAAOolB,EACd7G,EAAOve,GAAOolB,EAAWplB,GAAKvD,GAElC,OAAO8hB,CACV,CACJ,EAID,SAASR,GAAQjkB,GAKb,IAJA,IAAMilB,EAASN,GAAQja,MAAM1K,GACvBwkB,EAAYS,EAAOxa,OACrBghB,EAAa,EACbvH,EAAY,EACPzE,EAAI,EAAGA,EAAI+E,EAAW/E,IAGvBgM,GAAmC,kBAAdxG,EAAOxF,GAC5BgM,IAGAvH,IAGR,MAAO,CAAEe,OAAAA,EAAQwG,WAAAA,EAAYvH,UAAAA,EAChC,CACD,IAAMkH,GAAa,SAACvZ,EAAQvB,GACxB,IAAMob,EAAW/G,GAAQJ,kBAAkBjU,GACrCqb,EAAc1H,GAAQpS,GACtB+Z,EAAc3H,GAAQ3T,GAG5B,OAFuBqb,EAAYzH,YAAc0H,EAAY1H,WACzDyH,EAAYF,YAAcG,EAAYH,WAE/BzQ,GAAKqQ,GAASM,EAAY1G,OAAQ2G,EAAY3G,QAASyG,IAGvD,0BAA0B7Z,EAA1B,kBAA0CvB,EAA1C,4KACA,SAAClQ,GAAD,gBAAUA,EAAI,EAAIkQ,EAASuB,EAA3B,EAEd,EChEKwY,GAAW,SAACD,EAAM3E,EAAIzlB,GACxB,IAAM6rB,EAAmBpG,EAAK2E,EAC9B,OAA4B,IAArByB,EAAyB,GAAK7rB,EAAQoqB,GAAQyB,CACxD,ECNKC,GAAY,SAAC1B,EAAM3E,GAAP,OAAc,SAACrlB,GAAD,OAAO+U,GAAIiV,EAAM3E,EAAIrlB,EAArB,CAAd,EAqBlB,SAAS2rB,GAAatH,EAAQmB,EAAMoG,GAIhC,IAHA,IArBwBrpB,EAqBlBspB,EAAS,GACTC,EAAeF,IArBJ,kBADOrpB,EAsB+B8hB,EAAO,IApBnDqH,GAEW,kBAANnpB,EACRmhB,GAAM1b,KAAKzF,GACJooB,GAGAK,GAGNxoB,MAAMC,QAAQF,GACZ0oB,GAEW,kBAAN1oB,EACL6oB,GAEJM,IAKDK,EAAY1H,EAAOha,OAAS,EACzBgV,EAAI,EAAGA,EAAI0M,EAAW1M,IAAK,CAChC,IAAI2M,EAAQF,EAAazH,EAAOhF,GAAIgF,EAAOhF,EAAI,IAC/C,GAAImG,EAAM,CACN,IAAMyG,EAAiBzpB,MAAMC,QAAQ+iB,GAAQA,EAAKnG,GAAKmG,EACvDwG,EAAQpR,GAAKqR,EAAgBD,EAChC,CACDH,EAAOrc,KAAKwc,EACf,CACD,OAAOH,CACV,CAoBD,SAASK,GAAYC,EAAO9H,GAAqD,6DAAJ,CAAC,EAAG,IAA3C/a,MAAO8iB,OAAoC,SAApB5G,EAAoB,EAApBA,KAAMwG,EAAc,EAAdA,MACzDK,EAAcF,EAAM9hB,OACAga,EAAOha,QACtBmb,IAAShjB,MAAMC,QAAQ+iB,IAASA,EAAKnb,OAE5C8hB,EAAM,GAAKA,EAAME,EAAc,KAC/BF,GAAQ,QAAIA,GAAOG,UACnBjI,GAAS,QAAIA,GAAQiI,WAEzB,IAAMT,EAASF,GAAatH,EAAQmB,EAAMwG,GACpCD,EAAYF,EAAOxhB,OACnBkiB,EAAe,SAAChqB,GAClB,IAAI8c,EAAI,EACR,GAAI0M,EAAY,EACZ,KAAO1M,EAAI8M,EAAM9hB,OAAS,KAClB9H,EAAI4pB,EAAM9M,EAAI,IADOA,KAKjC,IAAMmN,EAAkBvC,GAASkC,EAAM9M,GAAI8M,EAAM9M,EAAI,GAAI9c,GACzD,OAAOspB,EAAOxM,GAAGmN,EACpB,EACD,OAAOJ,EACD,SAAC7pB,GAAD,OAAOgqB,EAAajjB,GAAM6iB,EAAM,GAAIA,EAAME,EAAc,GAAI9pB,GAA5D,EACAgqB,CACT,CCrFD,SAASE,GAAchX,EAAQmL,GAC3B,OAAOnL,EAAOuO,KAAI,kBAAMpD,GAAUI,EAAhB,IAA2B6H,OAAO,EAAGpT,EAAOpL,OAAS,EAC1E,CCFD,IAAMqiB,GAAU,KAKhB,SAASC,GAAT,GAAgF,IACxEC,EACAC,EAFwE,IAA1DpH,SAAAA,OAA0D,MAA/C,IAA+C,MAA1CqH,OAAAA,OAA0C,MAAjC,IAAiC,MAA3BC,SAAAA,OAA2B,MAAhB,EAAgB,MAAbC,KAAAA,OAAa,MAAN,EAAM,EAIxEC,EAAe,EAAIH,EAIvBG,EAAe3jB,GAVA,IACA,EAS8B2jB,GAC7CxH,EAAWnc,GAbK,IACA,GAY2Bmc,EAAW,KAClDwH,EAAe,GAIfL,EAAW,SAACM,GACR,IAAMC,EAAmBD,EAAeD,EAClCtF,EAAQwF,EAAmB1H,EAC3Bzc,EAAImkB,EAAmBJ,EACvB9jB,EAAImkB,GAAgBF,EAAcD,GAClCxK,EAAIhZ,KAAK4jB,KAAK1F,GACpB,OAAO+E,GAAW1jB,EAAIC,EAAKwZ,CAC9B,EACDoK,EAAa,SAACK,GACV,IACMvF,EADmBuF,EAAeD,EACPxH,EAC3B6H,EAAI3F,EAAQoF,EAAWA,EACvBvW,EAAI/M,KAAKoY,IAAIoL,EAAc,GAAKxjB,KAAKoY,IAAIqL,EAAc,GAAKzH,EAC5D8H,EAAI9jB,KAAK4jB,KAAK1F,GACdxE,EAAIiK,GAAgB3jB,KAAKoY,IAAIqL,EAAc,GAAID,GAErD,QADgBL,EAASM,GAAgBR,GAAU,GAAK,EAAI,KACzCY,EAAI9W,GAAK+W,GAAMpK,CACrC,IAMDyJ,EAAW,SAACM,GAGR,OAFUzjB,KAAK4jB,KAAKH,EAAezH,KACxByH,EAAeH,GAAYtH,EAAW,GAC1C,IACV,EACDoH,EAAa,SAACK,GAGV,OAFUzjB,KAAK4jB,KAAKH,EAAezH,IACIA,EAAWA,GAAvCsH,EAAWG,GAEzB,GAEL,IACMA,EAmBV,SAAyBN,EAAUC,EAAYW,GAE3C,IADA,IAAIC,EAASD,EACJnO,EAAI,EAAGA,EAHG,GAGiBA,IAChCoO,GAAkBb,EAASa,GAAUZ,EAAWY,GAEpD,OAAOA,CACV,CAzBwBC,CAAgBd,EAAUC,EAD1B,EAAIpH,GAGzB,GADAA,GAAsB,IAClBd,MAAMuI,GACN,MAAO,CACHjI,UAAW,IACXC,QAAS,GACTO,SAAAA,GAIJ,IAAMR,EAAYxb,KAAKoY,IAAIqL,EAAc,GAAKF,EAC9C,MAAO,CACH/H,UAAAA,EACAC,QAAwB,EAAf+H,EAAmBxjB,KAAK6b,KAAK0H,EAAO/H,GAC7CQ,SAAAA,EAGX,CASD,SAAS2H,GAAgBF,EAAcD,GACnC,OAAOC,EAAezjB,KAAK6b,KAAK,EAAI2H,EAAeA,EACtD,C,6CCnFKU,GAAe,CAAC,WAAY,UAC5BC,GAAc,CAAC,YAAa,UAAW,QAC7C,SAASC,GAAahf,EAAS8D,GAC3B,OAAOA,EAAK5P,MAAK,SAAC+C,GAAD,YAA0BrH,IAAjBoQ,EAAQ/I,EAAjB,GACpB,CA2BD,SAASgoB,GAAT,GAAuF,QAArE9D,KAAAA,OAAqE,MAA9D,EAA8D,MAAzD3E,GAAAA,OAAyD,MAApD,EAAoD,MAA/CF,UAAAA,OAA+C,MAAnC,EAAmC,MAAhC4I,UAAAA,OAAgC,MAApB,IAAoB,EAAXlf,GAAW,cAK7EhQ,EAAQ,CAAEmvB,MAAM,EAAOpuB,MAAOoqB,GACpC,EAhCJ,SAA0Bnb,GACtB,IAAIof,GAAgB,QAChBlB,SAAU,EACV9H,UAAW,IACXC,QAAS,GACT8H,KAAM,EACNkB,wBAAwB,GACrBrf,GAGP,IAAKgf,GAAahf,EAAS+e,KACvBC,GAAahf,EAAS8e,IAAe,CACrC,IAAMQ,EAAUxB,GAAW9d,IAC3Bof,GAAgB,0BACTA,GACAE,GAFM,IAGTpB,SAAU,EACVC,KAAM,KAEIkB,wBAAyB,CAC1C,CACD,OAAOD,CACV,CAUmFG,CAAiBvf,GAA3FoW,EAAN,EAAMA,UAAWC,EAAjB,EAAiBA,QAAS8H,EAA1B,EAA0BA,KAAMD,EAAhC,EAAgCA,SAAUtH,EAA1C,EAA0CA,SAAUyI,EAApD,EAAoDA,uBAChDG,EAAgBC,GAChBC,EAAkBD,GACtB,SAASE,IACL,IAAMC,EAAkB1B,GAAaA,EAAW,IAAQ,EAClD2B,EAAerJ,EAAK2E,EACpBiD,EAAe/H,GAAW,EAAIzb,KAAK6b,KAAKL,EAAY+H,IACpD2B,EAAsBllB,KAAK6b,KAAKL,EAAY+H,GAAQ,IAQ1D,QAHkBvuB,IAAdsvB,IACAA,EAAYtkB,KAAKF,IAAIE,KAAKgX,IAAI4E,EAAK2E,GAAQ,IAAK,KAEhDiD,EAAe,EAAG,CAClB,IAAM2B,EAAcxB,GAAgBuB,EAAqB1B,GAEzDoB,EAAgB,SAAC1O,GACb,IAAMiN,EAAWnjB,KAAK4jB,KAAKJ,EAAe0B,EAAsBhP,GAChE,OAAQ0F,EACJuH,IACO6B,EACCxB,EAAe0B,EAAsBD,GACrCE,EACAnlB,KAAKyX,IAAI0N,EAAcjP,GACvB+O,EAAejlB,KAAKolB,IAAID,EAAcjP,GACrD,EACD4O,EAAkB,SAAC5O,GAEf,IAAMiN,EAAWnjB,KAAK4jB,KAAKJ,EAAe0B,EAAsBhP,GAChE,OAAQsN,EACJ0B,EACA/B,GACEnjB,KAAKyX,IAAI0N,EAAcjP,IACpB8O,EACGxB,EACI0B,EACAD,GACRE,EACAF,EAAejlB,KAAKolB,IAAID,EAAcjP,IAC1CiN,GACKnjB,KAAKolB,IAAID,EAAcjP,IACnB8O,EACGxB,EACI0B,EACAD,GACRE,EACIF,EACAjlB,KAAKyX,IAAI0N,EAAcjP,GAC1C,CACJ,MACI,GAAqB,IAAjBsN,EAELoB,EAAgB,SAAC1O,GAAD,OAAO0F,EACnB5b,KAAK4jB,KAAKsB,EAAsBhP,IAC3B+O,GACID,EAAkBE,EAAsBD,GACrC/O,EAJA,MAMf,CAED,IAAMmP,EAAoBH,EAAsBllB,KAAK6b,KAAK2H,EAAeA,EAAe,GACxFoB,EAAgB,SAAC1O,GACb,IAAMiN,EAAWnjB,KAAK4jB,KAAKJ,EAAe0B,EAAsBhP,GAE1DoP,EAAWtlB,KAAKF,IAAIulB,EAAoBnP,EAAG,KACjD,OAAQ0F,EACHuH,IACK6B,EACExB,EAAe0B,EAAsBD,GACrCjlB,KAAKulB,KAAKD,GACVD,EACIJ,EACAjlB,KAAKwlB,KAAKF,IAClBD,CACX,CACJ,CACJ,CAED,OADAN,IACO,CACHtP,KAAM,SAACS,GACH,IAAMne,EAAU6sB,EAAc1O,GAC9B,GAAKuO,EAQDrvB,EAAMmvB,KAAOrO,GAAK8F,MARO,CACzB,IAAM/Q,EAAuC,IAArB6Z,EAAgB5O,GAClCuP,EAA2BzlB,KAAKgX,IAAI/L,IAAoByQ,EACxDgK,EAA+B1lB,KAAKgX,IAAI4E,EAAK7jB,IAAYusB,EAC/DlvB,EAAMmvB,KACFkB,GAA4BC,CACnC,CAKD,OADAtwB,EAAMe,MAAQf,EAAMmvB,KAAO3I,EAAK7jB,EACzB3C,CACV,EACDuwB,WAAY,WACRrC,GAAYA,EADE,MAED,CAAC1H,EAAI2E,GAAjBA,EAFa,KAEP3E,EAFO,KAGdmJ,GACH,EAER,CACDV,GAAOuB,mBAAqB,SAACrmB,EAAGC,GAAJ,MAAuB,kBAAND,GAA+B,kBAANC,CAA1C,EAC5B,IAAMqlB,GAAO,SAACgB,GAAD,OAAQ,CAAR,E,8ICzIPC,GAAQ,CAAEC,MCNhB,YAA4G,QAA3FzC,SAAAA,OAA2F,MAAhF,EAAgF,MAA7E/C,KAAAA,OAA6E,MAAtE,EAAsE,MAAnEzI,MAAAA,OAAmE,MAA3D,GAA2D,MAAtDkO,aAAAA,OAAsD,MAAvC,IAAuC,MAAlC1B,UAAAA,OAAkC,MAAtB,GAAsB,EAAjB2B,EAAiB,EAAjBA,aAKjF7wB,EAAQ,CAAEmvB,MAAM,EAAOpuB,MAAOoqB,GAChC2F,EAAYpO,EAAQwL,EAClB6C,EAAQ5F,EAAO2F,EACfzf,OAA0BzR,IAAjBixB,EAA6BE,EAAQF,EAAaE,GAOjE,OAFI1f,IAAW0f,IACXD,EAAYzf,EAAS8Z,GAClB,CACH9K,KAAM,SAACS,GACH,IAAMgI,GAASgI,EAAYlmB,KAAK4jB,KAAK1N,EAAI8P,GAGzC,OAFA5wB,EAAMmvB,OAASrG,EAAQoG,GAAapG,GAASoG,GAC7ClvB,EAAMe,MAAQf,EAAMmvB,KAAO9d,EAASA,EAASyX,EACtC9oB,CACV,EACDuwB,WAAY,WAAS,EAE5B,EDlBsB1J,UHOvB,YAAwE,QAAnDsE,KAAAA,OAAmD,MAA5C,EAA4C,MAAzC3E,GAAAA,OAAyC,MAApC,EAAoC,EAAjCG,EAAiC,EAAjCA,KAAM9T,EAA2B,EAA3BA,OAA2B,IAAnB+T,SAAAA,OAAmB,MAAR,IAAQ,EAK9D5mB,EAAQ,CAAEmvB,MAAM,EAAOpuB,MAAOoqB,GAI9BvU,EAASjT,MAAMC,QAAQ4iB,GAAMA,EAAK,CAAC2E,EAAM3E,GAIzCwK,EAhBV,SAA8Bne,EAAQ+T,GAClC,OAAO/T,EAAOsS,KAAI,SAAC8L,GAAD,OAAOA,EAAIrK,CAAX,GACrB,CAciBsK,CAGdre,GAAUA,EAAOrH,SAAWoL,EAAOpL,OAC7BqH,EAxBV,SAAuB+D,GACnB,IAAM2O,EAAY3O,EAAOpL,OACzB,OAAOoL,EAAOuO,KAAI,SAACgM,EAAQ3Q,GAAT,OAAqB,IAANA,EAAUA,GAAK+E,EAAY,GAAK,CAA/C,GACrB,CAsBS6L,CAAcxa,GAASgQ,GAC7B,SAASyK,IACL,OAAOhE,GAAY2D,EAAOpa,EAAQ,CAC9B+P,KAAMhjB,MAAMC,QAAQ+iB,GAAQA,EAAOiH,GAAchX,EAAQ+P,IAEhE,CACD,IAAI+G,EAAe2D,IACnB,MAAO,CACHhR,KAAM,SAACS,GAGH,OAFA9gB,EAAMe,MAAQ2sB,EAAa5M,GAC3B9gB,EAAMmvB,KAAOrO,GAAK8F,EACX5mB,CACV,EACDuwB,WAAY,WACR3Z,EAAO6W,UACPC,EAAe2D,GAClB,EAER,EG3CiCpC,OAAAA,IAClC,SAASqC,GAAYrG,EAASrE,GAAqB,IAAXkE,EAAW,uDAAH,EAC5C,OAAOG,EAAUrE,EAAWkE,CAC/B,CASD,IAAMyG,GAAY,SAACC,GACf,IAAMC,EAAgB,SAAC,GAAD,IAAG3I,EAAH,EAAGA,MAAH,OAAe0I,EAAO1I,EAAtB,EACtB,MAAO,CACHhlB,MAAO,kBAAMsmB,GAAAA,OAAYqH,GAAe,EAAjC,EACPC,KAAM,kBAAMlH,GAAWgH,OAAOC,EAAxB,EAEb,EACD,SAASxtB,GAAT,GAA0N,IAClNvE,EAAIimB,EAEJgM,EAIAC,EAGAC,EAVW1G,EAAuM,EAAvMA,KAAuM,IAAjM2G,SAAAA,OAAiM,aAAhLC,OAAAA,OAAgL,MAAvKR,GAAuK,MAA5JtG,QAAAA,OAA4J,MAAlJ,EAAkJ,MAA/I+G,OAAQC,OAAuI,MAA3H,EAA2H,MAAxHC,WAAAA,OAAwH,MAA3G,OAA2G,MAAnGC,YAAAA,OAAmG,MAArF,EAAqF,EAAlFC,EAAkF,EAAlFA,OAAQC,EAA0E,EAA1EA,OAAQC,EAAkE,EAAlEA,WAAYC,EAAsD,EAAtDA,SAAUC,EAA4C,EAA5CA,SAA4C,IAAlCjoB,KAAAA,OAAkC,MAA3B,YAA2B,EAAXyF,GAAW,cAEhNwW,EAAOxW,EAAPwW,GAEFiM,EAAc,EACdC,EAAmB1iB,EAClB4W,SAED+L,GAAa,EACbC,GAAoB,EAElBC,EAAWnC,GAAM/sB,MAAMC,QAAQ4iB,GAAM,YAAcjc,IACP,QAA7Cob,GAAMjmB,EAAKmzB,GAAUrC,0BAAuC,IAAP7K,OAAgB,EAASA,EAAGniB,KAAK9D,EAAIyrB,EAAM3E,MACjGqL,EAAwBxE,GAAY,CAAC,EAAG,KAAM,CAAClC,EAAM3E,GAAK,CACtD/b,OAAO,IAEX0gB,EAAO,EACP3E,EAAK,KAET,IAAMphB,EAAYytB,GAAS,kBAAK7iB,GAAN,IAAemb,KAAAA,EAAM3E,GAAAA,KAC/C,SAASwL,IACLS,IACmB,YAAfP,EAEAjH,EAvCZ,SAAwBA,GAA4D,IAAnDrE,EAAmD,uDAAxC,EAAGkE,EAAqC,uDAA7B,EACnD,OADgF,yDAG1ElE,GAAYqE,EAAUrE,GAAYkE,EADlCwG,GAAY1K,GAAYqE,EAASrE,EAAUkE,EAEpD,CAmCqBgI,CAAe7H,EAASyH,EAAkBP,EADpDS,EAAoBH,EAAc,IAAM,IAIxCxH,EAAUqG,GAAYrG,EAASyH,EAAkBP,GAC9B,WAAfD,GACA9sB,EAAUmrB,cAElBoC,GAAa,EACbJ,GAAYA,GACf,CAKD,SAASf,EAAO1I,GAIZ,GAHK8J,IACD9J,GAASA,GACbmC,GAAWnC,GACN6J,EAAY,CACb,IAAM3yB,EAAQoF,EAAUib,KAAKzV,KAAKD,IAAI,EAAGsgB,IACzC2G,EAAS5xB,EAAMe,MACX8wB,IACAD,EAASC,EAAsBD,IACnCe,EAAaC,EAAoB5yB,EAAMmvB,KAAOlE,GAAW,CAC5D,CACY,OAAbuH,QAAkC,IAAbA,GAA+BA,EAASZ,GACzDe,IACoB,IAAhBF,IACqB,OAArBC,QAAkD,IAArBA,IAAkDA,EAAmBzH,IAClGwH,EAAcR,EA/D9B,SAA+BhH,EAASrE,EAAUkE,EAAO8H,GACrD,OAAOA,EAAoB3H,GAAWrE,EAAWkE,EAAQG,IAAYH,CACxE,CA8DeiI,CAAsB9H,EAASyH,EAAkBP,EAAaS,IAAsBZ,KAnB5FL,EAAeD,OACfY,GAAcA,KAwBjB,CAOD,OADAR,IAJe,OAAXM,QAA8B,IAAXA,GAA6BA,KAChDT,EAAiBI,EAAOP,IACT1tB,SAGZ,CACH4tB,KAAM,WACS,OAAXW,QAA8B,IAAXA,GAA6BA,IAChDV,EAAeD,MAClB,EAER,CE5FD,SAASsB,GAAkB9E,EAAU+E,GACjC,OAAOA,EAAgB/E,GAAY,IAAO+E,GAAiB,CAC9D,C,iKCgBD,SAASC,GAAT,GAA+F,IAAhDvM,EAAgD,EAAhDA,KAAMqK,EAA0C,EAA1CA,MAAOmC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,KAAShc,GAAc,cACrFrH,GAAU,UAAKqH,GA+CrB,OA9CI2Z,IACAhhB,EAAO,OAAaghB,GAIpB3Z,EAAWuP,WACX5W,EAAO,SAAeyQ,GAAsBpJ,EAAWuP,WACvDvP,EAAW8a,cACXniB,EAAQmiB,YAAc1R,GAAsBpJ,EAAW8a,cAIvDxL,IACA3W,EAAO,K9BJO,SAAC2W,GACnB,OAAOhjB,MAAMC,QAAQ+iB,IAA4B,kBAAZA,EAAK,EAC7C,C8BEyB2M,CAAc3M,GAC1BA,EAAKxB,IAAI/B,IACTA,GAA2BuD,IAKb,UAApBtP,EAAW9M,OACXyF,EAAQzF,KAAO,cAIf4oB,GAAQE,GAAQD,MAEM,EAClBD,EACAnjB,EAAQkiB,WAAa,UAEhBmB,EACLrjB,EAAQkiB,WAAa,OAEhBkB,IACLpjB,EAAQkiB,WAAa,UAEzBliB,EAAQgiB,OAASqB,GAAQF,GAAQC,GAAQ/b,EAAW2a,QAOhC,WAApB3a,EAAW9M,OACXyF,EAAQzF,KAAO,aACZyF,CACV,CAID,SAASujB,GAAuBlc,EAAYpQ,GACxC,IAAIvH,EAAIimB,EAER,OAAiG,QAAzFA,EAAsC,QAAhCjmB,GADU8zB,GAAmBnc,EAAYpQ,IAAQ,CAAC,GAC7B6jB,aAA0B,IAAPprB,EAAgBA,EAAK2X,EAAWyT,aAA0B,IAAPnF,EAAgBA,EAAK,CACjI,CAQD,SAAS8N,GAA6Bpc,EAAYrH,EAAS/I,GAcvD,OAbItD,MAAMC,QAAQoM,EAAQwW,UAA+B5mB,IAAxByX,EAAWuP,WACxCvP,EAAWuP,SAAW,IAT9B,SAA0B5W,GAClBrM,MAAMC,QAAQoM,EAAQwW,KAAyB,OAAlBxW,EAAQwW,GAAG,KACxCxW,EAAQwW,IAAR,QAAiBxW,EAAQwW,IACzBxW,EAAQwW,GAAG,GAAKxW,EAAQmb,KAG/B,CAKGuI,CAAiB1jB,GA5ErB,YAA8J,EAA/H2jB,KAA+H,EAAzH7I,MAAyH,EAA1G8I,cAA0G,EAA3FC,gBAA2F,EAA1EC,iBAA0E,EAAxD9B,OAAwD,EAAhDE,WAAgD,EAApCC,YAAoC,EAAvBhH,KAAuB,IAAd9T,GAAc,cAC1J,QAASzW,OAAOkT,KAAKuD,GAAY7L,MACpC,CA8EQuoB,CAAoB1c,KACrBA,GAAa,kBACNA,GtB3Dc,SAAC2c,EAAUxN,GACpC,IAAIyN,EAQJ,OANIA,EADAne,GAAkB0Q,GACEK,GAIhBC,GAAmBkN,IAAalN,GAAmBza,SAE3D,QAASma,GAAAA,GAAOyN,EAAkBzN,GACrC,CsBkDc0N,CAAqBjtB,EAAK+I,EAAQwW,OAG7C,kBACOxW,GACAkjB,GAAoC7b,GAE9C,CAID,SAAS8c,GAAaltB,EAAKlG,EAAOsQ,EAAQgG,EAAYib,GAClD,IAAM8B,EAAkBZ,GAAmBnc,EAAYpQ,IAAQ,CAAC,EAC5D2L,OAAkChT,IAAzBw0B,EAAgBjJ,KAAqBiJ,EAAgBjJ,KAAOpqB,EAAM4H,MACzE0rB,EAAqBnO,GAAajf,EAAKoK,GAC9B,SAAXuB,GAAqByhB,GAAwC,kBAAXhjB,EAKlDuB,EAASmT,GAAkB9e,EAAKoK,GAE3BijB,GAAO1hB,IAA6B,kBAAXvB,EAC9BuB,EAAS2hB,GAAYljB,IAEf1N,MAAMC,QAAQyN,IACpBijB,GAAOjjB,IACW,kBAAXuB,IACPvB,EAASkjB,GAAY3hB,IAEzB,IAAM4hB,EAAqBtO,GAAajf,EAAK2L,GAiC7C,MAhCO,oCAAyE3L,EAAzE,kBAAsF2L,EAAtF,iBAAqGvB,EAArG,cAAiHuB,EAAjH,sEAAqLA,EAArL,qCAAwNvB,EAAxN,8BAgCCmjB,GACHH,IACwB,IAAzBD,EAAgB7pB,KAjCpB,WACI,IAAMyF,EAAU,CACZmb,KAAMvY,EACN4T,GAAInV,EACJ6c,SAAUntB,EAAM6I,cAChB0oB,WAAAA,EACAE,SAAU,SAAC9uB,GAAD,OAAO3C,EAAM+H,IAAIpF,EAAjB,GAEd,MAAgC,YAAzB0wB,EAAgB7pB,MACM,UAAzB6pB,EAAgB7pB,KCzI5B,YAAuM,IAC/LkqB,EAD+L,IAApLtJ,KAAAA,OAAoL,MAA7K,EAA6K,MAA1K+C,SAAAA,OAA0K,MAA/J,EAA+J,EAA5JxjB,EAA4J,EAA5JA,IAAKC,EAAuJ,EAAvJA,IAAuJ,IAAlJ+X,MAAAA,OAAkJ,MAA1I,GAA0I,MAArIkO,aAAAA,OAAqI,MAAtH,IAAsH,MAAjH8D,gBAAAA,OAAiH,MAA/F,IAA+F,MAA1FC,cAAAA,OAA0F,MAA1E,GAA0E,MAAtEzF,UAAAA,OAAsE,MAA1D,EAA0D,EAAvD2B,EAAuD,EAAvDA,aAAckB,EAAyC,EAAzCA,OAAQS,EAAiC,EAAjCA,SAAUF,EAAuB,EAAvBA,WAAYD,EAAW,EAAXA,OAExL,SAASuC,EAAclxB,GACnB,YAAgB9D,IAAR8K,GAAqBhH,EAAIgH,QAAiB9K,IAAR+K,GAAqBjH,EAAIiH,CACtE,CACD,SAASkqB,EAAgBnxB,GACrB,YAAY9D,IAAR8K,EACOC,OACC/K,IAAR+K,GAEGC,KAAKgX,IAAIlX,EAAMhH,GAAKkH,KAAKgX,IAAIjX,EAAMjH,GAD/BgH,EAC0CC,CACxD,CACD,SAASmqB,EAAe9kB,GACC,OAArBykB,QAAkD,IAArBA,GAAuCA,EAAiB/C,OACrF+C,EAAmBxwB,IAAQ,kBACpB+L,GADmB,IAEtB+hB,OAAAA,EACAS,SAAU,SAAC9uB,GACP,IAAIhE,EACS,OAAb8yB,QAAkC,IAAbA,GAA+BA,EAAS9uB,GACjC,QAA3BhE,EAAKsQ,EAAQwiB,gBAA6B,IAAP9yB,GAAyBA,EAAG8D,KAAKwM,EAAStM,EACjF,EACD4uB,WAAAA,EACAD,OAAAA,IAEP,CACD,SAAS0C,EAAY/kB,GACjB8kB,GAAe,QACXvqB,KAAM,SACN6b,UAAWsO,EACXrO,QAASsO,EACTzF,UAAAA,GACGlf,GAEV,CACD,GAAI4kB,EAAczJ,GAEd4J,EAAY,CAAE5J,KAAAA,EAAM+C,SAAAA,EAAU1H,GAAIqO,EAAgB1J,SAEjD,CASD,IAAI9Z,EAASqR,EAAQwL,EAAW/C,EACJ,qBAAjB0F,IACPxf,EAASwf,EAAaxf,IAC1B,IAEIiP,EACA3d,EAHEqyB,EAAWH,EAAgBxjB,GAC3B4jB,EAAUD,IAAatqB,GAAO,EAAI,EAYxCoqB,EAAe,CACXvqB,KAAM,QACN4gB,KAAAA,EACA+C,SAAAA,EACA0C,aAAAA,EACAlO,MAAAA,EACAwM,UAAAA,EACA2B,aAAAA,EACA2B,SAAUoC,EAAcvjB,GAjBN,SAAC3N,GACnB4c,EAAO3d,EACPA,EAAUe,EACVwqB,EAAW8E,GAAkBtvB,EAAI4c,EAAMuK,KAAe/B,QACrC,IAAZmM,GAAiBvxB,EAAIsxB,IACR,IAAbC,GAAkBvxB,EAAIsxB,IACvBD,EAAY,CAAE5J,KAAMznB,EAAG8iB,GAAIwO,EAAU9G,SAAAA,GAE5C,OASqDtuB,GAEzD,CACD,MAAO,CACH8xB,KAAM,kBAA2B,OAArB+C,QAAkD,IAArBA,OAA8B,EAASA,EAAiB/C,MAA3F,EAEb,CD4DawD,EAAQ,kBAAKllB,GAAYokB,IACzBnwB,IAAQ,kBACHwvB,GAA6BW,EAAiBpkB,EAAS/I,IADrD,IAELurB,SAAU,SAAC9uB,GACPsM,EAAQwiB,SAAS9uB,GACjB0wB,EAAgB5B,UAAY4B,EAAgB5B,SAAS9uB,EACxD,EACD4uB,WAAY,WACRtiB,EAAQsiB,aACR8B,EAAgB9B,YAAc8B,EAAgB9B,YACjD,IAEZ,EACD,WACI,IAAM6C,EAAcpf,GAA6B1E,GAKjD,OAJAtQ,EAAM+H,IAAIqsB,GACV7C,IACA8B,EAAgB5B,UAAY4B,EAAgB5B,SAAS2C,GACrDf,EAAgB9B,YAAc8B,EAAgB9B,aACvC,CAAEZ,KAAM,WAAS,EAC3B,CAMJ,CACD,SAAS4C,GAAOvzB,GACZ,OAAkB,IAAVA,GACc,kBAAVA,GACkB,IAAtB2K,WAAW3K,KACa,IAAxBA,EAAMmI,QAAQ,IACzB,CACD,SAASqrB,GAAYa,GACjB,MAAoC,kBAAtBA,EACR,EACArP,GAAkB,GAAIqP,EAC/B,CACD,SAAS5B,GAAmBnc,EAAYpQ,GACpC,OAAOoQ,EAAWpQ,IAAQoQ,EAAU,SAAeA,CACtD,CAKD,SAASyd,GAAe7tB,EAAKlG,EAAOsQ,GAAyB,IAAjBgG,EAAiB,uDAAJ,CAAC,EAItD,OAHI6Q,KACA7Q,EAAa,CAAE9M,MAAM,IAElBxJ,EAAM+C,OAAM,SAACwuB,GAChB,IAAI+C,EAIAC,EAHElwB,EAAY+uB,GAAaltB,EAAKlG,EAAOsQ,EAAQgG,EAAYib,GACzDiD,EAAUhC,GAAuBlc,EAAYpQ,GAC7CnD,EAAQ,kBAAOuxB,EAAWjwB,GAAlB,EAQd,OANImwB,EACAD,EAAcxK,GAAMhnB,EAAO2c,GAAsB8U,IAGjDzxB,IAEG,WACHwxB,GAAeA,IACfD,GAAYA,EAAS3D,MACxB,CACJ,GACJ,CE7MD,ICAM8D,GAAoB,SAAC9xB,GAAD,MAAO,aAAayF,KAAKzF,EAAzB,ECH1B,SAAS+xB,GAAcC,EAAKC,IACG,IAAvBD,EAAIxsB,QAAQysB,IACZD,EAAI/kB,KAAKglB,EAChB,CACD,SAASC,GAAWF,EAAKC,GACrB,IAAM5L,EAAQ2L,EAAIxsB,QAAQysB,GACtB5L,GAAS,GACT2L,EAAI1L,OAAOD,EAAO,EACzB,C,ICNK8L,GAAAA,WACF,cAAc,eACV1vB,KAAK2vB,cAAgB,EACxB,C,kCACD,SAAI/d,GAAS,WAET,OADA0d,GAActvB,KAAK2vB,cAAe/d,GAC3B,kBAAM6d,GAAW,EAAKE,cAAe/d,EAArC,CACV,G,oBACD,SAAO5N,EAAGC,EAAGwZ,GACT,IAAMmS,EAAmB5vB,KAAK2vB,cAActqB,OAC5C,GAAKuqB,EAEL,GAAyB,IAArBA,EAIA5vB,KAAK2vB,cAAc,GAAG3rB,EAAGC,EAAGwZ,QAG5B,IAAK,IAAIpD,EAAI,EAAGA,EAAIuV,EAAkBvV,IAAK,CAKvC,IAAMzI,EAAU5R,KAAK2vB,cAActV,GACnCzI,GAAWA,EAAQ5N,EAAGC,EAAGwZ,EAC5B,CAER,G,qBACD,WACI,OAAOzd,KAAK2vB,cAActqB,MAC7B,G,mBACD,WACIrF,KAAK2vB,cAActqB,OAAS,CAC/B,K,EAlCCqqB,GCUAG,GAAAA,WASF,WAAYnwB,GAAM,IAjBL9E,EAiBK,uBAKdoF,KAAK8vB,QAAU,SAMf9vB,KAAK+vB,UAAY,EAMjB/vB,KAAKgwB,YAAc,EAMnBhwB,KAAKiwB,kBAAoB,IAAIP,GAM7B1vB,KAAKkwB,0BAA4B,IAAIR,GAMrC1vB,KAAKmwB,kBAAoB,IAAIT,GAQ7B1vB,KAAKowB,kBAAmB,EACxBpwB,KAAKqwB,gBAAkB,SAAC9yB,GAAqB,IAAlBV,IAAkB,yDACzC,EAAKsd,KAAO,EAAK3d,QACjB,EAAKA,QAAUe,EAEf,MAA6BmnB,KAArB/B,EAAR,EAAQA,MAAOC,EAAf,EAAeA,UACX,EAAKoN,cAAgBpN,IACrB,EAAKmN,UAAYpN,EACjB,EAAKqN,YAAcpN,EACnBqB,GAAAA,WAAgB,EAAKqM,wBAGrB,EAAKnW,OAAS,EAAK3d,SACnB,EAAKyzB,kBAAkBjzB,OAAO,EAAKR,SAGnC,EAAK0zB,0BAA0BK,WAC/B,EAAKL,0BAA0BlzB,OAAO,EAAKyG,eAG3C5G,GACA,EAAKszB,kBAAkBnzB,OAAO,EAAKR,QAE1C,EASDwD,KAAKswB,sBAAwB,kBAAMrM,GAAAA,WAAgB,EAAKuM,cAA3B,EAU7BxwB,KAAKwwB,cAAgB,YAAmB,EAAhB5N,YACF,EAAKoN,cACnB,EAAK7V,KAAO,EAAK3d,QACjB,EAAK0zB,0BAA0BlzB,OAAO,EAAKyG,eAElD,EACDzD,KAAKywB,aAAc,EACnBzwB,KAAKma,KAAOna,KAAKxD,QAAUkD,EAC3BM,KAAKowB,kBA9GIx1B,EA8GuBoF,KAAKxD,SA7GjCmjB,MAAMpa,WAAW3K,IA8GxB,C,uCAiDD,SAAS81B,GACL,OAAO1wB,KAAKiwB,kBAAkBvM,IAAIgN,EACrC,G,4BACD,WACI1wB,KAAKiwB,kBAAkBU,OAC1B,G,6BASD,SAAgBD,GAGZ,OADAA,EAAa1wB,KAAKwC,OACXxC,KAAKmwB,kBAAkBzM,IAAIgN,EACrC,G,oBAMD,SAAOE,GACH5wB,KAAK4wB,cAAgBA,CACxB,G,iBAgBD,SAAIrzB,GAAkB,IAAfV,IAAe,yDACbA,GAAWmD,KAAK4wB,cAIjB5wB,KAAK4wB,cAAcrzB,EAAGyC,KAAKqwB,iBAH3BrwB,KAAKqwB,gBAAgB9yB,EAAGV,EAK/B,G,iBAQD,WACI,OAAOmD,KAAKxD,OACf,G,yBAID,WACI,OAAOwD,KAAKma,IACf,G,yBAQD,WAEI,OAAOna,KAAKowB,iBAEJvD,GAAkBtnB,WAAWvF,KAAKxD,SAC9B+I,WAAWvF,KAAKma,MAAOna,KAAK+vB,WAClC,CACT,G,mBAaD,SAAM9wB,GAAW,WAEb,OADAe,KAAKurB,OACE,IAAIsF,SAAQ,SAACC,GAChB,EAAKL,aAAc,EACnB,EAAKM,cAAgB9xB,EAAU6xB,EAClC,IAAEE,MAAK,kBAAM,EAAKC,gBAAX,GACX,G,kBAMD,WACQjxB,KAAK+wB,eACL/wB,KAAK+wB,gBACT/wB,KAAKixB,gBACR,G,yBAMD,WACI,QAASjxB,KAAK+wB,aACjB,G,4BACD,WACI/wB,KAAK+wB,cAAgB,IACxB,G,qBAUD,WACI/wB,KAAKiwB,kBAAkBU,QACvB3wB,KAAKmwB,kBAAkBQ,QACvB3wB,KAAKurB,MACR,K,EA9RCsE,GAgSN,SAASqB,GAAYxxB,GACjB,OAAO,IAAImwB,GAAYnwB,EAC1B,CC3SD,IAAMyxB,GAAgB,SAAC5zB,GAAD,OAAO,SAAC6G,GAAD,OAAUA,EAAKpB,KAAKzF,EAApB,CAAP,ECIhB6zB,GAAsB,CAACrrB,GAAQL,GAAID,GAASD,GAASI,GAAID,GCJlD,CACT3C,KAAM,SAACzF,GAAD,MAAa,SAANA,CAAP,EACN+H,MAAO,SAAC/H,GAAD,OAAOA,CAAP,IDML8zB,GAAyB,SAAC9zB,GAAD,OAAO6zB,GAAoB5L,KAAK2L,GAAc5zB,GAA9C,EEJzB+zB,GAAa,GAAH,gBAAOF,IAAP,CAA4B1S,GAAOa,KAI7CgS,GAAgB,SAACh0B,GAAD,OAAO+zB,GAAW9L,KAAK2L,GAAc5zB,GAArC,ECOtB,SAASi0B,GAAev1B,EAAeuT,EAAYrN,GAC/C,IAAMtG,EAAQI,EAAc6b,WAC5B,OAAOvI,GAAwB1T,EAAO2T,OAAuB/V,IAAX0I,EAAuBA,EAAStG,EAAMsG,OAf5F,SAAoBlG,GAChB,IAAMO,EAAU,CAAC,EAEjB,OADAP,EAAcwU,OAAOM,SAAQ,SAACnW,EAAOkG,GAAR,OAAiBtE,EAAQsE,GAAOlG,EAAM4H,KAAtC,IACtBhG,CACV,CAWmGi1B,CAAWx1B,GAP/G,SAAqBA,GACjB,IAAM8rB,EAAW,CAAC,EAElB,OADA9rB,EAAcwU,OAAOM,SAAQ,SAACnW,EAAOkG,GAAR,OAAiBinB,EAASjnB,GAAOlG,EAAM6I,aAAvC,IACtBskB,CACV,CAG8HtkB,CAAYxH,GAC1I,C,sCCRD,SAASy1B,GAAez1B,EAAe6E,EAAKlG,GACpCqB,EAAc01B,SAAS7wB,GACvB7E,EAAc21B,SAAS9wB,GAAK6B,IAAI/H,GAGhCqB,EAAc41B,SAAS/wB,EAAKowB,GAAYt2B,GAE/C,CACD,SAASk3B,GAAU71B,EAAeuT,GAC9B,IAAMwB,EAAWwgB,GAAev1B,EAAeuT,GAC/C,EAAyDwB,EAAW/U,EAAc81B,qBAAqB/gB,GAAU,GAAS,CAAC,EAA3H,IAAMC,cAAAA,OAAN,MAAsB,CAAC,EAAvB,EAA8C/F,GAA9C,EAA0BgG,YAA1B,eAEA,IAAK,IAAMpQ,KADXoK,GAAS,kBAAKA,GAAW+F,GACC,CAEtBygB,GAAez1B,EAAe6E,EADhB8O,GAA6B1E,EAAOpK,IAErD,CACJ,CAsED,SAASkxB,GAAwBlxB,EAAKoQ,GAClC,GAAKA,EAGL,OADwBA,EAAWpQ,IAAQoQ,EAAU,SAAeA,GAC7C8T,IAC1B,CCtGD,SAASiN,GAAwBr3B,GAC7B,OAAOsD,QAAQsF,EAAc5I,IAAUA,EAAM8oB,IAChD,C,sCCoBD,SAASwO,GAAej2B,EAAek2B,GAAuB,IACtD54B,EADwCsQ,EAAc,uDAAJ,CAAC,EAEjDmH,EAAWwgB,GAAev1B,EAAek2B,EAAStoB,EAAQ1H,QAChE,EAAkE6O,GAAY,CAAC,EAA/E,IAAME,WAAAA,OAAN,MAAmBjV,EAAc8xB,wBAA0B,CAAC,EAA5D,EACIlkB,EAAQuoB,qBACRlhB,EAAarH,EAAQuoB,oBAMzB,IAAMpE,EAAehd,EACf,kBAAMqhB,GAAcp2B,EAAe+U,EAAUnH,EAA7C,EACA,kBAAMgnB,QAAQC,SAAd,EAKAwB,GAA+D,QAAxC/4B,EAAK0C,EAAcs2B,uBAAoC,IAAPh5B,OAAgB,EAASA,EAAG8N,MACnG,WAAsB,IAArBmrB,EAAqB,uDAAN,EACd,EAAkEthB,EAAlE,IAAQuc,cAAAA,OAAR,MAAwB,EAAxB,EAA2BC,EAA3B,EAA2BA,gBAAiBC,EAA5C,EAA4CA,iBAC5C,OAAO8E,GAAgBx2B,EAAek2B,EAAS1E,EAAgB+E,EAAc9E,EAAiBC,EAAkB9jB,EACnH,EACC,kBAAMgnB,QAAQC,SAAd,EAKN,EAAiB5f,EAATsc,EAAR,EAAQA,KACR,GAAIA,EAAM,CACN,MAA+B,mBAATA,EAChB,CAACQ,EAAcsE,GACf,CAACA,EAAoBtE,GAF3B,gBAAO0E,EAAP,KAAcC,EAAd,KAGA,OAAOD,IAAQ1B,KAAK2B,EACvB,CAEG,OAAO9B,QAAQ1Z,IAAI,CAAC6W,IAAgBsE,EAAmBzoB,EAAQ8a,QAEtE,CAID,SAAS0N,GAAcp2B,EAAeuT,GAA0D,IACxFjW,EADwF,yDAAJ,CAAC,EAAG,IAA5CorB,MAAAA,OAA4C,MAApC,EAAoC,EAAjCyN,EAAiC,EAAjCA,mBAAoBhuB,EAAa,EAAbA,KAE/E,EAAsFnI,EAAc81B,qBAAqBviB,GAAzH,IAAM0B,WAAAA,OAAN,MAAmBjV,EAAc8xB,uBAAjC,EAAyD9c,EAAzD,EAAyDA,cAAkB/F,GAA3E,cACM0nB,EAAa32B,EAAc21B,SAAS,cACtCQ,IACAlhB,EAAakhB,GACjB,IAAMS,EAAa,GACbC,EAAqB1uB,IAAiD,QAAvC7K,EAAK0C,EAAca,sBAAmC,IAAPvD,OAAgB,EAASA,EAAGw5B,WAAW3uB,IAP/B,WAQjFtD,GACP,IAAMlG,EAAQqB,EAAc21B,SAAS9wB,GAC/BqQ,EAAcjG,EAAOpK,GAC3B,IAAKlG,QACenB,IAAhB0X,GACC2hB,GACGE,GAAqBF,EAAoBhyB,GAC7C,iBAEJ,IAAImtB,GAAkB,QAAEtJ,MAAAA,GAAUzT,GAI9BjV,EAAcg3B,oBAAsB9vB,EAAeT,IAAI5B,KACvDmtB,GAAkB,kBACXA,GADQ,IAEX7pB,MAAM,EACNugB,MAAO,KAGf,IAAI1lB,EAAY0vB,GAAe7tB,EAAKlG,EAAOuW,EAAa8c,GACpDgE,GAAwBW,KACxBA,EAAWlP,IAAI5iB,GACf7B,EAAYA,EAAU+xB,MAAK,kBAAM4B,EAAWM,OAAOpyB,EAAxB,KAE/B+xB,EAAWroB,KAAKvL,EAjCwE,EAQ5F,IAAK,IAAM6B,KAAOoK,EAAQ,EAAfpK,GA2BX,OAAO+vB,QAAQ1Z,IAAI0b,GAAY7B,MAAK,WAChC/f,GAAiB6gB,GAAU71B,EAAegV,EAC7C,GACJ,CACD,SAASwhB,GAAgBx2B,EAAek2B,GAAgF,IAAvE1E,EAAuE,uDAAvD,EAAGC,EAAoD,uDAAlC,EAAGC,EAA+B,uDAAZ,EAAG9jB,EAAS,uCAC9GgpB,EAAa,GACbM,GAAsBl3B,EAAcs2B,gBAAgBlrB,KAAO,GAAKqmB,EAChE0F,EAA+C,IAArBzF,EAC1B,eAACtT,EAAD,uDAAK,EAAL,OAAWA,EAAIqT,CAAf,EACA,eAACrT,EAAD,uDAAK,EAAL,OAAW8Y,EAAqB9Y,EAAIqT,CAApC,EASN,OARAlwB,MAAMwnB,KAAK/oB,EAAcs2B,iBACpB1nB,KAAKwoB,IACLtiB,SAAQ,SAACyE,EAAO6E,GACjBwY,EAAWroB,KAAK0nB,GAAe1c,EAAO2c,GAAR,QAAC,UACxBtoB,GADuB,IAE1B8a,MAAO8I,EAAgB2F,EAAwB/Y,MAChD2W,MAAK,kBAAMxb,EAAMxY,OAAO,oBAAqBm1B,EAAxC,IACX,IACMtB,QAAQ1Z,IAAI0b,EACtB,CAID,SAASQ,GAAgBrvB,EAAGC,GACxB,OAAOD,EAAEsvB,iBAAiBrvB,EAC7B,CAOD,SAAS+uB,GAAT,EAAiElyB,GAAK,IAAtCyyB,EAAsC,EAAtCA,cAAeC,EAAuB,EAAvBA,eACrCC,EAAcF,EAAcn2B,eAAe0D,KAAgC,IAAxB0yB,EAAe1yB,GAExE,OADA0yB,EAAe1yB,IAAO,EACf2yB,CACV,C,sCCjIKC,GAAuB,CACzBtiB,GAAcuiB,QACdviB,GAAcyG,OACdzG,GAAcoI,MACdpI,GAAckE,MACdlE,GAAcgI,IACdhI,GAAcwiB,KACdxiB,GAAcyiB,MAEZC,GAAuB,UAAIJ,IAAsBpM,UACjDyM,GAAoBL,GAAqBruB,OAC/C,SAAS2uB,GAAY/3B,GACjB,OAAO,SAAC42B,GAAD,OAAgBhC,QAAQ1Z,IAAI0b,EAAW7T,KAAI,gBAAG/f,EAAH,EAAGA,UAAW4K,EAAd,EAAcA,QAAd,ODdtD,SAA8B5N,EAAeuT,GAA0B,IAE/DvQ,EAFiD4K,EAAc,uDAAJ,CAAC,EAGhE,GAFA5N,EAAce,OAAO,iBAAkBwS,GAEnChS,MAAMC,QAAQ+R,GAAa,CAC3B,IAAMqjB,EAAarjB,EAAWwP,KAAI,SAACmT,GAAD,OAAaD,GAAej2B,EAAek2B,EAAStoB,EAApD,IAClC5K,EAAY4xB,QAAQ1Z,IAAI0b,EAC3B,MACI,GAA0B,kBAAfrjB,EACZvQ,EAAYizB,GAAej2B,EAAeuT,EAAY3F,OAErD,CACD,IAAMoqB,EAA2C,oBAAfzkB,EAC5BgiB,GAAev1B,EAAeuT,EAAY3F,EAAQ1H,QAClDqN,EACNvQ,EAAYozB,GAAcp2B,EAAeg4B,EAAoBpqB,EAChE,CACD,OAAO5K,EAAU+xB,MAAK,kBAAM/0B,EAAce,OAAO,oBAAqBwS,EAAhD,GACzB,CCHiF0kB,CAAqBj4B,EAAegD,EAAW4K,EAA3E,IAA3C,CACV,CACD,SAASsqB,GAAqBl4B,GAC1B,IAAI6B,EAAUk2B,GAAY/3B,GACpBpC,EAoSV,WAAuB,MACnB,uBACKuX,GAAcuiB,QAAUS,IAAgB,KAD7C,UAEKhjB,GAAcyG,OAASuc,OAF5B,UAGKhjB,GAAckE,MAAQ8e,OAH3B,UAIKhjB,GAAcgI,IAAMgb,OAJzB,UAKKhjB,GAAcwiB,KAAOQ,OAL1B,UAMKhjB,GAAcoI,MAAQ4a,OAN3B,UAOKhjB,GAAcyiB,KAAOO,MAP1B,CASH,CA9SiBC,GACVC,GAAkB,EAKhBC,EAA0B,SAACxR,EAAKvT,GAClC,IAAMwB,EAAWwgB,GAAev1B,EAAeuT,GAC/C,GAAIwB,EAAU,CACuCA,EAAzCE,WAAR,IAAoBD,EAA6BD,EAA7BC,cAAkB/F,GAAtC,QAAiD8F,EAAjD,IACA+R,GAAM,0BAAKA,GAAQ7X,GAAW+F,EACjC,CACD,OAAO8R,CACV,EAkBD,SAAShmB,EAAe8M,EAAS2qB,GA+B7B,IA9BA,IAAIj7B,EACEsC,EAAQI,EAAc6b,WACtBzZ,EAAUpC,EAAcw4B,mBAAkB,IAAS,CAAC,EAKpD5B,EAAa,GAKb6B,EAAc,IAAItxB,IAMpBuxB,EAAkB,CAAC,EAKnBC,EAAsBC,IAxBsB,WA+BvCxa,GACL,IAAMjW,EAAO0vB,GAAqBzZ,GAC5Bya,EAAYj7B,EAAMuK,GAClB1F,EAA8B,QAAtBnF,EAAKsC,EAAMuI,UAA0B,IAAP7K,EAAgBA,EAAK8E,EAAQ+F,GACnE2wB,EAAgBz3B,EAAeoB,GAK/Bs2B,EAAc5wB,IAASowB,EAAoBM,EAAU5f,SAAW,MAClD,IAAhB8f,IACAJ,EAAsBva,GAO1B,IAAI4a,EAAcv2B,IAASL,EAAQ+F,IAAS1F,IAAS7C,EAAMuI,IAAS2wB,EAepE,GAXIE,GACAX,GACAr4B,EAAci5B,yBACdD,GAAc,GAMlBH,EAAUvB,eAAV,UAA+BoB,IAI7BG,EAAU5f,UAA4B,OAAhB8f,IAElBt2B,IAASo2B,EAAUK,UAErBz3B,EAAoBgB,IACJ,mBAATA,EACP,iBAOJ,IAAM02B,EAqKlB,SAAgCjb,EAAMD,GAClC,GAAoB,kBAATA,EACP,OAAOA,IAASC,EAEf,GAAI3c,MAAMC,QAAQyc,GACnB,OAAQD,GAAeC,EAAMC,GAEjC,OAAO,CACV,CA7KoCkb,CAAuBP,EAAUK,SAAUz2B,GAChE42B,EAAoBF,GAEnBhxB,IAASowB,GACNM,EAAU5f,WACT+f,GACDF,GAEH1a,EAAIua,GAAuBG,EAK1BQ,EAAiB/3B,MAAMC,QAAQiB,GAAQA,EAAO,CAACA,GAKjD82B,EAAiBD,EAAezf,OAAOye,EAAyB,CAAC,IACjD,IAAhBS,IACAQ,EAAiB,CAAC,GAUtB,MAAoCV,EAA5BW,mBAAAA,OAAR,MAA6B,CAAC,EAA9B,EACMC,GAAU,kBACTD,GACAD,GAEDG,EAAgB,SAAC70B,GACnBw0B,GAAoB,EACpBZ,EAAY1d,OAAOlW,GACnBg0B,EAAUtB,eAAe1yB,IAAO,CACnC,EACD,IAAK,IAAMA,KAAO40B,EAAS,CACvB,IAAMxb,EAAOsb,EAAe10B,GACtBqZ,EAAOsb,EAAmB30B,GAE5B6zB,EAAgBv3B,eAAe0D,KAK/BoZ,IAASC,EAKLxK,GAAkBuK,IAASvK,GAAkBwK,IACxCF,GAAeC,EAAMC,IAASib,EAC/BO,EAAc70B,GAOdg0B,EAAUvB,cAAczyB,IAAO,OAGrBrH,IAATygB,EAELyb,EAAc70B,GAId4zB,EAAYhR,IAAI5iB,QAGNrH,IAATygB,GAAsBwa,EAAYhyB,IAAI5B,GAK3C60B,EAAc70B,GAOdg0B,EAAUvB,cAAczyB,IAAO,EAEtC,CAKDg0B,EAAUK,SAAWz2B,EACrBo2B,EAAUW,mBAAqBD,EAI3BV,EAAU5f,WACVyf,GAAkB,kBAAKA,GAAoBa,IAE3ClB,GAAmBr4B,EAAcU,wBACjC24B,GAAoB,GAOpBA,IAAsBL,GACtBpC,EAAWroB,KAAX,MAAAqoB,GAAU,QAAS0C,EAAevW,KAAI,SAAC/f,GAAD,MAAgB,CAClDA,UAAWA,EACX4K,SAAS,QAAEzF,KAAAA,GAASyF,GAFc,KA9LE,EA+BvCwQ,EAAI,EAAGA,EAAI0Z,GAAmB1Z,IAAK,EAAnCA,GA0KT,GAAIqa,EAAYrtB,KAAM,CAClB,IAAMuuB,EAAoB,CAAC,EAC3BlB,EAAY3jB,SAAQ,SAACjQ,GACjB,IAAM+0B,EAAiB55B,EAAc65B,cAAch1B,QAC5BrH,IAAnBo8B,IACAD,EAAkB90B,GAAO+0B,EAEhC,IACDhD,EAAWroB,KAAK,CAAEvL,UAAW22B,GAChC,CACD,IAAIG,EAAgB73B,QAAQ20B,EAAWxtB,QAOvC,OANIivB,IACkB,IAAlBz4B,EAAMe,UACLX,EAAci5B,yBACfa,GAAgB,GAEpBzB,GAAkB,EACXyB,EAAgBj4B,EAAQ+0B,GAAchC,QAAQC,SACxD,CAkBD,MAAO,CACH/zB,eAAAA,EACAsY,UAhBJ,SAAmBjR,EAAM8Q,EAAUrL,GAC/B,IAAItQ,EAEJ,GAAIM,EAAMuK,GAAM8Q,WAAaA,EACzB,OAAO2b,QAAQC,UAEsB,QAAxCv3B,EAAK0C,EAAcs2B,uBAAoC,IAAPh5B,GAAyBA,EAAGwX,SAAQ,SAACyE,GAAY,IAAIjc,EAAI,OAAuC,QAA/BA,EAAKic,EAAM1Y,sBAAmC,IAAPvD,OAAgB,EAASA,EAAG8b,UAAUjR,EAAM8Q,EAAY,IACjNrb,EAAMuK,GAAM8Q,SAAWA,EACvB,IAAM2d,EAAa91B,EAAe8M,EAASzF,GAC3C,IAAK,IAAMtD,KAAOjH,EACdA,EAAMiH,GAAKyyB,cAAgB,CAAC,EAEhC,OAAOV,CACV,EAIGmD,mBA7PJ,SAA4BC,GACxBn4B,EAAUm4B,EAAah6B,EAC1B,EA4PG82B,SAAU,kBAAMl5B,CAAN,EAEjB,CAUD,SAASu6B,KAAkC,IAAlBlf,EAAkB,wDACvC,MAAO,CACHA,SAAAA,EACAqe,cAAe,CAAC,EAChBC,eAAgB,CAAC,EACjBiC,mBAAoB,CAAC,EAE5B,CCnTD,IAAM5C,GAAa,CACf5zB,UAAWmZ,IAAwB,YAAgC,IAA7Bnc,EAA6B,EAA7BA,cAAe6B,EAAc,EAAdA,QAMjD7B,EAAca,iBAAmBb,EAAca,eAAiBq3B,GAAqBl4B,IAIjFyB,EAAoBI,KACpB/D,EAAAA,EAAAA,YAAU,kBAAM+D,EAAQo4B,UAAUj6B,EAAxB,GAAwC,CAAC6B,GAE1D,IACDoB,KAAMkZ,IAAwB,SAACvc,GAC3B,IAAQsG,EAA0BtG,EAA1BsG,OAAQlG,EAAkBJ,EAAlBI,cAChB,EAAkC2d,KAAlC,gBAAOC,EAAP,KAAkBsc,EAAlB,KACMh6B,GAAkBH,EAAAA,EAAAA,YAAWZ,IACnCrB,EAAAA,EAAAA,YAAU,WACNkC,EAAc4d,UAAYA,EAC1B,IAAM5a,EAAYhD,EAAca,gBAC5Bb,EAAca,eAAeuY,UAAUjE,GAAcyiB,MAAOha,EAAW,CACnE1X,OAAShG,GAAmBA,EAAgBgG,QACxCA,IAERlD,IAAc4a,GACd5a,EAAU+xB,KAAKmF,EAEtB,GAAE,CAACtc,GACP,KCtCC/Q,GAAW,SAAC9E,EAAGC,GAAJ,OAAUQ,KAAKgX,IAAIzX,EAAIC,EAAvB,EACjB,SAASmyB,GAAWpyB,EAAGC,GAEnB,IAAMoyB,EAASvtB,GAAS9E,EAAEL,EAAGM,EAAEN,GACzB2yB,EAASxtB,GAAS9E,EAAEJ,EAAGK,EAAEL,GAC/B,OAAOa,KAAK6b,KAAK,SAAA+V,EAAU,GAAV,SAAcC,EAAU,GAC5C,C,ICKKC,GAAAA,WACF,WAAYrkB,EAAOskB,GAAuC,oEAAJ,CAAC,EAAxBz7B,EAA2B,EAA3BA,mBA2D3B,IA3DsD,eAItDiF,KAAKy2B,WAAa,KAIlBz2B,KAAK02B,cAAgB,KAIrB12B,KAAK22B,kBAAoB,KAIzB32B,KAAKw2B,SAAW,CAAC,EACjBx2B,KAAK42B,YAAc,WACf,GAAM,EAAKF,eAAiB,EAAKC,kBAAjC,CAEA,IAAMvhB,EAAOyhB,GAAW,EAAKF,kBAAmB,EAAKG,SAC/CC,EAAmC,OAApB,EAAKN,WAIpBO,EAA0BZ,GAAWhhB,EAAK1I,OAAQ,CAAE/I,EAAG,EAAGC,EAAG,KAAQ,EAC3E,GAAKmzB,GAAiBC,EAAtB,CAEA,IAAQ9jB,EAAUkC,EAAVlC,MACA0P,EAAc8B,KAAd9B,UACR,EAAKkU,QAAQtsB,MAAb,kBAAuB0I,GAAvB,IAA8B0P,UAAAA,KAC9B,MAA4B,EAAK4T,SAAzBS,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,OACZH,IACDE,GAAWA,EAAQ,EAAKP,cAAethB,GACvC,EAAKqhB,WAAa,EAAKC,eAE3BQ,GAAUA,EAAO,EAAKR,cAAethB,EAT3B,CARA,CAkBb,EACDpV,KAAKm3B,kBAAoB,SAACjlB,EAAOkD,GAC7B,EAAKshB,cAAgBxkB,EACrB,EAAKykB,kBAAoBS,GAAehiB,EAAM,EAAKra,oBAE/CkX,GAAaC,IAA4B,IAAlBA,EAAMmlB,QAC7B,EAAKC,gBAAgBplB,EAAOkD,GAIhC6O,GAAAA,OAAY,EAAK2S,aAAa,EACjC,EACD52B,KAAKs3B,gBAAkB,SAACplB,EAAOkD,GAC3B,EAAKmiB,MACL,MAAgC,EAAKf,SAA7BgB,EAAR,EAAQA,MAAOC,EAAf,EAAeA,aACTC,EAAUb,GAAWO,GAAehiB,EAAM,EAAKra,oBAAqB,EAAK+7B,SAC3E,EAAKL,YAAce,GACnBA,EAAMtlB,EAAOwlB,GAEjBD,GAAgBA,EAAavlB,EAAOwlB,EACvC,IAEGplB,GAAaJ,IAAUA,EAAMK,QAAQlN,OAAS,GAAlD,CAEArF,KAAKw2B,SAAWA,EAChBx2B,KAAKjF,mBAAqBA,EAC1B,IAAMqa,EAAOhC,GAAiBlB,GACxBylB,EAAcP,GAAehiB,EAAMpV,KAAKjF,oBACtCmY,EAAUykB,EAAVzkB,MACR,EAAsBwR,KAAd9B,EAAR,EAAQA,UACR5iB,KAAK82B,QAAU,EAAC,kBAAK5jB,GAAN,IAAa0P,UAAAA,KAC5B,IAAQgV,EAAmBpB,EAAnBoB,eACRA,GACIA,EAAe1lB,EAAO2kB,GAAWc,EAAa33B,KAAK82B,UACvD92B,KAAK63B,gBAAkBjiB,GAAKtB,GAAgBlb,OAAQ,cAAe4G,KAAKm3B,mBAAoB7iB,GAAgBlb,OAAQ,YAAa4G,KAAKs3B,iBAAkBhjB,GAAgBlb,OAAQ,gBAAiB4G,KAAKs3B,iBAX5L,CAYb,C,6CACD,SAAed,GACXx2B,KAAKw2B,SAAWA,CACnB,G,iBACD,WACIx2B,KAAK63B,iBAAmB73B,KAAK63B,kBAC7BxT,GAAWgH,OAAOrrB,KAAK42B,YAC1B,K,EAhFCL,GAkFN,SAASa,GAAehiB,EAAMra,GAC1B,OAAOA,EAAqB,CAAEmY,MAAOnY,EAAmBqa,EAAKlC,QAAWkC,CAC3E,CACD,SAAS0iB,GAAc9zB,EAAGC,GACtB,MAAO,CAAEN,EAAGK,EAAEL,EAAIM,EAAEN,EAAGC,EAAGI,EAAEJ,EAAIK,EAAEL,EACrC,CACD,SAASizB,GAAT,EAA+BC,GAAS,IAAlB5jB,EAAkB,EAAlBA,MAClB,MAAO,CACHA,MAAAA,EACAyP,MAAOmV,GAAc5kB,EAAO6kB,GAAgBjB,IAC5CpqB,OAAQorB,GAAc5kB,EAAO8kB,GAAiBlB,IAC9C/O,SAAUtkB,GAAYqzB,EAAS,IAEtC,CACD,SAASkB,GAAiBlB,GACtB,OAAOA,EAAQ,EAClB,CACD,SAASiB,GAAgBjB,GACrB,OAAOA,EAAQA,EAAQzxB,OAAS,EACnC,CACD,SAAS5B,GAAYqzB,EAAS/G,GAC1B,GAAI+G,EAAQzxB,OAAS,EACjB,MAAO,CAAE1B,EAAG,EAAGC,EAAG,GAKtB,IAHA,IAAIyW,EAAIyc,EAAQzxB,OAAS,EACrB4yB,EAAmB,KACjBC,EAAYH,GAAgBjB,GAC3Bzc,GAAK,IACR4d,EAAmBnB,EAAQzc,KACvB6d,EAAUtV,UAAYqV,EAAiBrV,UACvCtI,GAAsByV,MAG1B1V,IAEJ,IAAK4d,EACD,MAAO,CAAEt0B,EAAG,EAAGC,EAAG,GAEtB,IAAMu0B,GAAQD,EAAUtV,UAAYqV,EAAiBrV,WAAa,IAClE,GAAa,IAATuV,EACA,MAAO,CAAEx0B,EAAG,EAAGC,EAAG,GAEtB,IAAM8L,EAAkB,CACpB/L,GAAIu0B,EAAUv0B,EAAIs0B,EAAiBt0B,GAAKw0B,EACxCv0B,GAAIs0B,EAAUt0B,EAAIq0B,EAAiBr0B,GAAKu0B,GAQ5C,OANIzoB,EAAgB/L,IAAMkxB,MACtBnlB,EAAgB/L,EAAI,GAEpB+L,EAAgB9L,IAAMixB,MACtBnlB,EAAgB9L,EAAI,GAEjB8L,CACV,CChJD,SAAS0oB,GAAWC,GAChB,OAAOA,EAAK7zB,IAAM6zB,EAAK9zB,GAC1B,CACD,SAAS+zB,GAAO19B,GAAuC,IAAhCsQ,EAAgC,uDAAvB,EAAGqtB,EAAoB,uDAAN,IAC7C,OAAO9zB,KAAKgX,IAAI7gB,EAAQsQ,IAAWqtB,CACtC,CACD,SAASC,GAAc7V,EAAOxX,EAAQD,GAAsB,IAAduB,EAAc,uDAAL,GACnDkW,EAAMlW,OAASA,EACfkW,EAAM8V,YAAc1oB,GAAI5E,EAAO5G,IAAK4G,EAAO3G,IAAKme,EAAMlW,QACtDkW,EAAM1c,MAAQmyB,GAAWltB,GAAUktB,GAAWjtB,IAC1CmtB,GAAO3V,EAAM1c,MAAO,EAAG,OAAW0Z,MAAMgD,EAAM1c,UAC9C0c,EAAM1c,MAAQ,GAClB0c,EAAM+V,UACF3oB,GAAI7E,EAAO3G,IAAK2G,EAAO1G,IAAKme,EAAMlW,QAAUkW,EAAM8V,aAClDH,GAAO3V,EAAM+V,YAAc/Y,MAAMgD,EAAM+V,cACvC/V,EAAM+V,UAAY,EACzB,CACD,SAASC,GAAahW,EAAOxX,EAAQD,EAAQuB,GACzC+rB,GAAc7V,EAAMhf,EAAGwH,EAAOxH,EAAGuH,EAAOvH,EAAc,OAAX8I,QAA8B,IAAXA,OAAoB,EAASA,EAAOrD,SAClGovB,GAAc7V,EAAM/e,EAAGuH,EAAOvH,EAAGsH,EAAOtH,EAAc,OAAX6I,QAA8B,IAAXA,OAAoB,EAASA,EAAOpD,QACrG,CACD,SAASuvB,GAAiB1tB,EAAQ2tB,EAAU98B,GACxCmP,EAAO3G,IAAMxI,EAAOwI,IAAMs0B,EAASt0B,IACnC2G,EAAO1G,IAAM0G,EAAO3G,IAAM6zB,GAAWS,EACxC,CAKD,SAASC,GAAyB5tB,EAAQ5H,EAAQvH,GAC9CmP,EAAO3G,IAAMjB,EAAOiB,IAAMxI,EAAOwI,IACjC2G,EAAO1G,IAAM0G,EAAO3G,IAAM6zB,GAAW90B,EACxC,CACD,SAASy1B,GAAqB7tB,EAAQ5H,EAAQvH,GAC1C+8B,GAAyB5tB,EAAOvH,EAAGL,EAAOK,EAAG5H,EAAO4H,GACpDm1B,GAAyB5tB,EAAOtH,EAAGN,EAAOM,EAAG7H,EAAO6H,EACvD,CCZD,SAASo1B,GAA4BX,EAAM9zB,EAAKC,GAC5C,MAAO,CACHD,SAAa9K,IAAR8K,EAAoB8zB,EAAK9zB,IAAMA,OAAM9K,EAC1C+K,SAAa/K,IAAR+K,EACC6zB,EAAK7zB,IAAMA,GAAO6zB,EAAK7zB,IAAM6zB,EAAK9zB,UAClC9K,EAEb,CAcD,SAASw/B,GAA4BC,EAAYC,GAC7C,IAAI50B,EAAM40B,EAAgB50B,IAAM20B,EAAW30B,IACvCC,EAAM20B,EAAgB30B,IAAM00B,EAAW10B,IAG3C,GAAI20B,EAAgB30B,IAAM20B,EAAgB50B,IACtC20B,EAAW10B,IAAM00B,EAAW30B,IAAK,OACpB,CAACC,EAAKD,GAAlBA,EADgC,KAC3BC,EAD2B,IAEpC,CACD,MAAO,CAAED,IAAAA,EAAKC,IAAAA,EACjB,CAuCD,IAAM40B,GAAiB,IAgBvB,SAASC,GAAmBC,EAAaC,EAAUC,GAC/C,MAAO,CACHj1B,IAAKk1B,GAAoBH,EAAaC,GACtC/0B,IAAKi1B,GAAoBH,EAAaE,GAE7C,CACD,SAASC,GAAoBH,EAAaI,GACtC,IAAIngC,EACJ,MAA8B,kBAAhB+/B,EACRA,EAC8B,QAA7B//B,EAAK+/B,EAAYI,UAA2B,IAAPngC,EAAgBA,EAAK,CACpE,CC3HD,SAASogC,GAASxkB,GACd,MAAO,CAACA,EAAS,KAAMA,EAAS,KACnC,CCGD,SAASykB,GAAT,GAAgE,IAA7BtyB,EAA6B,EAA7BA,IAC/B,MAAO,CACH3D,EAAG,CAAEY,IAFmD,EAAxBkD,KAEhBjD,IAFwC,EAAlB+C,OAGtC3D,EAAG,CAAEW,IAAK+C,EAAK9C,IAHyC,EAAXgD,QAKpD,CCVD,SAASqyB,GAAgB5zB,GACrB,YAAiBxM,IAAVwM,GAAiC,IAAVA,CACjC,CACD,SAAS6zB,GAAT,GAA6C,IAAzB7zB,EAAyB,EAAzBA,MAAOuC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC/B,OAASoxB,GAAgB5zB,KACpB4zB,GAAgBrxB,KAChBqxB,GAAgBpxB,EACxB,CACD,SAAS0B,GAAasG,GAClB,OAAQqpB,GAASrpB,IACbspB,GAAetpB,IACfA,EAAO5M,GACP4M,EAAOrI,QACPqI,EAAOpI,SACPoI,EAAOnI,OACd,CACD,SAASyxB,GAAetpB,GACpB,OAAOupB,GAAcvpB,EAAO9M,IAAMq2B,GAAcvpB,EAAO7M,EAC1D,CACD,SAASo2B,GAAcp/B,GACnB,OAAOA,GAAmB,OAAVA,CACnB,CCfD,SAASq/B,GAAW/mB,EAAOjN,EAAOwyB,GAG9B,OAAOA,EADQxyB,GADYiN,EAAQulB,EAGtC,CAID,SAASyB,GAAgBhnB,EAAOwlB,EAAWzyB,EAAOwyB,EAAa0B,GAI3D,YAHiB1gC,IAAb0gC,IACAjnB,EAAQ+mB,GAAW/mB,EAAOinB,EAAU1B,IAEjCwB,GAAW/mB,EAAOjN,EAAOwyB,GAAeC,CAClD,CAID,SAAS0B,GAAe/B,GAAuD,IAAjDK,EAAiD,uDAArC,EAAGzyB,EAAkC,uDAA1B,EAAGwyB,EAAuB,uCAAV0B,EAAU,uCAC3E9B,EAAK9zB,IAAM21B,GAAgB7B,EAAK9zB,IAAKm0B,EAAWzyB,EAAOwyB,EAAa0B,GACpE9B,EAAK7zB,IAAM01B,GAAgB7B,EAAK7zB,IAAKk0B,EAAWzyB,EAAOwyB,EAAa0B,EACvE,CAID,SAASE,GAAcC,EAAvB,GAAsC,IAAR32B,EAAQ,EAARA,EAAGC,EAAK,EAALA,EAC7Bw2B,GAAeE,EAAI32B,EAAGA,EAAE+0B,UAAW/0B,EAAEsC,MAAOtC,EAAE80B,aAC9C2B,GAAeE,EAAI12B,EAAGA,EAAE80B,UAAW90B,EAAEqC,MAAOrC,EAAE60B,YACjD,CAgDD,SAAS8B,GAAct0B,GACnB,OAAItB,OAAO61B,UAAUv0B,IAEdA,EAAQ,iBAAmBA,EAAQ,cAD/BA,EACwD,CACtE,CACD,SAASw0B,GAAcpC,EAAMvvB,GACzBuvB,EAAK9zB,IAAM8zB,EAAK9zB,IAAMuE,EACtBuvB,EAAK7zB,IAAM6zB,EAAK7zB,IAAMsE,CACzB,CAMD,SAAS4xB,GAAcrC,EAAMsC,EAA7B,GAAqE,oBAA3B75B,EAA2B,KAAtB85B,EAAsB,KAAZC,EAAY,KAC3DC,OAAuCrhC,IAA1BkhC,EAAWE,GAA2BF,EAAWE,GAAa,GAC3EpC,EAAc1oB,GAAIsoB,EAAK9zB,IAAK8zB,EAAK7zB,IAAKs2B,GAE5CV,GAAe/B,EAAMsC,EAAW75B,GAAM65B,EAAWC,GAAWnC,EAAakC,EAAW10B,MACvF,CAID,IAAM80B,GAAQ,CAAC,IAAK,SAAU,WACxBC,GAAQ,CAAC,IAAK,SAAU,WAI9B,SAASC,GAAaX,EAAKj2B,GACvBq2B,GAAcJ,EAAI32B,EAAGU,EAAW02B,IAChCL,GAAcJ,EAAI12B,EAAGS,EAAW22B,GACnC,CC7GD,SAASE,GAAmBt5B,EAAUw1B,GAClC,OAAOwC,GHeX,SAA4B1mB,EAAOkkB,GAC/B,IAAKA,EACD,OAAOlkB,EACX,IAAMioB,EAAU/D,EAAe,CAAEzzB,EAAGuP,EAAMzL,KAAM7D,EAAGsP,EAAM5L,MACnD8zB,EAAchE,EAAe,CAAEzzB,EAAGuP,EAAM3L,MAAO3D,EAAGsP,EAAM1L,SAC9D,MAAO,CACHF,IAAK6zB,EAAQv3B,EACb6D,KAAM0zB,EAAQx3B,EACd6D,OAAQ4zB,EAAYx3B,EACpB2D,MAAO6zB,EAAYz3B,EAE1B,CG1BkC03B,CAAmBz5B,EAAS2P,wBAAyB6lB,GACvF,CCaD,IAAMkE,GAAsB,IAAItlB,QAK1BulB,GAAAA,WACF,WAAYt/B,IAAe,eAIvB+D,KAAKw7B,eAAiB,KACtBx7B,KAAKy7B,YAAa,EAClBz7B,KAAK07B,iBAAmB,KACxB17B,KAAKy4B,YAAc,CAAE90B,EAAG,EAAGC,EAAG,GAI9B5D,KAAK27B,aAAc,EACnB37B,KAAK47B,uBAAwB,EAI7B57B,KAAK67B,QC7BY,CACrBl4B,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,ID+BjCxE,KAAK/D,cAAgBA,CACxB,C,oCACD,SAAM6/B,GAA4C,oEAAJ,CAAC,EAAG,IAA7BC,aAAAA,OAA6B,SAI9C,IAAqC,IAAjC/7B,KAAK/D,cAAc4d,UAAvB,CAEA,IAAM+d,EAAiB,SAAC1lB,GAGpB,EAAK6e,gBACDgL,GACA,EAAKA,aAAa3oB,GAAiBlB,EAAO,QAAQgB,MAEzD,EACK+jB,EAAU,SAAC/kB,EAAOkD,GACpB,IAAI7b,EAEJ,EAA+C,EAAKue,WAA5C3Y,EAAR,EAAQA,KAAM68B,EAAd,EAAcA,gBAAiBC,EAA/B,EAA+BA,cAC3B98B,GAAS68B,IACL,EAAKR,gBACL,EAAKA,iBACT,EAAKA,eAAiB5mB,GAAczV,GAE/B,EAAKq8B,mBAGd,EAAKC,YAAa,EAClB,EAAKC,iBAAmB,KACxB,EAAKQ,qBACD,EAAKjgC,cAAc0S,aACnB,EAAK1S,cAAc0S,WAAWwtB,oBAAqB,EACnD,EAAKlgC,cAAc0S,WAAWzD,YAASzR,GAK3CkgC,IAAS,SAACtB,GACN,IAAI9+B,EAAIimB,EACJhjB,EAAU,EAAK4/B,mBAAmB/D,GAAM71B,OAAS,EAIrD,GAAIiD,GAAQzC,KAAKxG,GAAU,CACvB,IAAM6/B,EAA8G,QAA9F7c,EAA8C,QAAxCjmB,EAAK,EAAK0C,cAAc0S,kBAA+B,IAAPpV,OAAgB,EAASA,EAAG+J,cAA2B,IAAPkc,OAAgB,EAASA,EAAG8c,UAAUjE,GAClK,GAAIgE,EAEA7/B,EADe47B,GAAWiE,IACN92B,WAAW/I,GAAW,IAEjD,CACD,EAAKi8B,YAAYJ,GAAQ77B,CAC5B,IAEe,OAAhBy/B,QAAwC,IAAhBA,GAAkCA,EAAY/pB,EAAOkD,GAChC,QAA5C7b,EAAK,EAAK0C,cAAca,sBAAmC,IAAPvD,GAAyBA,EAAG8b,UAAUjE,GAAcwiB,MAAM,GAClH,EACKsD,EAAS,SAAChlB,EAAOkD,GAEnB,MAAyE,EAAK0C,WAAtEkkB,EAAR,EAAQA,gBAAiBO,EAAzB,EAAyBA,kBAAmBC,EAA5C,EAA4CA,gBAAiBC,EAA7D,EAA6DA,OAE7D,GAAKT,GAAoB,EAAKR,eAA9B,CAEA,IAAQ9uB,EAAW0I,EAAX1I,OAER,GAAI6vB,GAA+C,OAA1B,EAAKb,iBAM1B,OALA,EAAKA,iBAAmBgB,GAAoBhwB,QAEd,OAA1B,EAAKgvB,mBACe,OAApBc,QAAgD,IAApBA,GAAsCA,EAAgB,EAAKd,oBAK/F,EAAKiB,WAAW,IAAKvnB,EAAKlC,MAAOxG,GACjC,EAAKiwB,WAAW,IAAKvnB,EAAKlC,MAAOxG,GAOjC,EAAKzQ,cAAcY,SAKR,OAAX4/B,QAA8B,IAAXA,GAA6BA,EAAOvqB,EAAOkD,EAzBpD,CA0Bb,EACKqiB,EAAe,SAACvlB,EAAOkD,GAAR,OAAiB,EAAKmW,KAAKrZ,EAAOkD,EAAlC,EACrBpV,KAAK48B,WAAa,IAAIrG,GAAWuF,EAAa,CAC1ClE,eAAAA,EACAX,QAAAA,EACAC,OAAAA,EACAO,aAAAA,GACD,CAAE18B,mBAAoBiF,KAAK/D,cAAc4gC,yBAxFlC,CAyFb,G,kBACD,SAAK3qB,EAAOkD,GACR,IAAMqmB,EAAaz7B,KAAKy7B,WAExB,GADAz7B,KAAK2jB,SACA8X,EAAL,CAEA,IAAQ1T,EAAa3S,EAAb2S,SACR/nB,KAAK2uB,eAAe5G,GACpB,IAAQ+U,EAAc98B,KAAK8X,WAAnBglB,UACM,OAAdA,QAAoC,IAAdA,GAAgCA,EAAU5qB,EAAOkD,EAJ7D,CAKb,G,oBACD,WACI,IAAI7b,EAAIimB,EACRxf,KAAKy7B,YAAa,EACdz7B,KAAK/D,cAAc0S,aACnB3O,KAAK/D,cAAc0S,WAAWwtB,oBAAqB,GAE5B,QAA1B5iC,EAAKyG,KAAK48B,kBAA+B,IAAPrjC,GAAyBA,EAAGg+B,MAC/Dv3B,KAAK48B,gBAAanjC,GACUuG,KAAK8X,WAAzBkkB,iBACgBh8B,KAAKw7B,iBACzBx7B,KAAKw7B,iBACLx7B,KAAKw7B,eAAiB,MAEmB,QAA5Chc,EAAKxf,KAAK/D,cAAca,sBAAmC,IAAP0iB,GAAyBA,EAAGnK,UAAUjE,GAAcwiB,MAAM,EAClH,G,wBACD,SAAWyE,EAAM0E,EAAQrwB,GACrB,IAAQvN,EAASa,KAAK8X,WAAd3Y,KAER,GAAKuN,GAAWswB,GAAW3E,EAAMl5B,EAAMa,KAAK07B,kBAA5C,CAEA,IAAMuB,EAAYj9B,KAAKo8B,mBAAmB/D,GACtCne,EAAOla,KAAKy4B,YAAYJ,GAAQ3rB,EAAO2rB,GAEvCr4B,KAAK27B,aAAe37B,KAAK27B,YAAYtD,KACrCne,ENlKZ,SAA0BhH,EAA1B,EAA+C2oB,GAAS,IAArBt3B,EAAqB,EAArBA,IAAKC,EAAgB,EAAhBA,IASpC,YARY/K,IAAR8K,GAAqB2O,EAAQ3O,EAE7B2O,EAAQ2oB,EAAU9rB,GAAIxL,EAAK2O,EAAO2oB,EAAQt3B,KAAOE,KAAKD,IAAI0O,EAAO3O,QAEpD9K,IAAR+K,GAAqB0O,EAAQ1O,IAElC0O,EAAQ2oB,EAAU9rB,GAAIvL,EAAK0O,EAAO2oB,EAAQr3B,KAAOC,KAAKF,IAAI2O,EAAO1O,IAE9D0O,CACV,CMwJkBgqB,CAAiBhjB,EAAMla,KAAK27B,YAAYtD,GAAOr4B,KAAK67B,QAAQxD,KAEvE4E,EAAUt6B,IAAIuX,EAPJ,CAQb,G,gCACD,WAAqB,WACjB,EAAyCla,KAAK8X,WAAtCqlB,EAAR,EAAQA,gBAAiB7D,EAAzB,EAAyBA,YACjBh2B,GAAWtD,KAAK/D,cAAc0S,YAAc,CAAC,GAA7CrL,OACF85B,EAAkBp9B,KAAK27B,YACzBwB,GAAmBlgC,EAAYkgC,GAC1Bn9B,KAAK27B,cACN37B,KAAK27B,YAAc37B,KAAKq9B,yBAKxBr9B,KAAK27B,eADLwB,IAAmB75B,INpJnC,SAAiCg5B,EAAjC,GAA0E,IAA5Bh1B,EAA4B,EAA5BA,IAAKG,EAAuB,EAAvBA,KAAMD,EAAiB,EAAjBA,OAAQD,EAAS,EAATA,MAC7D,MAAO,CACH5D,EAAGq1B,GAA4BsD,EAAU34B,EAAG8D,EAAMF,GAClD3D,EAAGo1B,GAA4BsD,EAAU14B,EAAG0D,EAAKE,GAExD,CMgJkC81B,CAAwBh6B,EAAOg5B,UAAWa,GAMrEn9B,KAAK67B,QN7Fb,WAA0D,IAA9BvC,EAA8B,uDAAhBF,GAOtC,OANoB,IAAhBE,EACAA,EAAc,GAEO,IAAhBA,IACLA,EAAcF,IAEX,CACHz1B,EAAG01B,GAAmBC,EAAa,OAAQ,SAC3C11B,EAAGy1B,GAAmBC,EAAa,MAAO,UAEjD,CMkFsBiE,CAAmBjE,GAK9B8D,IAAoBp9B,KAAK27B,aACzBr4B,GACAtD,KAAK27B,cACJ37B,KAAK47B,uBACNjC,IAAS,SAACtB,GACF,EAAK+D,mBAAmB/D,KACxB,EAAKsD,YAAYtD,GNtHrC,SAA+B/0B,EAAQq4B,GACnC,IAAM6B,EAAsB,CAAC,EAO7B,YANwB/jC,IAApBkiC,EAAYp3B,MACZi5B,EAAoBj5B,IAAMo3B,EAAYp3B,IAAMjB,EAAOiB,UAE/B9K,IAApBkiC,EAAYn3B,MACZg5B,EAAoBh5B,IAAMm3B,EAAYn3B,IAAMlB,EAAOiB,KAEhDi5B,CACV,CM6G4CC,CAAsBn6B,EAAOg5B,UAAUjE,GAAO,EAAKsD,YAAYtD,IAE/F,GAER,G,mCACD,WACI,MAAmEr4B,KAAK8X,WAA/C6jB,EAAzB,EAAQwB,gBAA8BO,EAAtC,EAAsCA,yBACtC,IAAK/B,IAAgB1+B,EAAY0+B,GAC7B,OAAO,EACX,IAAMgC,EAAqBhC,EAAYn/B,QAE/BmS,EAAe3O,KAAK/D,cAApB0S,WAER,IAAKA,IAAeA,EAAWrL,OAC3B,OAAO,EACX,IAAMs6B,EDrNd,SAAwBnvB,EAASovB,EAAoB9iC,GACjD,IAAM+iC,EAAc5C,GAAmBzsB,EAAS1T,GACxCgjC,EAAWF,EAAXE,OAKR,OAJIA,IACAtD,GAAcqD,EAAYn6B,EAAGo6B,EAAOrxB,OAAO/I,GAC3C82B,GAAcqD,EAAYl6B,EAAGm6B,EAAOrxB,OAAO9I,IAExCk6B,CACV,CC6M8BE,CAAeL,EAAoBhvB,EAAW6H,KAAMxW,KAAK/D,cAAc4gC,yBAC1FoB,EN/JZ,SAAiC3B,EAAWsB,GACxC,MAAO,CACHj6B,EAAGs1B,GAA4BqD,EAAU34B,EAAGi6B,EAAej6B,GAC3DC,EAAGq1B,GAA4BqD,EAAU14B,EAAGg6B,EAAeh6B,GAElE,CM0JiCs6B,CAAwBvvB,EAAWrL,OAAOg5B,UAAWsB,GAK/E,GAAIF,EAA0B,CAC1B,IAAMS,EAAkBT,EJvNpC,YAA2C,IAAR/5B,EAAQ,EAARA,EAAGC,EAAK,EAALA,EAClC,MAAO,CAAE0D,IAAK1D,EAAEW,IAAKgD,MAAO5D,EAAEa,IAAKgD,OAAQ5D,EAAEY,IAAKiD,KAAM9D,EAAEY,IAC7D,CIqN4D65B,CAAwBH,IACzEj+B,KAAK47B,wBAA0BuC,EAC3BA,IACAF,EAAsBrE,GAAwBuE,GAErD,CACD,OAAOF,CACV,G,4BACD,SAAelW,GAAU,WACrB,EAAoG/nB,KAAK8X,WAAjG3Y,EAAR,EAAQA,KAAMk/B,EAAd,EAAcA,aAAc/E,EAA5B,EAA4BA,YAAagF,EAAzC,EAAyCA,eAAgBC,EAAzD,EAAyDA,iBAAkBC,EAA3E,EAA2EA,oBACrE7C,EAAc37B,KAAK27B,aAAe,CAAC,EACnC8C,EAAqB9E,IAAS,SAACtB,GACjC,IAAI9+B,EACJ,GAAKyjC,GAAW3E,EAAMl5B,EAAM,EAAKu8B,kBAAjC,CAGA,IAAIxqB,EAAoG,QAAtF3X,EAAqB,OAAhBoiC,QAAwC,IAAhBA,OAAyB,EAASA,EAAYtD,UAA0B,IAAP9+B,EAAgBA,EAAK,CAAC,EAClIglC,IACArtB,EAAa,CAAE3M,IAAK,EAAGC,IAAK,IAOhC,IAAM+pB,EAAkB+K,EAAc,IAAM,IACtC9K,EAAgB8K,EAAc,GAAK,IACnCvK,GAAU,gBACZ3qB,KAAM,UACN2jB,SAAUsW,EAAetW,EAASsQ,GAAQ,EAC1C9J,gBAAAA,EACAC,cAAAA,EACA/D,aAAc,IACd1B,UAAW,EACX5I,UAAW,IACRme,GACAptB,GAKP,OAAO,EAAKwtB,wBAAwBrG,EAAMtJ,EA1BzC,CA2BJ,IAED,OAAO8B,QAAQ1Z,IAAIsnB,GAAoBzN,KAAKwN,EAC/C,G,qCACD,SAAwBnG,EAAMnnB,GAE1B,OAAOyd,GAAe0J,EADJr4B,KAAKo8B,mBAAmB/D,GACH,EAAGnnB,EAC7C,G,2BACD,WAAgB,WACZyoB,IAAS,SAACtB,GAAD,OAAU,EAAK+D,mBAAmB/D,GAAM9M,MAAxC,GACZ,G,gCAOD,SAAmB8M,GACf,IAAI9+B,EAAIimB,EACFmf,EAAU,QAAUtG,EAAK/oB,cACzBsvB,EAAsB5+B,KAAK/D,cAAc6b,WAAW6mB,GAC1D,OAAOC,GAED5+B,KAAK/D,cAAc21B,SAASyG,EAA4G,QAArG7Y,EAAsD,QAAhDjmB,EAAKyG,KAAK/D,cAAc6b,WAAWlb,eAA4B,IAAPrD,OAAgB,EAASA,EAAG8+B,UAA0B,IAAP7Y,EAAgBA,EAAK,EAC9K,G,0BACD,SAAatM,GAAO,WAChBymB,IAAS,SAACtB,GAGN,GAAK2E,GAAW3E,EAFC,EAAKvgB,WAAd3Y,KAEoB,EAAKu8B,kBAAjC,CAEA,IAAQ/sB,EAAe,EAAK1S,cAApB0S,WACFsuB,EAAY,EAAKb,mBAAmB/D,GAC1C,GAAI1pB,GAAcA,EAAWrL,OAAQ,CACjC,MAAqBqL,EAAWrL,OAAOg5B,UAAUjE,GAAzC9zB,EAAR,EAAQA,IAAKC,EAAb,EAAaA,IACby4B,EAAUt6B,IAAIuQ,EAAMmlB,GAAQtoB,GAAIxL,EAAKC,EAAK,IAC7C,CANS,CAOb,GACJ,G,4CAMD,WAAiC,IACzBjL,EADyB,OAE7B,GAAKyG,KAAK/D,cAAcO,QAAxB,CAEA,MAAkCwD,KAAK8X,WAA/B3Y,EAAR,EAAQA,KAAMg+B,EAAd,EAAcA,gBACNxuB,EAAe3O,KAAK/D,cAApB0S,WACR,GAAK1R,EAAYkgC,IAAqBxuB,GAAe3O,KAAK27B,YAA1D,CAMA37B,KAAK+wB,gBAKL,IAAM8N,EAAc,CAAEl7B,EAAG,EAAGC,EAAG,GAC/B+1B,IAAS,SAACtB,GACN,IAAM4E,EAAY,EAAKb,mBAAmB/D,GAC1C,GAAI4E,EAAW,CACX,IAAMxR,EAASwR,EAAUz6B,MACzBq8B,EAAYxG,GNvQ5B,SAAoBltB,EAAQD,GACxB,IAAIuB,EAAS,GACPqyB,EAAe1G,GAAWjtB,GAC1B4zB,EAAe3G,GAAWltB,GAOhC,OANI6zB,EAAeD,EACfryB,EAASwY,GAAS/Z,EAAO3G,IAAK2G,EAAO1G,IAAMs6B,EAAc3zB,EAAO5G,KAE3Du6B,EAAeC,IACpBtyB,EAASwY,GAAS9Z,EAAO5G,IAAK4G,EAAO3G,IAAMu6B,EAAc7zB,EAAO3G,MAE7DD,GAAM,EAAG,EAAGmI,EACtB,CM4PmCD,CAAW,CAAEjI,IAAKknB,EAAQjnB,IAAKinB,GAAU,EAAKkQ,YAAYtD,GACjF,CACJ,IAID,IAAQvuB,EAAsB9J,KAAK/D,cAAc6b,WAAzChO,kBACR9J,KAAK/D,cAAcO,QAAQuN,MAAM1F,UAAYyF,EACvCA,EAAkB,CAAC,EAAG,IACtB,OACqB,QAA1BvQ,EAAKoV,EAAW6H,YAAyB,IAAPjd,GAAyBA,EAAGylC,eAC/DrwB,EAAWswB,eACXj/B,KAAKk8B,qBAKLvC,IAAS,SAACtB,GACN,GAAK2E,GAAW3E,EAAMl5B,EAAM,MAA5B,CAKA,IAAM89B,EAAY,EAAKb,mBAAmB/D,GAC1C,EAAqB,EAAKsD,YAAYtD,GAA9B9zB,EAAR,EAAQA,IAAKC,EAAb,EAAaA,IACby4B,EAAUt6B,IAAIoN,GAAIxL,EAAKC,EAAKq6B,EAAYxG,IAN9B,CAOb,GAzCS,CAJA,CA8Cb,G,0BACD,WAAe,IACP9+B,EADO,OAEX,GAAKyG,KAAK/D,cAAcO,QAAxB,CAEA8+B,GAAoB34B,IAAI3C,KAAK/D,cAAe+D,MAC5C,IAIMk/B,EAAsB5qB,GAJZtU,KAAK/D,cAAcO,QAIkB,eAAe,SAAC0V,GACjE,MAAsC,EAAK4F,WAAnC3Y,EAAR,EAAQA,KAAR,IAAcsM,aACdtM,SADA,WACwB,EAAKxB,MAAMuU,EACtC,IACKitB,EAAyB,WAEvBliC,EADwB,EAAK6a,WAAzBqlB,mBAEJ,EAAKxB,YAAc,EAAK0B,wBAE/B,EACO1uB,EAAe3O,KAAK/D,cAApB0S,WACFywB,EAA4BzwB,EAAWmD,iBAAiB,UAAWqtB,GACrExwB,IAAeA,EAAWrL,SACC,QAA1B/J,EAAKoV,EAAW6H,YAAyB,IAAPjd,GAAyBA,EAAGylC,eAC/DrwB,EAAWswB,gBAEfE,IAKA,IAAME,EAAqB3tB,GAAYtY,OAAQ,UAAU,kBAAM,EAAKkmC,gCAAX,IAKnDC,EAA2B5wB,EAAWmD,iBAAiB,aAAc,YAAiC,IAA9B6Q,EAA8B,EAA9BA,MAAO6c,EAAuB,EAAvBA,iBAC7E,EAAK/D,YAAc+D,IACnB7F,IAAS,SAACtB,GACN,IAAMnH,EAAc,EAAKkL,mBAAmB/D,GACvCnH,IAEL,EAAKuH,YAAYJ,IAAS1V,EAAM0V,GAAMK,UACtCxH,EAAYvuB,IAAIuuB,EAAY1uB,MAAQmgB,EAAM0V,GAAMK,WACnD,IACD,EAAKz8B,cAAcY,SAE1B,IACD,OAAO,WACHwiC,IACAH,IACAE,IAC6B,OAA7BG,QAAkE,IAA7BA,GAA+CA,GACvF,CAjDS,CAkDb,G,sBACD,WACI,IAAM1jC,EAAQmE,KAAK/D,cAAc6b,WACjC,EAA0Jjc,EAAlJsD,KAAAA,OAAR,WAA0JtD,EAApI0gC,kBAAAA,OAAtB,WAA0J1gC,EAAzGmgC,gBAAAA,OAAjD,WAA0JngC,EAAhFshC,gBAAAA,OAA1E,WAA0JthC,EAAvDy9B,YAAAA,OAAnG,MAAiHF,GAAjH,IAA0Jv9B,EAAzBwiC,aAAAA,OAAjI,SACA,yBACOxiC,GADP,IAEIsD,KAAAA,EACAo9B,kBAAAA,EACAP,gBAAAA,EACAmB,gBAAAA,EACA7D,YAAAA,EACA+E,aAAAA,GAEP,K,EArZC9C,GAuZN,SAASyB,GAAWyC,EAAWtgC,EAAMu8B,GACjC,QAAkB,IAATv8B,GAAiBA,IAASsgC,KACT,OAArB/D,GAA6BA,IAAqB+D,EAC1D,CAQD,SAAS/C,GAAoBhwB,GAA4B,IAApBgzB,EAAoB,uDAAJ,GAC7CD,EAAY,KAOhB,OANIh7B,KAAKgX,IAAI/O,EAAO9I,GAAK87B,EACrBD,EAAY,IAEPh7B,KAAKgX,IAAI/O,EAAO/I,GAAK+7B,IAC1BD,EAAY,KAETA,CACV,CE9bD,IAAMtgC,GAAO,CACTI,IAAK6Y,ICaT,YAA2F,IAAlEunB,EAAkE,EAAlEA,MAAOC,EAA2D,EAA3DA,WAAYC,EAA+C,EAA/CA,SAAUC,EAAqC,EAArCA,kBAAmB7jC,EAAkB,EAAlBA,cAC/D8jC,EAAeJ,GAASC,GAAcC,GAAYC,EAClDlD,GAAatgC,EAAAA,EAAAA,QAAO,MAClBvB,GAAuBiB,EAAAA,EAAAA,YAAWnB,GAAlCE,mBACFy7B,EAAW,CACboB,eAAgBkI,EAChB7I,QAAS2I,EACT1I,OAAQyI,EACRnI,MAAO,SAACtlB,EAAOkD,GACXwnB,EAAWpgC,QAAU,KACrBqjC,GAAYA,EAAS3tB,EAAOkD,EAC/B,IAELrb,EAAAA,EAAAA,YAAU,WACqB,OAAvB6iC,EAAWpgC,SACXogC,EAAWpgC,QAAQwjC,eAAexJ,EAEzC,IAMDjiB,GAAgBtY,EAAe,cAAe8jC,GAL9C,SAAuB7tB,GACnB0qB,EAAWpgC,QAAU,IAAI+5B,GAAWrkB,EAAOskB,EAAU,CACjDz7B,mBAAAA,GAEP,GAED2a,IAAiB,kBAAMknB,EAAWpgC,SAAWogC,EAAWpgC,QAAQ+6B,KAA/C,GACpB,IDrCGp4B,KAAMiZ,IEGV,SAAiBvc,GACb,IAAsBokC,EAAqCpkC,EAAnDqkC,aAAiCjkC,EAAkBJ,EAAlBI,cACnCikC,EAAezgC,GAAY,kBAAM,IAAI87B,GAA0Bt/B,EAApC,KAGjClC,EAAAA,EAAAA,YAAU,kBAAMkmC,GAAqBA,EAAkB/J,UAAUgK,EAAvD,GAAsE,CAACA,EAAcD,KAE/FlmC,EAAAA,EAAAA,YAAU,kBAAMmmC,EAAaC,cAAnB,GAAmC,CAACD,GACjD,KCfD,SAASh8B,GAActJ,GACnB,MAAwB,kBAAVA,GAAsBA,EAAM2I,WAAW,SACxD,CAUD,IAAM68B,GAAmB,uDACzB,SAASC,GAAiB7jC,GACtB,IAAMghB,EAAQ4iB,GAAiBE,KAAK9jC,GACpC,IAAKghB,EACD,MAAO,CAAC,GACZ,eAA4BA,EAA5B,GACA,MAAO,CADP,UAEH,CAED,SAAS+iB,GAAiB/jC,EAASiS,GAAoB,IAAX+xB,EAAW,uDAAH,EACvC,gEAA6EhkC,EAA7E,wDACT,MAA0B6jC,GAAiB7jC,GAA3C,gBAAOikC,EAAP,KAAcvoB,EAAd,KAEA,GAAKuoB,EAAL,CAGA,IAAMzvB,EAAW5X,OAAOsnC,iBAAiBjyB,GAASkyB,iBAAiBF,GACnE,OAAIzvB,EACOA,EAASlG,OAEX5G,GAAcgU,GAEZqoB,GAAiBroB,EAAUzJ,EAAS+xB,EAAQ,GAG5CtoB,CAXD,CAab,CClCD,IAqBI0oB,GArBEC,GAAiB,IAAIz9B,IAAI,CAC3B,QACA,SACA,MACA,OACA,QACA,SACA,IACA,MAEE09B,GAAkB,SAAChgC,GAAD,OAAS+/B,GAAen+B,IAAI5B,EAA5B,EAIlBigC,GAAsB,SAACnmC,EAAOylB,GAGhCzlB,EAAM+H,IAAI0d,GAAI,GACdzlB,EAAM+H,IAAI0d,EACb,EACK2gB,GAAgB,SAACzjC,GAAD,OAAOA,IAAMwI,IAAUxI,IAAMmI,EAA7B,GAEtB,SAAWk7B,GACPA,EAAoB,MAAY,QAChCA,EAAoB,OAAa,SACjCA,EAAoB,KAAW,OAC/BA,EAAoB,MAAY,QAChCA,EAAoB,IAAU,MAC9BA,EAAoB,OAAa,QANrC,EAOGA,KAAyBA,GAAuB,CAAC,IACpD,IAAMK,GAAmB,SAACC,EAAQC,GAAT,OAAiB57B,WAAW27B,EAAO97B,MAAM,MAAM+7B,GAA/C,EACnBC,GAAyB,SAACC,EAAMC,GAAP,OAAgB,SAACC,EAAD,GAA0B,IAAhBl9B,EAAgB,EAAhBA,UACrD,GAAkB,SAAdA,IAAyBA,EACzB,OAAO,EACX,IAAMm9B,EAAWn9B,EAAUmZ,MAAM,sBACjC,GAAIgkB,EACA,OAAOP,GAAiBO,EAAS,GAAIF,GAGrC,IAAMJ,EAAS78B,EAAUmZ,MAAM,oBAC/B,OAAI0jB,EACOD,GAAiBC,EAAO,GAAIG,GAG5B,CAGlB,CAhB8B,EAiBzBp3B,GAAgB,IAAI7G,IAAI,CAAC,IAAK,IAAK,MACnCq+B,GAAgCv+B,EAAmB+d,QAAO,SAACngB,GAAD,OAAUmJ,GAAcvH,IAAI5B,EAA5B,IAChE,SAAS4gC,GAAgCzlC,GACrC,IAAM0lC,EAAoB,GAW1B,OAVAF,GAA8B1wB,SAAQ,SAACjQ,GACnC,IAAMlG,EAAQqB,EAAc21B,SAAS9wB,QACvBrH,IAAVmB,IACA+mC,EAAkBn3B,KAAK,CAAC1J,EAAKlG,EAAM4H,QACnC5H,EAAM+H,IAAI7B,EAAIyC,WAAW,SAAW,EAAI,GAE/C,IAEGo+B,EAAkBt8B,QAClBpJ,EAAcY,SACX8kC,CACV,CACD,IAAMC,GAAmB,CAErB36B,MAAO,kBAAGtD,EAAH,EAAGA,EAAH,IAAUmE,YAAAA,OAAV,MAAwB,IAAxB,MAA6BF,aAAAA,OAA7B,MAA4C,IAA5C,SAAsDjE,EAAEa,IAAMb,EAAEY,IAAMgB,WAAWuC,GAAevC,WAAWqC,EAA3G,EACPT,OAAQ,kBAAGvD,EAAH,EAAGA,EAAH,IAAU+D,WAAAA,OAAV,MAAuB,IAAvB,MAA4BE,cAAAA,OAA5B,MAA4C,IAA5C,SAAsDjE,EAAEY,IAAMZ,EAAEW,IAAMgB,WAAWoC,GAAcpC,WAAWsC,EAA1G,EACRP,IAAK,SAACi6B,EAAD,OAAUj6B,EAAV,EAAUA,IAAV,OAAoB/B,WAAW+B,EAA/B,EACLG,KAAM,SAAC85B,EAAD,OAAU95B,EAAV,EAAUA,KAAV,OAAqBlC,WAAWkC,EAAhC,EACND,OAAQ,kBAAG5D,EAAH,EAAGA,EAAO0D,EAAV,EAAUA,IAAV,OAAoB/B,WAAW+B,IAAQ1D,EAAEY,IAAMZ,EAAEW,IAAjD,EACRgD,MAAO,kBAAG5D,EAAH,EAAGA,EAAO8D,EAAV,EAAUA,KAAV,OAAqBlC,WAAWkC,IAAS9D,EAAEa,IAAMb,EAAEY,IAAnD,EAEPZ,EAAGy9B,GAAuB,EAAG,IAC7Bx9B,EAAGw9B,GAAuB,EAAG,KAE3BS,GAA2B,SAAC32B,EAAQjP,EAAe6lC,GACrD,IAAMC,EAAa9lC,EAAci/B,qBAC3BzsB,EAAUxS,EAAcO,QACxBwlC,EAAuBtB,iBAAiBjyB,GACtCwzB,EAAYD,EAAZC,QACFx1B,EAAS,CAAC,EAGA,SAAZw1B,GACAhmC,EAAcimC,eAAe,UAAWh3B,EAAO+2B,SAAW,SAK9DH,EAAY/wB,SAAQ,SAACjQ,GACjB2L,EAAO3L,GAAO8gC,GAAiB9gC,GAAKihC,EAAYC,EACnD,IAED/lC,EAAcY,SACd,IAAMslC,EAAalmC,EAAci/B,qBAQjC,OAPA4G,EAAY/wB,SAAQ,SAACjQ,GAGjB,IAAMlG,EAAQqB,EAAc21B,SAAS9wB,GACrCigC,GAAoBnmC,EAAO6R,EAAO3L,IAClCoK,EAAOpK,GAAO8gC,GAAiB9gC,GAAKqhC,EAAYH,EACnD,IACM92B,CACV,EAmHD,SAASk3B,GAAenmC,EAAeiP,EAAQuB,EAAQwE,GACnD,OAjNqB,SAAC/F,GACtB,OAAOzQ,OAAOkT,KAAKzC,GAAQnN,KAAK+iC,GACnC,CA+MUuB,CAAiBn3B,GAnHa,SAACjP,EAAeiP,GAA4C,IAApCuB,EAAoC,uDAA3B,CAAC,EAAGwE,EAAuB,uDAAP,CAAC,EAC3F/F,GAAS,UAAKA,GACd+F,GAAgB,UAAKA,GACrB,IAAMqxB,EAAuB7nC,OAAOkT,KAAKzC,GAAQ+V,OAAO6f,IAGpDyB,EAAyB,GACzBC,GAAsC,EACpCC,EAAuB,GA4E7B,GA3EAH,EAAqBvxB,SAAQ,SAACjQ,GAC1B,IAAMlG,EAAQqB,EAAc21B,SAAS9wB,GACrC,GAAK7E,EAAc01B,SAAS7wB,GAA5B,CAEA,IAGI4hC,EAHA1d,EAAOvY,EAAO3L,GACd6hC,EAAWtR,GAAuBrM,GAChC3E,EAAKnV,EAAOpK,GAMlB,GAAI6O,GAAkB0Q,GAAK,CACvB,IAAMuiB,EAAeviB,EAAGhb,OAClBw9B,EAAsB,OAAVxiB,EAAG,GAAc,EAAI,EACvC2E,EAAO3E,EAAGwiB,GACVF,EAAWtR,GAAuBrM,GAClC,IAAK,IAAI3K,EAAIwoB,EAAWxoB,EAAIuoB,EAAcvoB,IACjCqoB,EAMSrR,GAAuBhR,EAAGhG,KALpCqoB,EAASrR,GAAuBhR,EAAGhG,OACdsoB,GAChB3B,GAAc2B,IAAa3B,GAAc0B,EAMzD,MAEGA,EAASrR,GAAuBhR,GAEpC,GAAIsiB,IAAaD,EAGb,GAAI1B,GAAc2B,IAAa3B,GAAc0B,GAAS,CAClD,IAAMlmC,EAAU5B,EAAM4H,MACC,kBAAZhG,GACP5B,EAAM+H,IAAI4C,WAAW/I,IAEP,kBAAP6jB,EACPnV,EAAOpK,GAAOyE,WAAW8a,GAEpB7iB,MAAMC,QAAQ4iB,IAAOqiB,IAAWh9B,KACrCwF,EAAOpK,GAAOuf,EAAGrB,IAAIzZ,YAE5B,MACsB,OAAbo9B,QAAkC,IAAbA,OAAsB,EAASA,EAASt+B,aACvD,OAAXq+B,QAA8B,IAAXA,OAAoB,EAASA,EAAOr+B,aAC9C,IAAT2gB,GAAqB,IAAP3E,GAGF,IAAT2E,EACApqB,EAAM+H,IAAI+/B,EAAOr+B,UAAU2gB,IAG3B9Z,EAAOpK,GAAO6hC,EAASt+B,UAAUgc,IAMhCmiB,IACDD,EACIb,GAAgCzlC,GACpCumC,GAAsC,GAE1CC,EAAqBj4B,KAAK1J,GAC1BmQ,EAAcnQ,QACarH,IAAvBwX,EAAcnQ,GACRmQ,EAAcnQ,GACdoK,EAAOpK,GACjBigC,GAAoBnmC,EAAOylB,GApEzB,CAuEb,IACGoiB,EAAqBp9B,OAAQ,CAC7B,IAAMy9B,EAAUL,EAAqB1/B,QAAQ,WAAa,EACpD3J,OAAO2pC,YACP,KACAC,EAAkBnB,GAAyB32B,EAAQjP,EAAewmC,GAaxE,OAXIF,EAAuBl9B,QACvBk9B,EAAuBxxB,SAAQ,YAAkB,oBAAhBjQ,EAAgB,KAAXlG,EAAW,KAC7CqB,EAAc21B,SAAS9wB,GAAK6B,IAAI/H,EACnC,IAGLqB,EAAcY,SAEV1D,GAAyB,OAAZ2pC,GACb1pC,OAAO6pC,SAAS,CAAE37B,IAAKw7B,IAEpB,CAAE53B,OAAQ83B,EAAiB/xB,cAAAA,EACrC,CAEG,MAAO,CAAE/F,OAAAA,EAAQ+F,cAAAA,EAExB,CAUSiyB,CAAiCjnC,EAAeiP,EAAQuB,EAAQwE,GAChE,CAAE/F,OAAAA,EAAQ+F,cAAAA,EACnB,CC/ND,IAAMkyB,GAAkB,SAAClnC,EAAeiP,EAAQuB,EAAQwE,GACpD,IAAMD,EFuCV,SAA6B/U,EAA7B,EAA2DgV,GAAe,IAAzB/F,EAAyB,oBAChEuD,EAAUxS,EAAcO,QAC9B,KAAMiS,aAAmB20B,SACrB,MAAO,CAAEl4B,OAAAA,EAAQ+F,cAAAA,GAiBrB,IAAK,IAAMnQ,KAdPmQ,IACAA,GAAgB,UAAKA,IAGzBhV,EAAcwU,OAAOM,SAAQ,SAACnW,GAC1B,IAAM4B,EAAU5B,EAAM4H,MACtB,GAAK0B,GAAc1H,GAAnB,CAEA,IAAMwU,EAAWuvB,GAAiB/jC,EAASiS,GACvCuC,GACApW,EAAM+H,IAAIqO,EAHJ,CAIb,IAGiB9F,EAAQ,CACtB,IAAM1O,EAAU0O,EAAOpK,GACvB,GAAKoD,GAAc1H,GAAnB,CAEA,IAAMwU,EAAWuvB,GAAiB/jC,EAASiS,GACtCuC,IAGL9F,EAAOpK,GAAOkQ,EAIVC,QAAwCxX,IAAvBwX,EAAcnQ,KAC/BmQ,EAAcnQ,GAAOtE,GAVb,CAYf,CACD,MAAO,CAAE0O,OAAAA,EAAQ+F,cAAAA,EACpB,CE5EoBoyB,CAAoBpnC,EAAeiP,EAAQ+F,GAG5D,OAAOmxB,GAAenmC,EAFtBiP,EAAS8F,EAAS9F,OAE2BuB,EAD7CwE,EAAgBD,EAASC,cAE5B,ECXKqyB,GAAuB,CAAE9mC,QAAS,MAClC+mC,GAA2B,CAAE/mC,SAAS,G,sBCkBtCgnC,GAAe/oC,OAAOkT,KAAK5O,GAC3B0kC,GAAcD,GAAan+B,OAC3Bq+B,GAAoB,CACtB,iBACA,oBACA,SACA,UACA,sBACA,gBACA,uBACA,2BAMEC,GAAAA,WACF,cAAgF,WAAlE5nC,EAAkE,EAAlEA,OAAQF,EAA0D,EAA1DA,MAAOO,EAAmD,EAAnDA,oBAAqBR,EAA8B,EAA9BA,YAAgBiO,EAAc,uDAAJ,CAAC,GAAG,eAK5E7J,KAAKxD,QAAU,KAIfwD,KAAKE,SAAW,IAAIkD,IAIpBpD,KAAK/B,eAAgB,EACrB+B,KAAKnC,uBAAwB,EAQ7BmC,KAAKizB,mBAAqB,KAM1BjzB,KAAKyQ,OAAS,IAAIlO,IAKlBvC,KAAK6Z,WAAY,EAKjB7Z,KAAK4jC,mBAAqB,IAAIrhC,IAM9BvC,KAAK6jC,iBAAmB,CAAC,EAIzB7jC,KAAK8jC,OAAS,CAAC,EAMf9jC,KAAK+jC,uBAAyB,CAAC,EAC/B/jC,KAAKgkC,aAAe,kBAAM,EAAKhnC,OAAO,SAAU,EAAK4M,aAAjC,EACpB5J,KAAKnD,OAAS,WACL,EAAKL,UAEV,EAAKynC,eACL,EAAKC,eAAe,EAAK1nC,QAAS,EAAKwS,YAAa,EAAKnT,MAAMkO,MAAO,EAAK4E,YAC9E,EACD3O,KAAKmkC,eAAiB,kBAAMlgB,GAAAA,OAAY,EAAKpnB,QAAQ,GAAO,EAAtC,EACtB,IAAQ+M,EAA8BhO,EAA9BgO,aAAcoF,EAAgBpT,EAAhBoT,YACtBhP,KAAK4J,aAAeA,EACpB5J,KAAKokC,YAAL,UAAuBx6B,GACvB5J,KAAKqkC,cAAgBxoC,EAAMe,SAAN,UAAqBgN,GAAiB,CAAC,EAC5D5J,KAAKgP,YAAcA,EACnBhP,KAAKjE,OAASA,EACdiE,KAAKnE,MAAQA,EACbmE,KAAKwgC,MAAQzkC,EAASA,EAAOykC,MAAQ,EAAI,EACzCxgC,KAAK5D,oBAAsBA,EAC3B4D,KAAK6J,QAAUA,EACf7J,KAAKnC,sBAAwBA,EAAsBhC,GACnDmE,KAAK/B,cAAgBA,EAAcpC,GAC/BmE,KAAK/B,gBACL+B,KAAKuyB,gBAAkB,IAAInvB,KAE/BpD,KAAKk1B,uBAAyBh3B,QAAQnC,GAAUA,EAAOS,SAWvD,MAA+CwD,KAAKmP,4BAA4BtT,GAAxE+2B,EAAR,EAAQA,WAAe0R,GAAvB,cACA,IAAK,IAAMxjC,KAAOwjC,EAAqB,CACnC,IAAM1pC,EAAQ0pC,EAAoBxjC,QACRrH,IAAtBmQ,EAAa9I,IAAsB0C,EAAc5I,KACjDA,EAAM+H,IAAIiH,EAAa9I,IAAM,GACzBmxB,GAAwBW,IACxBA,EAAWlP,IAAI5iB,GAG1B,CACJ,C,0DAQD,SAA4ByjC,GACxB,MAAO,CAAC,CACX,G,mBACD,SAAM3iC,GAAU,IACRrI,EADQ,OAEZyG,KAAKxD,QAAUoF,EACX5B,KAAK2O,YACL3O,KAAK2O,WAAW9M,MAAMD,GAEtB5B,KAAKjE,QAAUiE,KAAK/B,gBAAkB+B,KAAKnC,wBAC3CmC,KAAKwkC,sBAA+C,QAAtBjrC,EAAKyG,KAAKjE,cAA2B,IAAPxC,OAAgB,EAASA,EAAGkrC,gBAAgBzkC,OAE5GA,KAAKyQ,OAAOM,SAAQ,SAACnW,EAAOkG,GAAR,OAAgB,EAAK4jC,kBAAkB5jC,EAAKlG,EAA5C,IACf2oC,GAAyB/mC,SC1JtC,WAEI,GADA+mC,GAAyB/mC,SAAU,EAC9BrD,EAEL,GAAIC,OAAOM,WAAY,CACnB,IAAMirC,EAAmBvrC,OAAOM,WAAW,4BACrCkrC,EAA8B,kBAAOtB,GAAqB9mC,QAAUmoC,EAAiBhrC,OAAvD,EACpCgrC,EAAiBxqC,YAAYyqC,GAC7BA,GACH,MAEGtB,GAAqB9mC,SAAU,CAEtC,CD8IWqoC,GAEJ7kC,KAAKizB,mBAC4B,UAA7BjzB,KAAK5D,sBAE8B,WAA7B4D,KAAK5D,qBAEDknC,GAAqB9mC,SAC/BwD,KAAKjE,QACLiE,KAAKjE,OAAOmE,SAASwjB,IAAI1jB,MAC7BA,KAAKC,SAASD,KAAKnE,MACtB,G,qBACD,WACI,IAAItC,EAAIimB,EAAIC,EAOZ,IAAK,IAAM3e,KANgB,QAA1BvH,EAAKyG,KAAK2O,kBAA+B,IAAPpV,GAAyBA,EAAGuI,UAC/DuiB,GAAWgH,OAAOrrB,KAAKgkC,cACvB3f,GAAWxnB,OAAOmD,KAAKnD,QACvBmD,KAAK4jC,mBAAmB7yB,SAAQ,SAACmiB,GAAD,OAAYA,GAAZ,IACM,QAArC1T,EAAKxf,KAAKwkC,6BAA0C,IAAPhlB,GAAyBA,EAAGniB,KAAK2C,MACxD,QAAtByf,EAAKzf,KAAKjE,cAA2B,IAAP0jB,GAAyBA,EAAGvf,SAAS8W,OAAOhX,MACzDA,KAAK8jC,OACnB9jC,KAAK8jC,OAAOhjC,GAAK6vB,QAErB3wB,KAAKxD,QAAU,IAClB,G,+BACD,SAAkBsE,EAAKlG,GAAO,WACpBkqC,EAAmB3hC,EAAeT,IAAI5B,GACtCikC,EAAiBnqC,EAAMV,UAAS,SAAC8qC,GACnC,EAAKp7B,aAAa9I,GAAOkkC,EACzB,EAAKnpC,MAAMwwB,UACPpI,GAAAA,OAAY,EAAK+f,cAAc,GAAO,GACtCc,GAAoB,EAAKn2B,aACzB,EAAKA,WAAWs2B,kBAAmB,EAE1C,IACKC,EAAwBtqC,EAAMuqC,gBAAgBnlC,KAAKmkC,gBACzDnkC,KAAK4jC,mBAAmBjhC,IAAI7B,GAAK,WAC7BikC,IACAG,GACH,GACJ,G,8BACD,SAAiBE,GAIb,OAAKplC,KAAKxD,SACLwD,KAAKqlC,0BACNrlC,KAAKoE,OAASghC,EAAMhhC,KAEjBpE,KAAKqlC,yBAAyBrlC,KAAKxD,QAAS4oC,EAAM5oC,SAD9C,CAEd,G,0BACD,SAAa8oC,EAAeC,EAAU9kC,EAAmBa,EAAckkC,EAA2BhkC,GAA0B,WAClHX,EAAW,GAQjB,IAAK,IAAIwZ,EAAI,EAAGA,EAAIopB,GAAappB,IAAK,CAClC,IAAMrc,EAAOwlC,GAAanpB,GAC1B,EAAiCtb,EAAmBf,GAA5Cc,EAAR,EAAQA,UAAWnD,EAAnB,EAAmBA,UAMfmD,EAAUwmC,IAAkB3pC,GAC5BkF,EAAS2J,MAAK2D,EAAAA,EAAAA,eAAcxS,GAAD,QAAC,QACxBmF,IAAK9C,GACFsnC,GAFoB,IAGvBrpC,cAAe+D,QAG1B,CACD,IAAKA,KAAK2O,YAAc62B,EAA2B,CAC/CxlC,KAAK2O,WAAa,IAAI62B,EAA0BlkC,EAActB,KAAK4J,aAAc5J,KAAKjE,QAAUiE,KAAKjE,OAAO4S,YAC5G,IAAQvN,EAA0DkkC,EAA1DlkC,SAAUkC,EAAgDgiC,EAAhDhiC,OAAQnE,EAAwCmmC,EAAxCnmC,KAAMg+B,EAAkCmI,EAAlCnI,gBAAiBsI,EAAiBH,EAAjBG,aACjDzlC,KAAK2O,WAAW+2B,WAAW,CACvBtkC,SAAAA,EACAkC,OAAAA,EACAqiC,oBAAqBznC,QAAQiB,IACxBg+B,GAAmBlgC,EAAYkgC,GACpClhC,cAAe+D,KACfmkC,eAAgB,kBAAM,EAAKA,gBAAX,EAQhByB,cAAiC,kBAAXtiC,EAAsBA,EAAS,OACrDuiC,uBAAwBrkC,EACxBikC,aAAAA,GAEP,CACD,OAAO5kC,CACV,G,0BACD,WACIb,KAAK8lC,MAAM9lC,KAAKgP,YAAahP,KAAK4J,aAAc5J,KAAK6J,QAAS7J,KAAKnE,MACtE,G,gCAMD,WACI,OAAOmE,KAAKxD,QACNwD,KAAK+lC,2BAA2B/lC,KAAKxD,QAASwD,KAAKnE,ORjQxC,CACrB8H,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,GQoQpC,G,4BACD,SAAe1D,GACX,OAAOd,KAAK4J,aAAa9I,EAC5B,G,4BACD,SAAeA,EAAKlG,GAChBoF,KAAK4J,aAAa9I,GAAOlG,CAC5B,G,kCAQD,SAAqBsQ,GAA0B,IAAlB86B,IAAkB,yDAC3C,OAAOhmC,KAAKimC,iCAAiC/6B,EAAQlL,KAAKnE,MAAOmqC,EACpE,G,sBAKD,SAASnqC,IACDA,EAAMiO,mBAAqB9J,KAAKnE,MAAMiO,oBACtC9J,KAAKmkC,iBAETnkC,KAAKnE,MAAQA,EAIb,IAAK,IAAIwe,EAAI,EAAGA,EAAIqpB,GAAkBr+B,OAAQgV,IAAK,CAC/C,IAAMvZ,EAAM4iC,GAAkBrpB,GAC1Bra,KAAK+jC,uBAAuBjjC,KAC5Bd,KAAK+jC,uBAAuBjjC,YACrBd,KAAK+jC,uBAAuBjjC,IAEvC,IAAMyS,EAAW1X,EAAM,KAAOiF,GAC1ByS,IACAvT,KAAK+jC,uBAAuBjjC,GAAOd,KAAKkmC,GAAGplC,EAAKyS,GAEvD,CACDvT,KAAK6jC,iBEjTb,SAAqCp1B,EAASyL,EAAMC,GAChD,IAAQyY,EAAe1Y,EAAf0Y,WACR,IAAK,IAAM9xB,KAAOoZ,EAAM,CACpB,IAAMisB,EAAYjsB,EAAKpZ,GACjBslC,EAAYjsB,EAAKrZ,GACvB,GAAI0C,EAAc2iC,GAKd13B,EAAQojB,SAAS/wB,EAAKqlC,GAClBlU,GAAwBW,IACxBA,EAAWlP,IAAI5iB,QAUlB,GAAI0C,EAAc4iC,GAKnB33B,EAAQojB,SAAS/wB,EAAKowB,GAAYiV,IAC9BlU,GAAwBW,IACxBA,EAAWM,OAAOpyB,QAGrB,GAAIslC,IAAcD,EAMnB,GAAI13B,EAAQkjB,SAAS7wB,GAAM,CACvB,IAAMulC,EAAgB53B,EAAQmjB,SAAS9wB,IAEtCulC,EAAc5V,aAAe4V,EAAc1jC,IAAIwjC,EACnD,KACI,CACD,IAAMnB,EAAcv2B,EAAQ63B,eAAexlC,GAC3C2N,EAAQojB,SAAS/wB,EAAKowB,QAA4Bz3B,IAAhBurC,EAA4BA,EAAcmB,GAC/E,CAER,CAED,IAAK,IAAMrlC,KAAOqZ,OACI1gB,IAAdygB,EAAKpZ,IACL2N,EAAQ83B,YAAYzlC,GAE5B,OAAOoZ,CACV,CF0P+BssB,CAA4BxmC,KAAMA,KAAKmP,4BAA4BtT,GAAQmE,KAAK6jC,iBAC3G,G,sBACD,WACI,OAAO7jC,KAAKnE,KACf,G,wBAID,SAAWmC,GACP,IAAIzE,EACJ,OAAsC,QAA9BA,EAAKyG,KAAKnE,MAAMsC,gBAA6B,IAAP5E,OAAgB,EAASA,EAAGyE,EAC7E,G,kCAID,WACI,OAAOgC,KAAKnE,MAAMqV,UACrB,G,mCACD,WACI,OAAOlR,KAAKnE,MAAMd,kBACrB,G,mCACD,WACI,IAAIxB,EACJ,OAAOyG,KAAK/B,cAAgB+B,KAA8B,QAAtBzG,EAAKyG,KAAKjE,cAA2B,IAAPxC,OAAgB,EAASA,EAAGktC,uBACjG,G,+BACD,WAAyC,IACjCltC,EAAIimB,EADMknB,EAAuB,wDAErC,GAAIA,EACA,OAA8B,QAAtBntC,EAAKyG,KAAKjE,cAA2B,IAAPxC,OAAgB,EAASA,EAAGk7B,oBACtE,IAAKz0B,KAAKnC,sBAAuB,CAC7B,IAAMQ,GAAkC,QAAtBmhB,EAAKxf,KAAKjE,cAA2B,IAAPyjB,OAAgB,EAASA,EAAGiV,sBAAwB,CAAC,EAIrG,YAH2Bh7B,IAAvBuG,KAAKnE,MAAMe,UACXyB,EAAQzB,QAAUoD,KAAKnE,MAAMe,SAE1ByB,CACV,CAED,IADA,IAAMA,EAAU,CAAC,EACRgc,EAAI,EAAGA,EAAIssB,GAAiBtsB,IAAK,CACtC,IAAMrc,EAAOJ,GAAayc,GACpB3b,EAAOsB,KAAKnE,MAAMmC,IACpBV,EAAeoB,KAAkB,IAATA,KACxBL,EAAQL,GAAQU,EAEvB,CACD,OAAOL,CACV,G,6BAID,SAAgBmX,GACZ,IAAIjc,EACEqtC,EAAqB5mC,KAAKymC,wBAChC,GAAIG,EAEA,OAD8C,QAA7CrtC,EAAKqtC,EAAmBrU,uBAAoC,IAAPh5B,GAAyBA,EAAGmqB,IAAIlO,GAC/E,kBAAMoxB,EAAmBrU,gBAAgBvb,OAAOxB,EAAhD,CAEd,G,sBAID,SAAS1U,EAAKlG,GAENoF,KAAK2xB,SAAS7wB,IACdd,KAAKumC,YAAYzlC,GACrBd,KAAKyQ,OAAO9N,IAAI7B,EAAKlG,GACrBoF,KAAK4J,aAAa9I,GAAOlG,EAAM4H,MAC/BxC,KAAK0kC,kBAAkB5jC,EAAKlG,EAC/B,G,yBAID,SAAYkG,GACR,IAAIvH,EACJyG,KAAKyQ,OAAOuG,OAAOlW,GACyB,QAA3CvH,EAAKyG,KAAK4jC,mBAAmBphC,IAAI1B,UAAyB,IAAPvH,GAAyBA,IAC7EyG,KAAK4jC,mBAAmB5sB,OAAOlW,UACxBd,KAAK4J,aAAa9I,GACzBd,KAAK6mC,2BAA2B/lC,EAAKd,KAAKgP,YAC7C,G,sBAID,SAASlO,GACL,OAAOd,KAAKyQ,OAAO/N,IAAI5B,EAC1B,G,sBAKD,SAASA,EAAKigB,GACV,GAAI/gB,KAAKnE,MAAM4U,QAAUzQ,KAAKnE,MAAM4U,OAAO3P,GACvC,OAAOd,KAAKnE,MAAM4U,OAAO3P,GAE7B,IAAIlG,EAAQoF,KAAKyQ,OAAOjO,IAAI1B,GAK5B,YAJcrH,IAAVmB,QAAwCnB,IAAjBsnB,IACvBnmB,EAAQs2B,GAAYnQ,GACpB/gB,KAAK6xB,SAAS/wB,EAAKlG,IAEhBA,CACV,G,uBAMD,SAAUkG,GACN,YAAkCrH,IAA3BuG,KAAK4J,aAAa9I,IAAuBd,KAAKxD,QAE/CwD,KAAK8mC,sBAAsB9mC,KAAKxD,QAASsE,EAAKd,KAAK6J,SADnD7J,KAAK4J,aAAa9I,EAE3B,G,2BAKD,SAAcA,EAAKlG,GACfoF,KAAKokC,WAAWtjC,GAAOlG,CAC1B,G,2BAKD,SAAckG,GACV,IAAIvH,EACIqD,EAAYoD,KAAKnE,MAAjBe,QACFmqC,EAAsC,kBAAZnqC,GAA2C,kBAAZA,EACD,QAAvDrD,EAAKgW,GAAwBvP,KAAKnE,MAAOe,UAA6B,IAAPrD,OAAgB,EAASA,EAAGuH,QAC5FrH,EAIN,GAAImD,QAAgCnD,IAArBstC,EACX,OAAOA,EAMX,IAAM77B,EAASlL,KAAKgnC,uBAAuBhnC,KAAKnE,MAAOiF,GACvD,YAAerH,IAAXyR,GAAyB1H,EAAc0H,QAMRzR,IAA5BuG,KAAKqkC,cAAcvjC,SACDrH,IAArBstC,OACEttC,EACAuG,KAAKokC,WAAWtjC,GARXoK,CASd,G,gBACD,SAAGyG,EAAWwD,GAIV,OAHKnV,KAAK8jC,OAAOnyB,KACb3R,KAAK8jC,OAAOnyB,GAAa,IAAI+d,IAE1B1vB,KAAK8jC,OAAOnyB,GAAW+R,IAAIvO,EACrC,G,oBACD,SAAOxD,GAAoB,UACnBpY,EADmB,mBAAN0tC,EAAM,iCAANA,EAAM,kBAEW,QAAjC1tC,EAAKyG,KAAK8jC,OAAOnyB,UAA+B,IAAPpY,IAAyB,EAAAA,GAAGyD,OAAH,QAAaiqC,EACnF,K,EAhbCtD,GAkbA/lC,GAAe,CAAC,WAAJ,gBAAkB81B,KAC9BiT,GAAkB/oC,GAAayH,O,kCGnd/B6hC,GAAAA,SAAAA,I,+IACF,SAAyBljC,EAAGC,GAMxB,OAAsC,EAA/BD,EAAEmjC,wBAAwBljC,GAAS,GAAK,CAClD,G,oCACD,SAAuBpI,EAAOiF,GAC1B,IAAIvH,EACJ,OAA8B,QAAtBA,EAAKsC,EAAMkO,aAA0B,IAAPxQ,OAAgB,EAASA,EAAGuH,EACrE,G,wCACD,SAA2BA,EAA3B,GAAiD,IAAfkJ,EAAe,EAAfA,KAAMD,EAAS,EAATA,aAC7BC,EAAKlJ,UACLiJ,EAAMjJ,EAChB,G,8CACD,aAAgGsmC,GAAW,IAAxEl2B,EAAwE,EAAxEA,WAAYD,EAA4D,EAA5DA,cAAkB/F,GAA0C,cAA9BI,EAA8B,EAA9BA,gBACrEmB,E1BmFZ,SAAmBvB,EAAQgG,EAAYjV,GACnC,IAAI1C,EACEkT,EAAS,CAAC,EAChB,IAAK,IAAM3L,KAAOoK,EAAQ,CACtB,IAAMm8B,EAAmBrV,GAAwBlxB,EAAKoQ,GACtDzE,EAAO3L,QACkBrH,IAArB4tC,EACMA,EACuC,QAAtC9tC,EAAK0C,EAAc21B,SAAS9wB,UAAyB,IAAPvH,OAAgB,EAASA,EAAGiJ,KACxF,CACD,OAAOiK,CACV,C0B9FoB66B,CAAUp8B,EAAQgG,GAAc,CAAC,EAAGlR,MAYjD,GARIsL,IACI2F,IACAA,EAAgB3F,EAAgB2F,IAChC/F,IACAA,EAASI,EAAgBJ,IACzBuB,IACAA,EAASnB,EAAgBmB,KAE7B26B,EAAW,E1BkBvB,SAAiCnrC,EAAeiP,EAAQuB,GACpD,IAAIlT,EAAIimB,EACF+nB,EAAe9sC,OAAOkT,KAAKzC,GAAQ+V,QAAO,SAACngB,GAAD,OAAU7E,EAAc01B,SAAS7wB,EAAjC,IAC1C0mC,EAAeD,EAAaliC,OAClC,GAAKmiC,EAEL,IAAK,IAAIntB,EAAI,EAAGA,EAAImtB,EAAcntB,IAAK,CACnC,IAAMvZ,EAAMymC,EAAaltB,GACnBotB,EAAcv8B,EAAOpK,GACvBlG,EAAQ,KAKR4C,MAAMC,QAAQgqC,KACd7sC,EAAQ6sC,EAAY,IAOV,OAAV7sC,IACAA,EAAoG,QAA3F4kB,EAA4B,QAAtBjmB,EAAKkT,EAAO3L,UAAyB,IAAPvH,EAAgBA,EAAK0C,EAAcyrC,UAAU5mC,UAAyB,IAAP0e,EAAgBA,EAAKtU,EAAOpK,SAM9HrH,IAAVmB,GAAiC,OAAVA,IAEN,kBAAVA,IVhFc,iBAAiBoI,KUiFnBpI,IAAUy0B,GAAkBz0B,IAE/CA,EAAQ2K,WAAW3K,IAEb22B,GAAc32B,IAAU2kB,GAAQvc,KAAKykC,KAC3C7sC,EAAQglB,GAAkB9e,EAAK2mC,IAEnCxrC,EAAc41B,SAAS/wB,EAAKowB,GAAYt2B,SACpBnB,IAAhBgT,EAAO3L,KACP2L,EAAO3L,GAAOlG,GAEJ,OAAVA,GACAqB,EAAc0rC,cAAc7mC,EAAKlG,GACxC,CACJ,C0B/DWgtC,CAAwB5nC,KAAMkL,EAAQuB,GACtC,IAAMoT,EAASsjB,GAAgBnjC,KAAMkL,EAAQuB,EAAQwE,GACrDA,EAAgB4O,EAAO5O,cACvB/F,EAAS2U,EAAO3U,MACnB,CACD,eACIgG,WAAAA,EACAD,cAAAA,GACG/F,EAEV,K,EAzCCg8B,CAAyBvD,I,ICQzBkE,GAAAA,SAAAA,I,4IACF,SAAsBjmC,EAAUd,GAC5B,GAAIqC,EAAeT,IAAI5B,GAAM,CACzB,IAAMgnC,EAAcjmB,GAAoB/gB,GACxC,OAAOgnC,GAAcA,EAAY5hC,SAAe,CACnD,CAEG,IAVcuI,EAURs5B,GAVQt5B,EAUyB7M,EATxCxI,OAAOsnC,iBAAiBjyB,IAUjB7T,GAASsJ,EAAcpD,GACvBinC,EAAcpH,iBAAiB7/B,GAC/BinC,EAAcjnC,KAAS,EAC7B,MAAwB,kBAAVlG,EAAqBA,EAAMkQ,OAASlQ,CAEzD,G,wCACD,SAA2BgH,EAA3B,GACI,OAAOs5B,GAAmBt5B,EAD+B,EAAtB7G,mBAEtC,G,mBACD,SAAMiU,EAAapF,EAAcC,EAAShO,GACtC8N,GAAgBqF,EAAapF,EAAcC,EAAShO,EAAMiO,kBAC7D,G,yCACD,SAA4BjO,GACxB,OAAOsT,GAA4BtT,EACtC,G,4BACD,SAAe+F,EAAUoN,EAAaN,EAAWC,GAC7CH,GAAW5M,EAAUoN,EAAaN,EAAWC,EAChD,K,EAzBCk5B,CAA0BX,ICF1Bc,GAAAA,SAAAA,I,6IACF,SAAuBnsC,EAAOiF,GAC1B,OAAOjF,EAAMiF,EAChB,G,mCACD,SAAsBc,EAAUd,GAC5B,IAAIvH,EACJ,OAAI4J,EAAeT,IAAI5B,IACyB,QAAnCvH,EAAKsoB,GAAoB/gB,UAAyB,IAAPvH,OAAgB,EAASA,EAAG2M,UAAY,GAEhGpF,EAAOgO,GAAoBpM,IAAI5B,GAA0BA,EAAnBsN,GAAYtN,GAC3Cc,EAASqmC,aAAannC,GAChC,G,wCACD,WACI,MbZiB,CACrB6C,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,GacpC,G,yCACD,SAA4B3I,GACxB,OAAOsT,GAA4BtT,EACtC,G,mBACD,SAAMmT,EAAapF,EAAcC,EAAShO,GACtCiR,GAAckC,EAAapF,EAAcC,EAAShO,EAAMiO,kBAC3D,G,4BACD,SAAelI,EAAUoN,EAAaN,EAAWC,GAC7CI,GAAUnN,EAAUoN,EAAaN,EAAWC,EAC/C,K,EAvBCq5B,CAAyBd,ICNzBgB,GAAyB,SAACvsC,EAAWkO,GACvC,OAAOhH,EAAelH,GAChB,IAAIqsC,GAAiBn+B,EAAS,CAAEa,4BAA4B,IAC5D,IAAIm9B,GAAkBh+B,EAAS,CAAEa,4BAA4B,GACtE,ECND,SAASy9B,GAAgBC,EAAQ/P,GAC7B,OAAIA,EAAK7zB,MAAQ6zB,EAAK9zB,IACX,EACH6jC,GAAU/P,EAAK7zB,IAAM6zB,EAAK9zB,KAAQ,GAC7C,CAQD,IAAM8jC,GAAsB,CACxBC,QAAS,SAAC7c,EAAQ8c,GACd,IAAKA,EAAKr9B,OACN,OAAOugB,EAKX,GAAsB,kBAAXA,EAAqB,CAC5B,IAAI/lB,GAAG1C,KAAKyoB,GAIR,OAAOA,EAHPA,EAASlmB,WAAWkmB,EAK3B,CAKD,IAAM9nB,EAAIwkC,GAAgB1c,EAAQ8c,EAAKr9B,OAAOvH,GACxCC,EAAIukC,GAAgB1c,EAAQ8c,EAAKr9B,OAAOtH,GAC9C,gBAAUD,EAAV,aAAgBC,EAAhB,IACH,GCjCC4kC,GAAW,QACXC,GAAmB,CACrBH,QAAS,SAAC7c,EAAD,GAA4C,IAAjCid,EAAiC,EAAjCA,UAAWC,EAAsB,EAAtBA,gBACrBC,EAAWnd,EAIXod,EAAuBpd,EAAO3oB,SAAS,QACvCgmC,EAAe,GACjBD,IACApd,EAASA,EAAOnd,QAAQ8xB,IAAkB,SAAC5iB,GAEvC,OADAsrB,EAAat+B,KAAKgT,GACXgrB,EACV,KAEL,IAAMO,EAASxpB,GAAQja,MAAMmmB,GAE7B,GAAIsd,EAAO1jC,OAAS,EAChB,OAAOujC,EACX,IAAMtiB,EAAW/G,GAAQJ,kBAAkBsM,GACrC/e,EAA8B,kBAAdq8B,EAAO,GAAkB,EAAI,EAE7CC,EAASL,EAAgBhlC,EAAEsC,MAAQyiC,EAAU/kC,EAC7CslC,EAASN,EAAgB/kC,EAAEqC,MAAQyiC,EAAU9kC,EACnDmlC,EAAO,EAAIr8B,IAAWs8B,EACtBD,EAAO,EAAIr8B,IAAWu8B,EAOtB,IAAMC,EAAen5B,GAAIi5B,EAAQC,EAAQ,IAEP,kBAAvBF,EAAO,EAAIr8B,KAClBq8B,EAAO,EAAIr8B,IAAWw8B,GAEQ,kBAAvBH,EAAO,EAAIr8B,KAClBq8B,EAAO,EAAIr8B,IAAWw8B,GAC1B,IAAI7pB,EAASiH,EAASyiB,GACtB,GAAIF,EAAsB,CACtB,IAAIxuB,EAAI,EACRgF,EAASA,EAAO/Q,QAAQk6B,IAAU,WAC9B,IAAMW,EAAcL,EAAazuB,GAEjC,OADAA,IACO8uB,CACV,GACJ,CACD,OAAO9pB,CACV,GC3CC+pB,GAAAA,SAAAA,I,wIAMF,WAAoB,I3IfGC,E2IeH,OAChB,EAAoErpC,KAAKnE,MAAjEI,EAAR,EAAQA,cAAeqtC,EAAvB,EAAuBA,YAAaC,EAApC,EAAoCA,kBAAmBnoC,EAAvD,EAAuDA,SAC/CuN,EAAe1S,EAAf0S,W3IjBW06B,E2IkBDG,G3IjBtB/uC,OAAOqL,OAAO7C,EAAiBomC,G2IkBvB16B,IACI26B,EAAYG,OACZH,EAAYG,MAAM/lB,IAAI/U,GACtB46B,GAAqBA,EAAkBxvB,UAAY3Y,GACnDmoC,EAAkBxvB,SAASpL,GAE/BA,EAAW6H,KAAKkzB,YAChB/6B,EAAWmD,iBAAiB,qBAAqB,WAC7C,EAAKqkB,cACR,IACDxnB,EAAW+2B,YAAX,kBACO/2B,EAAW9E,SADlB,IAEIiQ,eAAgB,kBAAM,EAAKqc,cAAX,MAGxBx2B,EAAsBE,gBAAiB,CAC1C,G,qCACD,SAAwB8pC,GAAW,WAC/B,EAA6D3pC,KAAKnE,MAA1D+tC,EAAR,EAAQA,iBAAkB3tC,EAA1B,EAA0BA,cAAekD,EAAzC,EAAyCA,KAAM0a,EAA/C,EAA+CA,UACzClL,EAAa1S,EAAc0S,WACjC,OAAKA,GASLA,EAAWkL,UAAYA,EACnB1a,GACAwqC,EAAUC,mBAAqBA,QACVnwC,IAArBmwC,EACAj7B,EAAWk7B,aAGX7pC,KAAKm2B,eAELwT,EAAU9vB,YAAcA,IACpBA,EACAlL,EAAWm7B,UAELn7B,EAAWo7B,YAMjB9lB,GAAAA,YAAgB,WACZ,IAAI1qB,GACmC,QAAhCA,EAAKoV,EAAWq7B,kBAA+B,IAAPzwC,OAAgB,EAASA,EAAG0wC,QAAQ5kC,SAC/E,EAAK8wB,cAEZ,KAGF,MAnCI,IAoCd,G,gCACD,WACI,IAAQxnB,EAAe3O,KAAKnE,MAAMI,cAA1B0S,WACJA,IACAA,EAAW6H,KAAKkzB,aACX/6B,EAAW2f,kBAAoB3f,EAAWu7B,UAC3ClqC,KAAKm2B,eAGhB,G,kCACD,WACI,MAA2En2B,KAAKnE,MAAxEI,EAAR,EAAQA,cAAeqtC,EAAvB,EAAuBA,YAAgCa,EAAvD,EAAoCZ,kBAC5B56B,EAAe1S,EAAf0S,WACJA,IACAA,EAAWy7B,6BACS,OAAhBd,QAAwC,IAAhBA,OAAyB,EAASA,EAAYG,QACtEH,EAAYG,MAAMvW,OAAOvkB,IACN,OAAnBw7B,QAA8C,IAAnBA,OAA4B,EAASA,EAAeE,aAC/EF,EAAeE,WAAW17B,GAErC,G,0BACD,WACI,IAAQwnB,EAAiBn2B,KAAKnE,MAAtBs6B,aACS,OAAjBA,QAA0C,IAAjBA,GAAmCA,GAC/D,G,oBACD,WACI,OAAO,IACV,K,EA9FCiT,CAAiCjpC,EAAAA,WAqGvC,IAAMqpC,GAAyB,CAC3B7iC,cAAc,kBACP0hC,IADK,IAERiC,QAAS,CACL,sBACA,uBACA,yBACA,6BAGRzjC,oBAAqBwhC,GACrBvhC,qBAAsBuhC,GACtBrhC,uBAAwBqhC,GACxBthC,wBAAyBshC,GACzBkC,UAAW9B,IC3HT+B,GAAiB,CACnBxrC,cDuGJ,SAAuBnD,GACnB,MAAkC+d,KAAlC,gBAAOC,EAAP,KAAkBsc,EAAlB,KACMmT,GAActtC,EAAAA,EAAAA,YAAW8D,GAC/B,OAAQK,EAAAA,cAA6BipC,IAA7B,kBAA4DvtC,GAA5D,IAAmEytC,YAAaA,EAAaC,mBAAmBvtC,EAAAA,EAAAA,YAAWoE,GAA2ByZ,UAAWA,EAAWsc,aAAcA,IACrM,GE/ED,SAASr4B,GAAQknB,EAAM3E,GAAqB,IAAjBnP,EAAiB,uDAAJ,CAAC,EAC/BtW,EAAQ4I,EAAcwhB,GAAQA,EAAOkM,GAAYlM,GAEvD,OADA2J,GAAe,GAAI/zB,EAAOylB,EAAInP,GACvB,CACHqa,KAAM,kBAAM3wB,EAAM2wB,MAAZ,EACNkf,YAAa,kBAAM7vC,EAAM6vC,aAAZ,EAEpB,CChCD,IAAMC,GAAU,CAAC,UAAW,WAAY,aAAc,eAChDC,GAAaD,GAAQrlC,OACrBulC,GAAW,SAAChwC,GAAD,MAA4B,kBAAVA,EAAqB2K,WAAW3K,GAASA,CAA3D,EACXiwC,GAAO,SAACjwC,GAAD,MAA4B,kBAAVA,GAAsB8K,GAAG1C,KAAKpI,EAAhD,EACb,SAASkwC,GAAU5/B,EAAQ6/B,EAAQC,EAAM/lB,EAAUgmB,EAAwBC,GACvE,IAAI3xC,EAAIimB,EAAIC,EAAIC,EACZurB,GACA//B,EAAO/B,QAAU4G,GAAI,EAGG,QAAvBxW,EAAKyxC,EAAK7hC,eAA4B,IAAP5P,EAAgBA,EAAK,EAAG4xC,GAAgBlmB,IACxE/Z,EAAOkgC,YAAcr7B,GAA8B,QAAzByP,EAAKurB,EAAO5hC,eAA4B,IAAPqW,EAAgBA,EAAK,EAAG,EAAG6rB,GAAiBpmB,KAElGimB,IACLhgC,EAAO/B,QAAU4G,GAA8B,QAAzB0P,EAAKsrB,EAAO5hC,eAA4B,IAAPsW,EAAgBA,EAAK,EAA2B,QAAvBC,EAAKsrB,EAAK7hC,eAA4B,IAAPuW,EAAgBA,EAAK,EAAGuF,IAK3I,IAAK,IAAI5K,EAAI,EAAGA,EAAIswB,GAAYtwB,IAAK,CACjC,IAAMixB,EAAc,SAAH,OAAYZ,GAAQrwB,GAApB,UACbkxB,EAAeC,GAAUT,EAAQO,GACjCG,EAAaD,GAAUR,EAAMM,GACjC,QAAqB7xC,IAAjB8xC,QAA6C9xC,IAAfgyC,EAElCF,IAAiBA,EAAe,GAChCE,IAAeA,EAAa,GACI,IAAjBF,GACI,IAAfE,GACAZ,GAAKU,KAAkBV,GAAKY,IAE5BvgC,EAAOogC,GAAe7mC,KAAKD,IAAIuL,GAAI66B,GAASW,GAAeX,GAASa,GAAaxmB,GAAW,IACxFxf,GAAQzC,KAAKyoC,IAAehmC,GAAQzC,KAAKuoC,MACzCrgC,EAAOogC,IAAgB,MAI3BpgC,EAAOogC,GAAeG,CAE7B,EAIGV,EAAO3iC,QAAU4iC,EAAK5iC,UACtB8C,EAAO9C,OAAS2H,GAAIg7B,EAAO3iC,QAAU,EAAG4iC,EAAK5iC,QAAU,EAAG6c,GAEjE,CACD,SAASumB,GAAU/6B,EAAQi7B,GACvB,IAAInyC,EACJ,OAAqC,QAA7BA,EAAKkX,EAAOi7B,UAAgC,IAAPnyC,EAAgBA,EAAKkX,EAAO9J,YAC5E,CAwBD,IAAMwkC,GAAkBQ,GAAS,EAAG,GAAKvvB,IACnCivB,GAAmBM,GAAS,GAAK,IAAMnxB,IAC7C,SAASmxB,GAASpnC,EAAKC,EAAKoX,GACxB,OAAO,SAAC5gB,GAEJ,OAAIA,EAAIuJ,EACG,EACPvJ,EAAIwJ,EACG,EACJoX,EAAOqJ,GAAS1gB,EAAKC,EAAKxJ,GACpC,CACJ,CCtFD,SAAS4wC,GAAavT,EAAMwT,GACxBxT,EAAK9zB,IAAMsnC,EAAWtnC,IACtB8zB,EAAK7zB,IAAMqnC,EAAWrnC,GACzB,CAMD,SAASsnC,GAAYxR,EAAKyR,GACtBH,GAAatR,EAAI32B,EAAGooC,EAAUpoC,GAC9BioC,GAAatR,EAAI12B,EAAGmoC,EAAUnoC,EACjC,CCVD,SAASooC,GAAiB94B,EAAOwlB,EAAWzyB,EAAOwyB,EAAa0B,GAM5D,OAJAjnB,EAAQ+mB,GADR/mB,GAASwlB,EACiB,EAAIzyB,EAAOwyB,QACpBh/B,IAAb0gC,IACAjnB,EAAQ+mB,GAAW/mB,EAAO,EAAIinB,EAAU1B,IAErCvlB,CACV,CAsBD,SAAS+4B,GAAqB5T,EAAMsC,EAApC,EAA4EluB,EAAQy/B,GAAY,oBAA/CprC,EAA+C,KAA1C85B,EAA0C,KAAhCC,EAAgC,MAlBhG,SAAyBxC,GAA8F,IAAxFK,EAAwF,uDAA5E,EAAGzyB,EAAyE,uDAAjE,EAAGwG,EAA8D,uDAArD,GAAK0tB,EAAgD,uCAAtC0R,EAAsC,uDAAzBxT,EAAM6T,EAAmB,uDAAN7T,EAC7G,GAAI5yB,GAAQzC,KAAK01B,GAAY,CACzBA,EAAYnzB,WAAWmzB,GAEvBA,EADyB3oB,GAAIm8B,EAAW3nC,IAAK2nC,EAAW1nC,IAAKk0B,EAAY,KAC1CwT,EAAW3nC,GAC7C,CACD,GAAyB,kBAAdm0B,EAAX,CAEA,IAAID,EAAc1oB,GAAI87B,EAAWtnC,IAAKsnC,EAAWrnC,IAAKiI,GAClD4rB,IAASwT,IACTpT,GAAeC,GACnBL,EAAK9zB,IAAMynC,GAAiB3T,EAAK9zB,IAAKm0B,EAAWzyB,EAAOwyB,EAAa0B,GACrE9B,EAAK7zB,IAAMwnC,GAAiB3T,EAAK7zB,IAAKk0B,EAAWzyB,EAAOwyB,EAAa0B,EAL3D,CAMb,CAMGgS,CAAgB9T,EAAMsC,EAAW75B,GAAM65B,EAAWC,GAAWD,EAAWE,GAAYF,EAAW10B,MAAOwG,EAAQy/B,EACjH,CAID,IAAMnR,GAAQ,CAAC,IAAK,SAAU,WACxBC,GAAQ,CAAC,IAAK,SAAU,WAK9B,SAASoR,GAAoB9R,EAAKK,EAAYoR,EAAWM,GACrDJ,GAAqB3R,EAAI32B,EAAGg3B,EAAYI,GAAqB,OAAdgR,QAAoC,IAAdA,OAAuB,EAASA,EAAUpoC,EAAiB,OAAd0oC,QAAoC,IAAdA,OAAuB,EAASA,EAAU1oC,GAClLsoC,GAAqB3R,EAAI12B,EAAG+2B,EAAYK,GAAqB,OAAd+Q,QAAoC,IAAdA,OAAuB,EAASA,EAAUnoC,EAAiB,OAAdyoC,QAAoC,IAAdA,OAAuB,EAASA,EAAUzoC,EACrL,CCjDD,SAAS0oC,GAAgB3pB,GACrB,OAA2B,IAApBA,EAAM+V,WAAmC,IAAhB/V,EAAM1c,KACzC,CACD,SAASsmC,GAAY5pB,GACjB,OAAO2pB,GAAgB3pB,EAAMhf,IAAM2oC,GAAgB3pB,EAAM/e,EAC5D,CACD,SAAS4oC,GAAUxoC,EAAGC,GAClB,OAAQD,EAAEL,EAAEY,MAAQN,EAAEN,EAAEY,KACpBP,EAAEL,EAAEa,MAAQP,EAAEN,EAAEa,KAChBR,EAAEJ,EAAEW,MAAQN,EAAEL,EAAEW,KAChBP,EAAEJ,EAAEY,MAAQP,EAAEL,EAAEY,GACvB,CACD,SAASioC,GAAYnS,GACjB,OAAOlC,GAAWkC,EAAI32B,GAAKy0B,GAAWkC,EAAI12B,EAC7C,C,ICdK8oC,GAAAA,WACF,cAAc,eACV1sC,KAAKiqC,QAAU,EAClB,C,kCACD,SAAI1B,GACAjZ,GAActvB,KAAKiqC,QAAS1B,GAC5BA,EAAKpE,gBACR,G,oBACD,SAAOoE,GAKH,GAJA9Y,GAAWzvB,KAAKiqC,QAAS1B,GACrBA,IAASvoC,KAAK2sC,WACd3sC,KAAK2sC,cAAWlzC,GAEhB8uC,IAASvoC,KAAKgrC,KAAM,CACpB,IAAM2B,EAAW3sC,KAAKiqC,QAAQjqC,KAAKiqC,QAAQ5kC,OAAS,GAChDsnC,GACA3sC,KAAK8pC,QAAQ6C,EAEpB,CACJ,G,sBACD,SAASpE,GACL,IAMIoE,EANEC,EAAc5sC,KAAKiqC,QAAQ4C,WAAU,SAACC,GAAD,OAAYvE,IAASuE,CAArB,IAC3C,GAAoB,IAAhBF,EACA,OAAO,EAKX,IAAK,IAAIvyB,EAAIuyB,EAAavyB,GAAK,EAAGA,IAAK,CACnC,IAAMyyB,EAAS9sC,KAAKiqC,QAAQ5vB,GAC5B,IAAyB,IAArByyB,EAAOjzB,UAAqB,CAC5B8yB,EAAWG,EACX,KACH,CACJ,CACD,QAAIH,IACA3sC,KAAK8pC,QAAQ6C,IACN,EAKd,G,qBACD,SAAQpE,EAAMwE,GACV,IAAIxzC,EACEozC,EAAW3sC,KAAKgrC,KAClBzC,IAASoE,IAEb3sC,KAAK2sC,SAAWA,EAChB3sC,KAAKgrC,KAAOzC,EACZA,EAAKyE,OACDL,IACAA,EAAS/qC,UAAY+qC,EAASxI,iBAC9BoE,EAAKpE,iBACLoE,EAAK0E,WAAaN,EACdI,IACAxE,EAAK0E,WAAWC,iBAAkB,GAElCP,EAASQ,WACT5E,EAAK4E,SAAWR,EAASQ,SACzB5E,EAAK4E,SAASvjC,aACV+iC,EAASS,iBAAmBT,EAAS/iC,eAEpB,QAApBrQ,EAAKgvC,EAAK/xB,YAAyB,IAAPjd,OAAgB,EAASA,EAAG8zC,cACzD9E,EAAK+E,eAAgB,IAGP,IADI/E,EAAK1+B,QAAnB0jC,WAEJZ,EAASa,QAepB,G,mCACD,WACIxtC,KAAKiqC,QAAQl5B,SAAQ,SAACw3B,GAClB,IAAIhvC,EAAIimB,EAAIC,EAAIC,EAAI+tB,EAC0B,QAA7CjuB,GAAMjmB,EAAKgvC,EAAK1+B,SAASiQ,sBAAmC,IAAP0F,GAAyBA,EAAGniB,KAAK9D,GACmB,QAAzGk0C,EAAkC,QAA5BhuB,EAAK8oB,EAAKmF,oBAAiC,IAAPjuB,OAAgB,GAAUC,EAAKD,EAAG5V,SAASiQ,sBAAmC,IAAP2zB,GAAyBA,EAAGpwC,KAAKqiB,EACtJ,GACJ,G,4BACD,WACI1f,KAAKiqC,QAAQl5B,SAAQ,SAACw3B,GAClBA,EAAK3mC,UAAY2mC,EAAKpE,gBAAe,EACxC,GACJ,G,gCAKD,WACQnkC,KAAKgrC,MAAQhrC,KAAKgrC,KAAKmC,WACvBntC,KAAKgrC,KAAKmC,cAAW1zC,EAE5B,K,EAxGCizC,GCFN,SAASiB,GAAyBhrB,EAAO+lB,EAAWkF,GAChD,IAAIvpC,EAAY,GAOVwpC,EAAalrB,EAAMhf,EAAE+0B,UAAYgQ,EAAU/kC,EAC3CmqC,EAAanrB,EAAM/e,EAAE80B,UAAYgQ,EAAU9kC,EAWjD,IAVIiqC,GAAcC,KACdzpC,EAAY,eAAH,OAAkBwpC,EAAlB,eAAmCC,EAAnC,YAMO,IAAhBpF,EAAU/kC,GAA2B,IAAhB+kC,EAAU9kC,IAC/BS,GAAa,SAAJ,OAAa,EAAIqkC,EAAU/kC,EAA3B,aAAiC,EAAI+kC,EAAU9kC,EAA/C,OAETgqC,EAAiB,CACjB,IAAQxlC,EAA6BwlC,EAA7BxlC,OAAQC,EAAqBulC,EAArBvlC,QAASC,EAAYslC,EAAZtlC,QACrBF,IACA/D,GAAa,UAAJ,OAAc+D,EAAd,UACTC,IACAhE,GAAa,WAAJ,OAAegE,EAAf,UACTC,IACAjE,GAAa,WAAJ,OAAeiE,EAAf,SAChB,CAKD,IAAMylC,EAAgBprB,EAAMhf,EAAEsC,MAAQyiC,EAAU/kC,EAC1CqqC,EAAgBrrB,EAAM/e,EAAEqC,MAAQyiC,EAAU9kC,EAIhD,OAHsB,IAAlBmqC,GAAyC,IAAlBC,IACvB3pC,GAAa,SAAJ,OAAa0pC,EAAb,aAA+BC,EAA/B,MAEN3pC,GAAa,MACvB,CCvCD,IAAM4pC,GAAiB,SAACjqC,EAAGC,GAAJ,OAAUD,EAAEw8B,MAAQv8B,EAAEu8B,KAAtB,ECGjB0N,GAAAA,WACF,cAAc,eACVluC,KAAKE,SAAW,GAChBF,KAAKmuC,SAAU,CAClB,C,kCACD,SAAI34B,GACA8Z,GAActvB,KAAKE,SAAUsV,GAC7BxV,KAAKmuC,SAAU,CAClB,G,oBACD,SAAO34B,GACHia,GAAWzvB,KAAKE,SAAUsV,GAC1BxV,KAAKmuC,SAAU,CAClB,G,qBACD,SAAQh5B,GACJnV,KAAKmuC,SAAWnuC,KAAKE,SAAS2K,KAAKojC,IACnCjuC,KAAKmuC,SAAU,EACfnuC,KAAKE,SAAS6Q,QAAQoE,EACzB,K,EAjBC+4B,GCmBAE,GAAgB,CAAC,GAAI,IAAK,IAAK,KAMjC1xC,GAAK,EACT,SAAS2xC,GAAT,GAA0H,IAA1FC,EAA0F,EAA1FA,qBAAsBC,EAAoE,EAApEA,cAAeC,EAAqD,EAArDA,cAAeC,EAAsC,EAAtCA,kBAAmBC,EAAmB,EAAnBA,eACnG,kBACI,WAAYC,GAAsH,WAA3G/kC,EAA2G,uDAA5F,CAAC,EAAG7N,EAAwF,uDAA7D,OAAlBwyC,QAA4C,IAAlBA,OAA2B,EAASA,KAAiB,eAI9HvuC,KAAKtD,GAAKA,KAIVsD,KAAK4uC,YAAc,EAOnB5uC,KAAKE,SAAW,IAAIkD,IAKpBpD,KAAK6J,QAAU,CAAC,EAMhB7J,KAAK6uC,iBAAkB,EACvB7uC,KAAKm8B,oBAAqB,EAO1Bn8B,KAAKstC,eAAgB,EACrBttC,KAAKilC,kBAAmB,EAKxBjlC,KAAK8uC,mBAAoB,EAIzB9uC,KAAK+uC,uBAAwB,EAC7B/uC,KAAKgvC,uBAAwB,EAK7BhvC,KAAKqtC,YAAa,EAIlBrtC,KAAKivC,OAAQ,EAKbjvC,KAAKkvC,YAAa,EAIlBlvC,KAAKmvC,sBAAuB,EAS5BnvC,KAAK0oC,UAAY,CAAE/kC,EAAG,EAAGC,EAAG,GAI5B5D,KAAKovC,cAAgB,IAAI7sC,IAEzBvC,KAAKqvC,eAAiB,IAAI9sC,IAC1BvC,KAAKsvC,kBAAoB,WACjB,EAAKjC,aACL,EAAKA,YAAa,EAClB,EAAKkC,oBAEZ,EAMDvvC,KAAKwvC,iBAAmB,WACpB,EAAKC,MAAM1+B,QAAQ2+B,IACnB,EAAKD,MAAM1+B,QAAQ4+B,IACnB,EAAKF,MAAM1+B,QAAQ6+B,GACtB,EACD5vC,KAAK6vC,cAAe,EACpB7vC,KAAK8vC,WAAY,EACjB9vC,KAAK+vC,kBAAoB,EAKzB/vC,KAAKgwC,YAAc,IAAIztC,IACvBvC,KAAK2uC,UAAYA,EACjB3uC,KAAK4J,aAAeA,EACpB5J,KAAKwW,KAAOza,EAASA,EAAOya,MAAQza,EAASiE,KAC7CA,KAAKiwC,KAAOl0C,EAAS,GAAH,gBAAOA,EAAOk0C,MAAd,CAAoBl0C,IAAU,GAChDiE,KAAKjE,OAASA,EACdiE,KAAKwgC,MAAQzkC,EAASA,EAAOykC,MAAQ,EAAI,EACzCmO,GAAa3uC,KAAKwW,KAAK05B,sBAAsBvB,EAAW3uC,MACxD,IAAK,IAAIqa,EAAI,EAAGA,EAAIra,KAAKiwC,KAAK5qC,OAAQgV,IAClCra,KAAKiwC,KAAK51B,GAAG80B,sBAAuB,EAEpCnvC,KAAKwW,OAASxW,OACdA,KAAKyvC,MAAQ,IAAIvB,GACxB,CApHL,+CAqHI,SAAiBlwC,EAAM4T,GAInB,OAHK5R,KAAKovC,cAAc1sC,IAAI1E,IACxBgC,KAAKovC,cAAczsC,IAAI3E,EAAM,IAAI0xB,IAE9B1vB,KAAKovC,cAAc5sC,IAAIxE,GAAM0lB,IAAI9R,EAC3C,GA1HL,6BA2HI,SAAgB5T,GAAe,IAC3B,IAAMmyC,EAAsBnwC,KAAKovC,cAAc5sC,IAAIxE,GADxB,mBAANipC,EAAM,iCAANA,EAAM,kBAEH,OAAxBkJ,QAAwD,IAAxBA,GAA0CA,EAAoBnzC,OAApB,MAAAmzC,EAA8BlJ,EAC3G,GA9HL,0BA+HI,SAAajpC,GACT,OAAOgC,KAAKovC,cAAc1sC,IAAI1E,EACjC,GAjIL,mCAkII,SAAsB2wC,EAAWpG,GAC7BvoC,KAAKqvC,eAAe1sC,IAAIgsC,EAAWpG,EACtC,GApIL,mBAwII,SAAM3mC,GAAiC,IAC/BrI,EAD+B,OAAvB+zC,EAAuB,wDAEnC,IAAIttC,KAAK4B,SAAT,CAEA5B,KAAKivC,MACDrtC,aAAoBwuC,YAAmC,QAArBxuC,EAASyuC,QAC/CrwC,KAAK4B,SAAWA,EAChB,MAA4C5B,KAAK6J,QAAzCzI,EAAR,EAAQA,SAAUkC,EAAlB,EAAkBA,OAAQrH,EAA1B,EAA0BA,cAU1B,GATIA,IAAkBA,EAAcO,SAChCP,EAAc4F,MAAMD,GAExB5B,KAAKwW,KAAKi5B,MAAM/rB,IAAI1jB,MACG,QAAtBzG,EAAKyG,KAAKjE,cAA2B,IAAPxC,GAAyBA,EAAG2G,SAASwjB,IAAI1jB,MACxEA,KAAK2uC,WAAa3uC,KAAKwW,KAAK64B,eAAer4B,OAAOhX,KAAK2uC,WACnDrB,IAAkBhqC,GAAUlC,KAC5BpB,KAAKstC,eAAgB,GAErBgB,EAAsB,CACtB,IAAInf,EACEmhB,EAAsB,kBAAO,EAAK95B,KAAKw4B,uBAAwB,CAAzC,EAC5BV,EAAqB1sC,GAAU,WAC3B,EAAK4U,KAAKw4B,uBAAwB,EAClC7f,GAAeA,IACfA,EAAcxK,GAAM2rB,EAAqB,KACrC3wC,EAAsBC,yBACtBD,EAAsBC,wBAAyB,EAC/C,EAAK6vC,MAAM1+B,QAAQw/B,IAE1B,GACJ,CACGnvC,GACApB,KAAKwW,KAAKg6B,mBAAmBpvC,EAAUpB,OAGd,IAAzBA,KAAK6J,QAAQ/L,SACb7B,IACCmF,GAAYkC,IACbtD,KAAK8R,iBAAiB,aAAa,YAA+E,IAC1GvY,EAAIimB,EAAIC,EAAIC,EAAI+tB,EADc9qB,EAA4E,EAA5EA,MAAO6c,EAAqE,EAArEA,iBAAkBiR,EAAmD,EAAnDA,yBAAkCC,EAAiB,EAAzBptC,OAErF,GAAI,EAAKqtC,yBAGL,OAFA,EAAKzlC,YAASzR,OACd,EAAKm3C,oBAAiBn3C,GAI1B,IAAMo3C,EAAmI,QAA/GrxB,EAAwC,QAAlCjmB,EAAK,EAAKsQ,QAAQqH,kBAA+B,IAAP3X,EAAgBA,EAAK0C,EAAc8xB,8BAA2C,IAAPvO,EAAgBA,EAAKsxB,GACtK,EAA+D70C,EAAc6b,WAArEi5B,EAAR,EAAQA,uBAAwBC,EAAhC,EAAgCA,0BAK1BC,GAAiB,EAAKC,eACvB1E,GAAU,EAAK0E,aAAcR,IAC9BD,EAMEU,GAAgC3R,GAAoBiR,EAC1D,IAAgC,QAA1BhxB,EAAK,EAAKwtB,kBAA+B,IAAPxtB,OAAgB,EAASA,EAAG7d,WAChEuvC,GACC3R,IACIyR,IAAkB,EAAK3iB,kBAAoB,CAC5C,EAAK2e,aACL,EAAKS,aAAe,EAAKT,WACzB,EAAKS,aAAaA,kBAAej0C,GAErC,EAAK23C,mBAAmBzuB,EAAOwuB,GAC/B,IAAME,GAAmB,kBAClBhkB,GAAmBwjB,EAAkB,WADtB,IAElB5kB,OAAQ8kB,EACR5kB,WAAY6kB,IAEZ/0C,EAAcg3B,qBACdoe,EAAiB1sB,MAAQ,EACzB0sB,EAAiBjtC,MAAO,GAE5B,EAAKuqB,eAAe0iB,EACvB,MAOQ7R,GAC0B,IAA3B,EAAKuQ,mBACLQ,GAAgB,GAEpB,EAAKrG,WAA2D,QAA7CuD,GAAM/tB,EAAK,EAAK7V,SAASiQ,sBAAmC,IAAP2zB,GAAyBA,EAAGpwC,KAAKqiB,IAE7G,EAAKwxB,aAAeR,CACvB,GA1FK,CA4Fb,GAvOL,qBAwOI,WACI,IAAIn3C,EAAIimB,EACRxf,KAAK6J,QAAQzI,UAAYpB,KAAK6pC,aAC9B7pC,KAAKwW,KAAKi5B,MAAMvc,OAAOlzB,MACI,QAA1BzG,EAAKyG,KAAKgqC,kBAA+B,IAAPzwC,GAAyBA,EAAG25B,OAAOlzB,MAC/C,QAAtBwf,EAAKxf,KAAKjE,cAA2B,IAAPyjB,GAAyBA,EAAGtf,SAAS8W,OAAOhX,MAC3EA,KAAK4B,cAAWnI,EAChB4qB,GAAWitB,UAAUtxC,KAAKwvC,iBAC7B,GAhPL,yBAkPI,WACIxvC,KAAK+uC,uBAAwB,CAChC,GApPL,2BAqPI,WACI/uC,KAAK+uC,uBAAwB,CAChC,GAvPL,6BAwPI,WACI,OAAO/uC,KAAK+uC,uBAAyB/uC,KAAKgvC,qBAC7C,GA1PL,oCA2PI,WACI,IAAIz1C,EACJ,OAAQyG,KAAKm8B,qBACe,QAAtB5iC,EAAKyG,KAAKjE,cAA2B,IAAPxC,OAAgB,EAASA,EAAGo3C,4BAC5D,CACP,GAhQL,yBAkQI,WACI,IAAIp3C,EACAyG,KAAKuxC,oBAETvxC,KAAKqtC,YAAa,EACI,QAArB9zC,EAAKyG,KAAKyvC,aAA0B,IAAPl2C,GAAyBA,EAAGwX,QAAQygC,IAClExxC,KAAK4uC,cACR,GAzQL,wBA0QI,WAAyC,IACjCr1C,EAAIimB,EAAIC,EADLgyB,IAA8B,yDAErC,GAAIzxC,KAAKwW,KAAK+6B,kBACoC,QAA7C/xB,GAAMjmB,EAAKyG,KAAK6J,SAASiQ,sBAAmC,IAAP0F,GAAyBA,EAAGniB,KAAK9D,QAI3F,IADCyG,KAAKwW,KAAK62B,YAAcrtC,KAAKwW,KAAKk7B,eAC/B1xC,KAAKstC,cAAT,CAEAttC,KAAKstC,eAAgB,EACrB,IAAK,IAAIjzB,EAAI,EAAGA,EAAIra,KAAKiwC,KAAK5qC,OAAQgV,IAAK,CACvC,IAAMkuB,EAAOvoC,KAAKiwC,KAAK51B,GACvBkuB,EAAK4G,sBAAuB,EAC5B5G,EAAKvJ,aAAa,WACrB,CACD,MAA6Bh/B,KAAK6J,QAA1BzI,EAAR,EAAQA,SAAUkC,EAAlB,EAAkBA,OAClB,QAAiB7J,IAAb2H,GAA2BkC,EAA/B,CAEA,IAAMwG,EAA0D,QAArC2V,EAAKzf,KAAK6J,QAAQ5N,qBAAkC,IAAPwjB,OAAgB,EAASA,EAAG3H,WAAWhO,kBAC/G9J,KAAK2xC,2BAAmD,OAAtB7nC,QAAoD,IAAtBA,OAA+B,EAASA,EAAkB9J,KAAK4J,aAAc,IAC7I5J,KAAK4xC,iBACLH,GAAyBzxC,KAAK6xC,gBAAgB,aAJpC,CATA,CAcb,GAhSL,uBAkSI,WAKI,GAJyB7xC,KAAKuxC,kBAQ1B,OAHAvxC,KAAK8xC,gBACL9xC,KAAKuvC,yBACLvvC,KAAKyvC,MAAM1+B,QAAQghC,IAGlB/xC,KAAKqtC,aAEVrtC,KAAKqtC,YAAa,EAOdrtC,KAAKqvC,eAAehoC,OACpBrH,KAAKqvC,eAAet+B,QAAQihC,IAC5BhyC,KAAKqvC,eAAe1e,SAKxB3wB,KAAKyvC,MAAM1+B,QAAQkhC,IAKnBjyC,KAAKyvC,MAAM1+B,QAAQkuB,IAKnBj/B,KAAKyvC,MAAM1+B,QAAQmhC,IACnBlyC,KAAKuvC,oBAELjrB,GAAU+G,SACV/G,GAAUgtB,YACVhtB,GAAUznB,SACb,GA7UL,+BA8UI,WACImD,KAAKyvC,MAAM1+B,QAAQohC,IACnBnyC,KAAKgwC,YAAYj/B,QAAQqhC,GAC5B,GAjVL,sCAkVI,WACInuB,GAAAA,UAAejkB,KAAKwvC,kBAAkB,GAAO,EAChD,GApVL,uCAqVI,WAA4B,WAMxBvrB,GAAAA,YAAgB,WACR,EAAKqpB,cACL,EAAK92B,KAAKkzB,YAGV,EAAKlzB,KAAK84B,mBAEjB,GACJ,GAnWL,4BAuWI,YACQtvC,KAAKmtC,UAAantC,KAAK4B,WAE3B5B,KAAKmtC,SAAWntC,KAAKqyC,UACxB,GA3WL,0BA4WI,WACI,IAAI94C,EACJ,GAAKyG,KAAK4B,WAGV5B,KAAKg/B,eACCh/B,KAAK6J,QAAQ87B,qBAAuB3lC,KAAKkqC,UAC1ClqC,KAAKstC,eADV,CAWA,GAAIttC,KAAKitC,aAAejtC,KAAKitC,WAAWrrC,SACpC,IAAK,IAAIyY,EAAI,EAAGA,EAAIra,KAAKiwC,KAAK5qC,OAAQgV,IAAK,CAC1Bra,KAAKiwC,KAAK51B,GAClB2kB,cACR,CAEL,IAAMsT,EAAatyC,KAAKsD,OACxBtD,KAAKsD,OAAStD,KAAKqyC,SAAQ,GAC3BryC,KAAKuyC,gB5BxZQ,CACrB5uC,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,I4B0Z7BxE,KAAKstC,eAAgB,EACrBttC,KAAK2oC,qBAAkBlvC,EACvBuG,KAAK6xC,gBAAgB,UAAW7xC,KAAKsD,OAAOg5B,WACN,QAArC/iC,EAAKyG,KAAK6J,QAAQ5N,qBAAkC,IAAP1C,GAAyBA,EAAGyD,OAAO,gBAAiBgD,KAAKsD,OAAOg5B,UAA0B,OAAfgW,QAAsC,IAAfA,OAAwB,EAASA,EAAWhW,UApB3L,CAqBJ,GA1YL,0BA2YI,WAAgC,IAAnBkW,EAAmB,uDAAX,UACbC,EAAmBv0C,QAAQ8B,KAAK6J,QAAQ47B,cAAgBzlC,KAAK4B,UAC7D5B,KAAK+9B,QACL/9B,KAAK+9B,OAAO6Q,cAAgB5uC,KAAKwW,KAAKo4B,aACtC5uC,KAAK+9B,OAAOyU,QAAUA,IACtBC,GAAmB,GAEnBA,IACAzyC,KAAK+9B,OAAS,CACV6Q,YAAa5uC,KAAKwW,KAAKo4B,YACvB4D,MAAAA,EACAE,OAAQjE,EAAkBzuC,KAAK4B,UAC/B8K,OAAQ8hC,EAAcxuC,KAAK4B,WAGtC,GA1ZL,4BA2ZI,WACI,IAAIrI,EACJ,GAAKm1C,EAAL,CAEA,IAAMiE,EAAmB3yC,KAAKstC,eAAiBttC,KAAKmvC,qBAC9CyD,EAAgB5yC,KAAK2oC,kBAAoB4D,GAAYvsC,KAAK2oC,iBAC1D7+B,EAA0D,QAArCvQ,EAAKyG,KAAK6J,QAAQ5N,qBAAkC,IAAP1C,OAAgB,EAASA,EAAGue,WAAWhO,kBACzG+oC,EAA+C,OAAtB/oC,QAAoD,IAAtBA,OAA+B,EAASA,EAAkB9J,KAAK4J,aAAc,IACpIkpC,EAA8BD,IAA2B7yC,KAAK2xC,2BAChEgB,IACCC,GACGzoC,GAAanK,KAAK4J,eAClBkpC,KACJpE,EAAe1uC,KAAK4B,SAAUixC,GAC9B7yC,KAAKmvC,sBAAuB,EAC5BnvC,KAAKmkC,iBAZC,CAcb,GA5aL,qBA6aI,WAAgC,IAAxB4O,IAAwB,yDACtBC,EAAUhzC,KAAKg+B,iBACjB1B,EAAYt8B,KAAKizC,oBAAoBD,GAUzC,OAJID,IACAzW,EAAYt8B,KAAK+yC,gBAAgBzW,IAErC4W,GAAS5W,GACF,CACHsS,YAAa5uC,KAAKwW,KAAKo4B,YACvBuE,YAAaH,EACb1W,UAAAA,EACA1yB,aAAc,CAAC,EACfuB,OAAQnL,KAAKtD,GAEpB,GAhcL,4BAicI,WACI,IAAQT,EAAkB+D,KAAK6J,QAAvB5N,cACR,IAAKA,EACD,M5BvdS,CACrB0H,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,I4Byd7B,IAAM81B,EAAMr+B,EAAci/B,qBAElB6C,EAAW/9B,KAAKwW,KAAhBunB,OAKR,OAJIA,IACAtD,GAAcH,EAAI32B,EAAGo6B,EAAOrxB,OAAO/I,GACnC82B,GAAcH,EAAI12B,EAAGm6B,EAAOrxB,OAAO9I,IAEhC02B,CACV,GA7cL,iCA8cI,SAAoBA,GAChB,IAAM8Y,E5BleO,CACrBzvC,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,I4Boe7BsnC,GAAYsH,EAAkB9Y,GAK9B,IAAK,IAAIjgB,EAAI,EAAGA,EAAIra,KAAKiwC,KAAK5qC,OAAQgV,IAAK,CACvC,IAAMkuB,EAAOvoC,KAAKiwC,KAAK51B,GACf0jB,EAAoBwK,EAApBxK,OAAQl0B,EAAY0+B,EAAZ1+B,QAChB,GAAI0+B,IAASvoC,KAAKwW,MAAQunB,GAAUl0B,EAAQ47B,aAAc,CAKtD,GAAI1H,EAAO2U,OAAQ,CACf5G,GAAYsH,EAAkB9Y,GAC9B,IAAgB+Y,EAAerzC,KAAKwW,KAA5BunB,OAKJsV,IACA5Y,GAAc2Y,EAAiBzvC,GAAI0vC,EAAW3mC,OAAO/I,GACrD82B,GAAc2Y,EAAiBxvC,GAAIyvC,EAAW3mC,OAAO9I,GAE5D,CACD62B,GAAc2Y,EAAiBzvC,EAAGo6B,EAAOrxB,OAAO/I,GAChD82B,GAAc2Y,EAAiBxvC,EAAGm6B,EAAOrxB,OAAO9I,EACnD,CACJ,CACD,OAAOwvC,CACV,GA9eL,4BA+eI,SAAe9Y,GAA4B,IAAvBgZ,EAAuB,wDACjCC,E5BngBO,CACrB5vC,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,I4BqgB7BsnC,GAAYyH,EAAgBjZ,GAC5B,IAAK,IAAIjgB,EAAI,EAAGA,EAAIra,KAAKiwC,KAAK5qC,OAAQgV,IAAK,CACvC,IAAMkuB,EAAOvoC,KAAKiwC,KAAK51B,IAClBi5B,GACD/K,EAAK1+B,QAAQ47B,cACb8C,EAAKxK,QACLwK,IAASA,EAAK/xB,MACdykB,GAAasY,EAAgB,CACzB5vC,GAAI4kC,EAAKxK,OAAOrxB,OAAO/I,EACvBC,GAAI2kC,EAAKxK,OAAOrxB,OAAO9I,IAG1BuG,GAAao+B,EAAK3+B,eAEvBqxB,GAAasY,EAAgBhL,EAAK3+B,aACrC,CAID,OAHIO,GAAanK,KAAK4J,eAClBqxB,GAAasY,EAAgBvzC,KAAK4J,cAE/B2pC,CACV,GArgBL,6BAsgBI,SAAgBjZ,GACZ,IAAI/gC,EACEi6C,E5B3hBO,CACrB7vC,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,I4B6hB7BsnC,GAAY0H,EAAqBlZ,GACjC,IAAK,IAAIjgB,EAAI,EAAGA,EAAIra,KAAKiwC,KAAK5qC,OAAQgV,IAAK,CACvC,IAAMkuB,EAAOvoC,KAAKiwC,KAAK51B,GACvB,GAAKkuB,EAAK3mC,UAELuI,GAAao+B,EAAK3+B,cAAvB,CAEAkwB,GAASyO,EAAK3+B,eAAiB2+B,EAAKqJ,iBACpC,IAAMvF,E5BpiBG,CACrB1oC,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,I4BuiBzBsnC,GAAYO,EADI9D,EAAKvK,kBAErBoO,GAAoBoH,EAAqBjL,EAAK3+B,aAAuC,QAAxBrQ,EAAKgvC,EAAK4E,gBAA6B,IAAP5zC,OAAgB,EAASA,EAAG+iC,UAAW+P,EALxH,CAMf,CAID,OAHIliC,GAAanK,KAAK4J,eAClBwiC,GAAoBoH,EAAqBxzC,KAAK4J,cAE3C4pC,CACV,GA1hBL,4BA8hBI,SAAe7wB,GACX3iB,KAAKyzC,YAAc9wB,EACnB3iB,KAAK8uC,mBAAoB,EACzB9uC,KAAKwW,KAAKk9B,0BACb,GAliBL,wBAmiBI,SAAW7pC,GACP7J,KAAK6J,SAAL,0BACO7J,KAAK6J,SACLA,GAFP,IAGI0jC,eAAiC9zC,IAAtBoQ,EAAQ0jC,WAA0B1jC,EAAQ0jC,WAE5D,GAziBL,+BA0iBI,WACIvtC,KAAK+9B,YAAStkC,EACduG,KAAKsD,YAAS7J,EACduG,KAAKmtC,cAAW1zC,EAChBuG,KAAK2xC,gCAA6Bl4C,EAClCuG,KAAKyzC,iBAAch6C,EACnBuG,KAAKkL,YAASzR,EACduG,KAAKstC,eAAgB,CACxB,GAljBL,gCAsjBI,WACI,IAAI/zC,EAMEyxC,EAAOhrC,KAAK2zC,UAOlB,GANA3zC,KAAK8uC,oBAAsB9uC,KAAK8uC,kBAAoB9D,EAAK8D,mBACzD9uC,KAAKilC,mBAAqBjlC,KAAKilC,iBAAmB+F,EAAK/F,kBAKlDjlC,KAAK8uC,mBAAsB9uC,KAAK4zC,+BAArC,CAEA,MAA6B5zC,KAAK6J,QAA1BvG,EAAR,EAAQA,OAAQlC,EAAhB,EAAgBA,SAIhB,GAAKpB,KAAKsD,SAAYA,GAAUlC,GAAhC,CAQA,IAAKpB,KAAKyzC,cAAgBzzC,KAAK4wC,eAAgB,CAE3C,IAAMiD,EAAiB7zC,KAAK8zC,6BACxBD,GAAkBA,EAAevwC,QACjCtD,KAAK6zC,eAAiBA,EACtB7zC,KAAK4wC,e5B1mBA,CACrBjtC,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,I4B4mBrBxE,KAAK+zC,qB5B3mBA,CACrBpwC,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,I4B6mBrBu0B,GAAqB/4B,KAAK+zC,qBAAsB/zC,KAAKsD,OAAOg5B,UAAWuX,EAAevwC,OAAOg5B,WAC7FwP,GAAY9rC,KAAK4wC,eAAgB5wC,KAAK+zC,uBAGtC/zC,KAAK6zC,eAAiB7zC,KAAK4wC,oBAAiBn3C,CAEnD,CpClmBb,IAAyByR,EAAQ2tB,EAAU98B,EoCumB/B,GAAKiE,KAAK4wC,gBAAmB5wC,KAAKyzC,YAuClC,GAlCKzzC,KAAKkL,SACNlL,KAAKkL,O5B7nBI,CACrBvH,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,I4B+nBzBxE,KAAKg0C,qB5B9nBI,CACrBrwC,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,K4BooBzBxE,KAAK4wC,gBACL5wC,KAAK+zC,uBAC2B,QAA9Bx6C,EAAKyG,KAAK6zC,sBAAmC,IAAPt6C,OAAgB,EAASA,EAAG2R,SpCrnB3DA,EoCsnBOlL,KAAKkL,OpCtnBJ2tB,EoCsnBY74B,KAAK4wC,epCtnBP70C,EoCsnBuBiE,KAAK6zC,eAAe3oC,OpCrnBlF0tB,GAAiB1tB,EAAOvH,EAAGk1B,EAASl1B,EAAG5H,EAAO4H,GAC9Ci1B,GAAiB1tB,EAAOtH,EAAGi1B,EAASj1B,EAAG7H,EAAO6H,IoCynB7B5D,KAAKyzC,aACNv1C,QAAQ8B,KAAK0tC,cAEb1tC,KAAKkL,OAASlL,KAAKi0C,eAAej0C,KAAKsD,OAAOg5B,WAG9CwP,GAAY9rC,KAAKkL,OAAQlL,KAAKsD,OAAOg5B,WAEzCjC,GAAcr6B,KAAKkL,OAAQlL,KAAKyzC,cAMhC3H,GAAY9rC,KAAKkL,OAAQlL,KAAKsD,OAAOg5B,WAKrCt8B,KAAK4zC,+BAAgC,CACrC5zC,KAAK4zC,gCAAiC,EACtC,IAAMC,EAAiB7zC,KAAK8zC,6BACxBD,GACA31C,QAAQ21C,EAAenG,gBACnBxvC,QAAQ8B,KAAK0tC,gBAChBmG,EAAehqC,QAAQ47B,cACxBoO,EAAe3oC,QACflL,KAAK6zC,eAAiBA,EACtB7zC,KAAK4wC,e5BvqBA,CACrBjtC,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,I4ByqBrBxE,KAAK+zC,qB5BxqBA,CACrBpwC,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,I4B0qBrBu0B,GAAqB/4B,KAAK+zC,qBAAsB/zC,KAAKkL,OAAQ2oC,EAAe3oC,QAC5E4gC,GAAY9rC,KAAK4wC,eAAgB5wC,KAAK+zC,uBAGtC/zC,KAAK6zC,eAAiB7zC,KAAK4wC,oBAAiBn3C,CAEnD,CAjFS,CANA,CAwFb,GA7pBL,wCA8pBI,WACI,GAAKuG,KAAKjE,SACN+9B,GAAS95B,KAAKjE,OAAO6N,gBACrBmwB,GAAe/5B,KAAKjE,OAAO6N,cAE/B,OAAK5J,KAAKjE,OAAO60C,gBAAkB5wC,KAAKjE,OAAO03C,cAC3CzzC,KAAKjE,OAAOuH,OACLtD,KAAKjE,OAGLiE,KAAKjE,OAAO+3C,4BAE1B,GA1qBL,4BA2qBI,WACI,IAAIv6C,EACIu1C,EAAwC9uC,KAAxC8uC,kBAAmB7J,EAAqBjlC,KAArBilC,iBAC3BjlC,KAAK8uC,kBAAoB9uC,KAAKilC,kBAAmB,EACjD,IAAM+F,EAAOhrC,KAAK2zC,UACZO,EAAWh2C,QAAQ8B,KAAK0tC,eAAiB1tC,OAASgrC,EACpDmJ,GAAU,EAKd,GAJIrF,IACAqF,GAAU,GACVD,GAAYjP,IACZkP,GAAU,IACVA,EAAJ,CAEA,MAA6Bn0C,KAAK6J,QAA1BvG,EAAR,EAAQA,OAAQlC,EAAhB,EAAgBA,SAWhB,GANApB,KAAK6uC,gBAAkB3wC,SAAgC,QAAtB3E,EAAKyG,KAAKjE,cAA2B,IAAPxC,OAAgB,EAASA,EAAGs1C,kBACvF7uC,KAAKsuB,kBACLtuB,KAAKo0C,kBACJp0C,KAAK6uC,kBACN7uC,KAAKyzC,YAAczzC,KAAK4wC,oBAAiBn3C,GAExCuG,KAAKsD,SAAYA,GAAUlC,GAAhC,CAMA0qC,GAAY9rC,KAAKuyC,gBAAiBvyC,KAAKsD,OAAOg5B,W/B/rB1D,SAAyBhC,EAAKoO,EAAW2L,GAAsC,IACvE96C,EAAIimB,EADuC80B,EAA4B,wDAErEC,EAAaF,EAAShvC,OAC5B,GAAKkvC,EAAL,CAIA,IAAIhM,EACA5lB,EAFJ+lB,EAAU/kC,EAAI+kC,EAAU9kC,EAAI,EAG5B,IAAK,IAAIyW,EAAI,EAAGA,EAAIk6B,EAAYl6B,IAE5BsI,GADA4lB,EAAO8L,EAASh6B,IACHsuB,gBACuH,cAAjD,QAA7EnpB,EAA8B,QAAxBjmB,EAAKgvC,EAAK3mC,gBAA6B,IAAPrI,OAAgB,EAASA,EAAGwQ,aAA0B,IAAPyV,OAAgB,EAASA,EAAGyiB,WAEnHqS,GACA/L,EAAK1+B,QAAQ47B,cACb8C,EAAKxK,QACLwK,IAASA,EAAK/xB,MACdykB,GAAaX,EAAK,CACd32B,GAAI4kC,EAAKxK,OAAOrxB,OAAO/I,EACvBC,GAAI2kC,EAAKxK,OAAOrxB,OAAO9I,IAG3B+e,IAEA+lB,EAAU/kC,GAAKgf,EAAMhf,EAAEsC,MACvByiC,EAAU9kC,GAAK+e,EAAM/e,EAAEqC,MAEvBo0B,GAAcC,EAAK3X,IAEnB2xB,GAAsBnqC,GAAao+B,EAAK3+B,eACxCqxB,GAAaX,EAAKiO,EAAK3+B,eAO/B8+B,EAAU/kC,EAAI42B,GAAcmO,EAAU/kC,GACtC+kC,EAAU9kC,EAAI22B,GAAcmO,EAAU9kC,EAnC5B,CAoCb,C+B4pBW4wC,CAAgBx0C,KAAKuyC,gBAAiBvyC,KAAK0oC,UAAW1oC,KAAKiwC,KAAMiE,GACjE,IAAQhpC,EAAW8/B,EAAX9/B,OACR,GAAKA,EAAL,CAEKlL,KAAK2oC,kBACN3oC,KAAK2oC,gB5B3uBM,CACvBhlC,EAP2B,CAC3B+0B,UAAW,EACXzyB,MAAO,EACPwG,OAAQ,EACRgsB,YAAa,GAIb70B,EAR2B,CAC3B80B,UAAW,EACXzyB,MAAO,EACPwG,OAAQ,EACRgsB,YAAa,I4B8uBDz4B,KAAKy0C,6B5B5uBM,CACvB9wC,EAP2B,CAC3B+0B,UAAW,EACXzyB,MAAO,EACPwG,OAAQ,EACRgsB,YAAa,GAIb70B,EAR2B,CAC3B80B,UAAW,EACXzyB,MAAO,EACPwG,OAAQ,EACRgsB,YAAa,K4BgvBL,IAAMic,EAAiB10C,KAAK0oC,UAAU/kC,EAChCgxC,EAAiB30C,KAAK0oC,UAAU9kC,EAChCgxC,EAA0B50C,KAAK60C,oBAUrClc,GAAa34B,KAAK2oC,gBAAiB3oC,KAAKuyC,gBAAiBrnC,EAAQlL,KAAK4J,cACtE5J,KAAK60C,oBAAsBlH,GAAyB3tC,KAAK2oC,gBAAiB3oC,KAAK0oC,WAC3E1oC,KAAK60C,sBAAwBD,GAC7B50C,KAAK0oC,UAAU/kC,IAAM+wC,GACrB10C,KAAK0oC,UAAU9kC,IAAM+wC,IACrB30C,KAAK6vC,cAAe,EACpB7vC,KAAKmkC,iBACLnkC,KAAK6xC,gBAAgB,mBAAoB3mC,GAxBnC,CAbA,CAbA,CAoDb,GA3uBL,kBA4uBI,WACIlL,KAAK8vC,WAAY,CAEpB,GA/uBL,kBAgvBI,WACI9vC,KAAK8vC,WAAY,CAEpB,GAnvBL,4BAovBI,WAAiC,IACzBv2C,EAAIimB,EAAIC,EADDq1B,IAAkB,yDAEiB,QAA7Ct1B,GAAMjmB,EAAKyG,KAAK6J,SAASs6B,sBAAmC,IAAP3kB,GAAyBA,EAAGniB,KAAK9D,GACvFu7C,IAAyC,QAA1Br1B,EAAKzf,KAAKgqC,kBAA+B,IAAPvqB,GAAyBA,EAAG0kB,kBACzEnkC,KAAK0tC,eAAiB1tC,KAAK0tC,aAAa9rC,WACxC5B,KAAK0tC,kBAAej0C,EAE3B,GA3vBL,gCA4vBI,SAAmBkpB,GAA6C,IACxDppB,EAAIimB,EADoD,OAAtC2xB,EAAsC,wDAEtDhE,EAAWntC,KAAKmtC,SAChB4H,GAAqC,OAAb5H,QAAkC,IAAbA,OAAsB,EAASA,EAASvjC,eAAiB,CAAC,EACvGorC,GAAc,UAAKh1C,KAAK4J,cACxB6pC,E5BzxBS,CACvB9vC,EAP2B,CAC3B+0B,UAAW,EACXzyB,MAAO,EACPwG,OAAQ,EACRgsB,YAAa,GAIb70B,EAR2B,CAC3B80B,UAAW,EACXzyB,MAAO,EACPwG,OAAQ,EACRgsB,YAAa,I4B4xBLz4B,KAAK4wC,eAAiB5wC,KAAK+zC,0BAAuBt6C,EAClDuG,KAAK4zC,gCAAkCzC,EACvC,IAAM8D,E5BvxBO,CACrBtxC,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,I4ByxBvB0wC,GAAwC,OAAb/H,QAAkC,IAAbA,OAAsB,EAASA,EAAShiC,WAAoC,QAAtB5R,EAAKyG,KAAKsD,cAA2B,IAAP/J,OAAgB,EAASA,EAAG4R,QAChK+/B,IAA4C,QAA1B1rB,EAAKxf,KAAKgqC,kBAA+B,IAAPxqB,OAAgB,EAASA,EAAGyqB,QAAQ5kC,SAAW,IAAM,EACzG4lC,EAAyB/sC,QAAQg3C,IAClChK,IAC0B,IAA3BlrC,KAAK6J,QAAQ0jC,YACZvtC,KAAKiwC,KAAKlyC,KAAKo3C,KACpBn1C,KAAK+vC,kBAAoB,EACzB/vC,KAAKo1C,eAAiB,SAAC3pB,GACnB,IAAIlyB,EACE0rB,EAAWwG,EAAS,IAC1B4pB,GAAa5B,EAAY9vC,EAAGgf,EAAMhf,EAAGshB,GACrCowB,GAAa5B,EAAY7vC,EAAG+e,EAAM/e,EAAGqhB,GACrC,EAAKqwB,eAAe7B,GAChB,EAAK7C,gBACL,EAAKmD,sBACL,EAAKzwC,SAC2B,QAA9B/J,EAAK,EAAKs6C,sBAAmC,IAAPt6C,OAAgB,EAASA,EAAG+J,UACpEy1B,GAAqBkc,EAAgB,EAAK3xC,OAAOg5B,UAAW,EAAKuX,eAAevwC,OAAOg5B,WACvFiZ,GAAO,EAAK3E,eAAgB,EAAKmD,qBAAsBkB,EAAgBhwB,IAEvEiwB,IACA,EAAK9H,gBAAkB4H,EACvBlK,GAAUkK,EAAaD,EAAsB,EAAKnrC,aAAcqb,EAAUgmB,EAAwBC,IAEtG,EAAK10B,KAAKk9B,2BACV,EAAKvP,iBACL,EAAK4L,kBAAoB9qB,CAC5B,EACDjlB,KAAKo1C,eAAe,EACvB,GAlyBL,4BAmyBI,SAAevrC,GAAS,IAChBtQ,EAAIimB,EADY,OAEpBxf,KAAK6xC,gBAAgB,kBACY,QAAhCt4C,EAAKyG,KAAKsuB,wBAAqC,IAAP/0B,GAAyBA,EAAGgyB,OACjEvrB,KAAK0tC,eACyC,QAA7CluB,EAAKxf,KAAK0tC,aAAapf,wBAAqC,IAAP9O,GAAyBA,EAAG+L,QAElFvrB,KAAKo0C,mBACL/vB,GAAWgH,OAAOrrB,KAAKo0C,kBACvBp0C,KAAKo0C,sBAAmB36C,GAO5BuG,KAAKo0C,iBAAmBnwB,GAAAA,QAAY,WAChCtkB,EAAsBC,wBAAyB,EAC/C,EAAK0uB,iBAAmBxwB,GAAQ,EAxzBxB,KAwzBuB,QAAC,UACzB+L,GADwB,IAE3BwiB,SAAU,SAACZ,GACP,IAAIlyB,EACJ,EAAK67C,eAAe3pB,GACQ,QAA3BlyB,EAAKsQ,EAAQwiB,gBAA6B,IAAP9yB,GAAyBA,EAAG8D,KAAKwM,EAAS4hB,EACjF,EACDU,WAAY,WACR,IAAI5yB,EAC0B,QAA7BA,EAAKsQ,EAAQsiB,kBAA+B,IAAP5yB,GAAyBA,EAAG8D,KAAKwM,GACvE,EAAK2rC,mBACR,KAED,EAAK9H,eACL,EAAKA,aAAapf,iBAAmB,EAAKA,kBAE9C,EAAK8lB,sBAAmB36C,CAC3B,GACJ,GAv0BL,+BAw0BI,WACI,IAAIF,EACAyG,KAAK0tC,eACL1tC,KAAK0tC,aAAapf,sBAAmB70B,EACrCuG,KAAK0tC,aAAaR,qBAAkBzzC,GAEb,QAA1BF,EAAKyG,KAAKgqC,kBAA+B,IAAPzwC,GAAyBA,EAAGk8C,wBAC/Dz1C,KAAK0tC,aACD1tC,KAAKsuB,iBACDtuB,KAAKotC,qBACD3zC,EACZuG,KAAK6xC,gBAAgB,oBACxB,GAp1BL,6BAq1BI,WACI,IAAIt4C,EACAyG,KAAKsuB,mBAC0B,QAA9B/0B,EAAKyG,KAAKo1C,sBAAmC,IAAP77C,GAAyBA,EAAG8D,KAAK2C,KA31BhE,KA41BRA,KAAKsuB,iBAAiB/C,QAE1BvrB,KAAKw1C,mBACR,GA51BL,qCA61BI,WACI,IAAMxK,EAAOhrC,KAAK2zC,UACZK,EAAuDhJ,EAAvDgJ,qBAAsB9oC,EAAiC8/B,EAAjC9/B,OAAQ5H,EAAyB0nC,EAAzB1nC,OAAQsG,EAAiBohC,EAAjBphC,aAC5C,GAAKoqC,GAAyB9oC,GAAW5H,EAAzC,CAOA,GAAItD,OAASgrC,GACThrC,KAAKsD,QACLA,GACAoyC,GAA0B11C,KAAK6J,QAAQ+7B,cAAe5lC,KAAKsD,OAAOg5B,UAAWh5B,EAAOg5B,WAAY,CAChGpxB,EAASlL,KAAKkL,Q5B93BL,CACrBvH,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,I4Bg4BzB,IAAMmxC,EAAUvd,GAAWp4B,KAAKsD,OAAOg5B,UAAU34B,GACjDuH,EAAOvH,EAAEY,IAAMymC,EAAK9/B,OAAOvH,EAAEY,IAC7B2G,EAAOvH,EAAEa,IAAM0G,EAAOvH,EAAEY,IAAMoxC,EAC9B,IAAMC,EAAUxd,GAAWp4B,KAAKsD,OAAOg5B,UAAU14B,GACjDsH,EAAOtH,EAAEW,IAAMymC,EAAK9/B,OAAOtH,EAAEW,IAC7B2G,EAAOtH,EAAEY,IAAM0G,EAAOtH,EAAEW,IAAMqxC,CACjC,CACD9J,GAAYkI,EAAsB9oC,GAMlC+vB,GAAa+Y,EAAsBpqC,GAOnC+uB,GAAa34B,KAAKy0C,6BAA8Bz0C,KAAKuyC,gBAAiByB,EAAsBpqC,EA/BlF,CAgCb,GAj4BL,gCAk4BI,SAAmBxI,EAAUmnC,GACzB,IAAIhvC,EAAIimB,EAAIC,EACPzf,KAAKgwC,YAAYttC,IAAItB,IACtBpB,KAAKgwC,YAAYrtC,IAAIvB,EAAU,IAAIsrC,IAEzB1sC,KAAKgwC,YAAYxtC,IAAIpB,GAC7BsiB,IAAI6kB,GACVA,EAAKuB,QAAQ,CACT54B,WAA2D,QAA9C3X,EAAKgvC,EAAK1+B,QAAQg8B,8BAA2C,IAAPtsC,OAAgB,EAASA,EAAG2X,WAC/F67B,sBAAiJ,QAAzHttB,EAAoD,QAA9CD,EAAK+oB,EAAK1+B,QAAQg8B,8BAA2C,IAAPrmB,OAAgB,EAASA,EAAGq2B,mCAAgD,IAAPp2B,OAAgB,EAASA,EAAGpiB,KAAKmiB,EAAI+oB,IAErM,GA74BL,oBA84BI,WACI,IAAMuN,EAAQ91C,KAAKgqC,WACnB,OAAO8L,GAAQA,EAAM9K,OAAShrC,IACjC,GAj5BL,qBAk5BI,WACI,IAAIzG,EAEJ,OADqByG,KAAK6J,QAAlBzI,WACsC,QAA1B7H,EAAKyG,KAAKgqC,kBAA+B,IAAPzwC,OAAgB,EAASA,EAAGyxC,OAAgBhrC,IACrG,GAt5BL,yBAu5BI,WACI,IAAIzG,EAEJ,OADqByG,KAAK6J,QAAlBzI,SACqC,QAA1B7H,EAAKyG,KAAKgqC,kBAA+B,IAAPzwC,OAAgB,EAASA,EAAGozC,cAAWlzC,CAC/F,GA35BL,sBA45BI,WACI,IAAQ2H,EAAapB,KAAK6J,QAAlBzI,SACR,GAAIA,EACA,OAAOpB,KAAKwW,KAAKw5B,YAAYxtC,IAAIpB,EACxC,GAh6BL,qBAi6BI,WAAiE,6DAAJ,CAAC,EAApD8tC,EAAuD,EAAvDA,WAAYh+B,EAA2C,EAA3CA,WAAY67B,EAA+B,EAA/BA,sBACxB+I,EAAQ91C,KAAKgqC,WACf8L,GACAA,EAAMhM,QAAQ9pC,KAAM+sC,GACpBmC,IACAlvC,KAAK2oC,qBAAkBlvC,EACvBuG,KAAKkvC,YAAa,GAElBh+B,GACAlR,KAAK0lC,WAAW,CAAEx0B,WAAAA,GACzB,GA36BL,sBA46BI,WACI,IAAM4kC,EAAQ91C,KAAKgqC,WACnB,QAAI8L,GACOA,EAAM/L,SAAS/pC,KAK7B,GAp7BL,2BAq7BI,WACI,IAAQ/D,EAAkB+D,KAAK6J,QAAvB5N,cACR,GAAKA,EAAL,CAGA,IAAI85C,GAAY,EAKRnsC,EAAiB3N,EAAjB2N,aAQR,IAPIA,EAAaxB,QACbwB,EAAavB,SACbuB,EAAatB,SACbsB,EAAarB,WACbwtC,GAAY,GAGXA,EAAL,CAIA,IAFA,IAAMC,EAAc,CAAC,EAEZ37B,EAAI,EAAGA,EAAI+zB,GAAc/oC,OAAQgV,IAAK,CAC3C,IAAMvZ,EAAM,SAAWstC,GAAc/zB,GAEjCzQ,EAAa9I,KACbk1C,EAAYl1C,GAAO8I,EAAa9I,GAChC7E,EAAcimC,eAAephC,EAAK,GAEzC,CAKD,IAAK,IAAMA,KAFO,OAAlB7E,QAA4C,IAAlBA,GAAoCA,EAAcY,SAE1Dm5C,EACd/5C,EAAcimC,eAAephC,EAAKk1C,EAAYl1C,IAIlD7E,EAAckoC,gBApBJ,CAhBA,CAqCb,GA79BL,iCA89BI,WAAoC,IAC5B5qC,EAAIimB,EAAIC,EADI/Q,EAAgB,uDAAJ,CAAC,EAGvBunC,EAAS,CAAC,EAChB,IAAKj2C,KAAK4B,UAAY5B,KAAKivC,MACvB,OAAOgH,EACX,IAAKj2C,KAAK8vC,UACN,MAAO,CAAEoG,WAAY,UAGrBD,EAAOC,WAAa,GAExB,IAAMpsC,EAA0D,QAArCvQ,EAAKyG,KAAK6J,QAAQ5N,qBAAkC,IAAP1C,OAAgB,EAASA,EAAGue,WAAWhO,kBAC/G,GAAI9J,KAAKkvC,WAQL,OAPAlvC,KAAKkvC,YAAa,EAClB+G,EAAO9sC,QAAU,GACjB8sC,EAAOE,cACHtmC,GAAmBnB,EAAUynC,gBAAkB,GACnDF,EAAO5xC,UAAYyF,EACbA,EAAkB9J,KAAK4J,aAAc,IACrC,OACCqsC,EAEX,IAAMjL,EAAOhrC,KAAK2zC,UAClB,IAAK3zC,KAAK2oC,kBAAoB3oC,KAAKsD,SAAW0nC,EAAK9/B,OAAQ,CACvD,IAAMkrC,EAAc,CAAC,EAerB,OAdIp2C,KAAK6J,QAAQzI,WACbg1C,EAAYjtC,aACsB1P,IAA9BuG,KAAK4J,aAAaT,QACZnJ,KAAK4J,aAAaT,QAClB,EACVitC,EAAYD,cACRtmC,GAAmBnB,EAAUynC,gBAAkB,IAEnDn2C,KAAK6vC,eAAiB1lC,GAAanK,KAAK4J,gBACxCwsC,EAAY/xC,UAAYyF,EAClBA,EAAkB,CAAC,EAAG,IACtB,OACN9J,KAAK6vC,cAAe,GAEjBuG,CACV,CACD,IAAMC,EAAiBrL,EAAKoC,iBAAmBpC,EAAKphC,aACpD5J,KAAKs2C,0BACLL,EAAO5xC,UAAYspC,GAAyB3tC,KAAKy0C,6BAA8Bz0C,KAAK0oC,UAAW2N,GAC3FvsC,IACAmsC,EAAO5xC,UAAYyF,EAAkBusC,EAAgBJ,EAAO5xC,YAEhE,MAAiBrE,KAAK2oC,gBAAdhlC,EAAR,EAAQA,EAAGC,EAAX,EAAWA,EA+BX,IAAK,IAAM9C,KA9BXm1C,EAAO/rC,gBAAP,UAAuC,IAAXvG,EAAE8I,OAA9B,aAA0D,IAAX7I,EAAE6I,OAAjD,OACIu+B,EAAKoC,gBAKL6I,EAAO9sC,QACH6hC,IAAShrC,KACiG,QAAnGyf,EAAuC,QAAjCD,EAAK62B,EAAeltC,eAA4B,IAAPqW,EAAgBA,EAAKxf,KAAK4J,aAAaT,eAA4B,IAAPsW,EAAgBA,EAAK,EACjIzf,KAAKktC,gBACDltC,KAAK4J,aAAaT,QAClBktC,EAAejL,YAO7B6K,EAAO9sC,QACH6hC,IAAShrC,UACwBvG,IAA3B48C,EAAeltC,QACXktC,EAAeltC,QACf,QAC2B1P,IAA/B48C,EAAejL,YACXiL,EAAejL,YACf,EAKAnoC,EACd,QAA4BxJ,IAAxB48C,EAAev1C,GAAnB,CAEA,MAA6BmC,EAAgBnC,GAArCwnC,EAAR,EAAQA,QAASgC,EAAjB,EAAiBA,QACXiM,EAAYjO,EAAQ+N,EAAev1C,GAAMkqC,GAC/C,GAAIV,EAEA,IADA,IAAMkM,EAAMlM,EAAQjlC,OACXgV,EAAI,EAAGA,EAAIm8B,EAAKn8B,IACrB47B,EAAO3L,EAAQjwB,IAAMk8B,OAIzBN,EAAOn1C,GAAOy1C,CAVN,CAwBhB,OANIv2C,KAAK6J,QAAQzI,WACb60C,EAAOE,cACHnL,IAAShrC,KACH6P,GAAmBnB,EAAUynC,gBAAkB,GAC/C,QAEPF,CACV,GAxkCL,2BAykCI,WACIj2C,KAAKitC,WAAajtC,KAAKmtC,cAAW1zC,CACrC,GA3kCL,uBA6kCI,WACIuG,KAAKwW,KAAKi5B,MAAM1+B,SAAQ,SAACw3B,GAAW,IAAIhvC,EAAI,OAAwC,QAAhCA,EAAKgvC,EAAKja,wBAAqC,IAAP/0B,OAAgB,EAASA,EAAGgyB,MAAS,IACjIvrB,KAAKwW,KAAKi5B,MAAM1+B,QAAQghC,IACxB/xC,KAAKwW,KAAKw5B,YAAYrf,OACzB,KAjlCL,IAmlCH,CACD,SAASsO,GAAasJ,GAClBA,EAAKtJ,cACR,CACD,SAASiT,GAAmB3J,GACxB,IAAIhvC,EAAIimB,EAAIC,EACN0tB,GAAuC,QAA1B5zC,EAAKgvC,EAAK0E,kBAA+B,IAAP1zC,OAAgB,EAASA,EAAG4zC,WAAa5E,EAAK4E,SACnG,GAAI5E,EAAK2B,UACL3B,EAAKjlC,QACL6pC,GACA5E,EAAKkO,aAAa,aAAc,CAChC,MAA2DlO,EAAKjlC,OAA7CA,EAAnB,EAAQg5B,UAAgCoa,EAAxC,EAA2BvD,YACnBvN,EAAkB2C,EAAK1+B,QAAvB+7B,cACFsO,EAAW/G,EAAShiC,SAAWo9B,EAAKjlC,OAAO6H,OAG3B,SAAlBy6B,EACAjM,IAAS,SAACtB,GACN,IAAMse,EAAezC,EACf/G,EAASgG,YAAY9a,GACrB8U,EAAS7Q,UAAUjE,GACnBhzB,EAAS+yB,GAAWue,GAC1BA,EAAapyC,IAAMjB,EAAO+0B,GAAM9zB,IAChCoyC,EAAanyC,IAAMmyC,EAAapyC,IAAMc,CACzC,IAEIqwC,GAA0B9P,EAAeuH,EAAS7Q,UAAWh5B,IAClEq2B,IAAS,SAACtB,GACN,IAAMse,EAAezC,EACf/G,EAASgG,YAAY9a,GACrB8U,EAAS7Q,UAAUjE,GACnBhzB,EAAS+yB,GAAW90B,EAAO+0B,IACjCse,EAAanyC,IAAMmyC,EAAapyC,IAAMc,CACzC,IAEL,IAAMuxC,E5B9oCa,CACvBjzC,EAP2B,CAC3B+0B,UAAW,EACXzyB,MAAO,EACPwG,OAAQ,EACRgsB,YAAa,GAIb70B,EAR2B,CAC3B80B,UAAW,EACXzyB,MAAO,EACPwG,OAAQ,EACRgsB,YAAa,I4BipCTE,GAAaie,EAAatzC,EAAQ6pC,EAAS7Q,WAC3C,IAAMua,E5BhpCa,CACvBlzC,EAP2B,CAC3B+0B,UAAW,EACXzyB,MAAO,EACPwG,OAAQ,EACRgsB,YAAa,GAIb70B,EAR2B,CAC3B80B,UAAW,EACXzyB,MAAO,EACPwG,OAAQ,EACRgsB,YAAa,I4BmpCLyb,EACAvb,GAAake,EAAatO,EAAK0L,eAAeyC,GAAgB,GAAOvJ,EAASgG,aAG9Exa,GAAake,EAAavzC,EAAQ6pC,EAAS7Q,WAE/C,IAAMkD,GAAoB+M,GAAYqK,GAClCnG,GAA2B,EAC/B,IAAKlI,EAAK0E,WAAY,CAClB,IAAM4G,EAAiBtL,EAAKuL,6BAK5B,GAAID,IAAmBA,EAAe5G,WAAY,CAC9C,IAAkB6J,EAAyCjD,EAAnD1G,SAAkC4J,EAAiBlD,EAAzBvwC,OAClC,GAAIwzC,GAAkBC,EAAc,CAChC,IAAMC,E5B7pCD,CACrBrzC,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,I4B+pCrBu0B,GAAqBie,EAAkB7J,EAAS7Q,UAAWwa,EAAexa,WAC1E,IAAM2Y,E5B/pCD,CACrBtxC,EAFsB,CAAEY,IAAK,EAAGC,IAAK,GAGrCZ,EAHsB,CAAEW,IAAK,EAAGC,IAAK,I4BiqCrBu0B,GAAqBkc,EAAgB3xC,EAAQyzC,EAAaza,WACrDkQ,GAAUwK,EAAkB/B,KAC7BxE,GAA2B,EAElC,CACJ,CACJ,CACDlI,EAAKsJ,gBAAgB,YAAa,CAC9BvuC,OAAAA,EACA6pC,SAAAA,EACAxqB,MAAOk0B,EACPD,YAAAA,EACApX,iBAAAA,EACAiR,yBAAAA,GAEP,MACQlI,EAAK2B,WACoC,QAA7CzqB,GAAMD,EAAK+oB,EAAK1+B,SAASiQ,sBAAmC,IAAP2F,GAAyBA,EAAGpiB,KAAKmiB,IAO3F+oB,EAAK1+B,QAAQqH,gBAAazX,CAC7B,CACD,SAASi2C,GAAoBnH,GAKzBA,EAAKuG,oBAAsBvG,EAAKuG,kBAAoB5wC,QAAQqqC,EAAKxsC,QAAUwsC,EAAKxsC,OAAO+yC,oBAIvFvG,EAAKtD,mBAAqBsD,EAAKtD,iBAAmB/mC,QAAQqqC,EAAKxsC,QAAUwsC,EAAKxsC,OAAOkpC,kBACxF,CACD,SAASkN,GAAc5J,GACnBA,EAAK4J,eACR,CACD,SAASJ,GAAkBxJ,GACvBA,EAAKwJ,mBACR,CACD,SAASE,GAAoB1J,GACzB,IAAQtsC,EAAkBssC,EAAK1+B,QAAvB5N,eACc,OAAlBA,QAA4C,IAAlBA,OAA2B,EAASA,EAAc6b,WAAWm/B,wBACvFh7C,EAAce,OAAO,uBAEzBurC,EAAKmG,gBACR,CACD,SAAS6B,GAAgBhI,GACrBA,EAAKgI,kBACLhI,EAAKkL,YAAclL,EAAKqI,eAAiBrI,EAAKr9B,YAASzR,CAC1D,CACD,SAASk2C,GAAmBpH,GACxBA,EAAKoH,oBACR,CACD,SAASC,GAAerH,GACpBA,EAAKqH,gBACR,CACD,SAAS4B,GAAcjJ,GACnBA,EAAKiJ,eACR,CACD,SAASY,GAAoB0D,GACzBA,EAAMoB,oBACT,CACD,SAAS7B,GAAah2B,EAAQsD,EAAO3nB,GACjCqkB,EAAOqZ,UAAY3oB,GAAI4S,EAAM+V,UAAW,EAAG19B,GAC3CqkB,EAAOpZ,MAAQ8J,GAAI4S,EAAM1c,MAAO,EAAGjL,GACnCqkB,EAAO5S,OAASkW,EAAMlW,OACtB4S,EAAOoZ,YAAc9V,EAAM8V,WAC9B,CACD,SAAS0e,GAAQ93B,EAAQ2F,EAAM3E,EAAIrlB,GAC/BqkB,EAAO9a,IAAMwL,GAAIiV,EAAKzgB,IAAK8b,EAAG9b,IAAKvJ,GACnCqkB,EAAO7a,IAAMuL,GAAIiV,EAAKxgB,IAAK6b,EAAG7b,IAAKxJ,EACtC,CACD,SAASu6C,GAAOl2B,EAAQ2F,EAAM3E,EAAIrlB,GAC9Bm8C,GAAQ93B,EAAO1b,EAAGqhB,EAAKrhB,EAAG0c,EAAG1c,EAAG3I,GAChCm8C,GAAQ93B,EAAOzb,EAAGohB,EAAKphB,EAAGyc,EAAGzc,EAAG5I,EACnC,CACD,SAASm6C,GAAoB5M,GACzB,OAAQA,EAAK6E,sBAAwD3zC,IAArC8uC,EAAK6E,gBAAgBhC,WACxD,CACD,IAAM0F,GAA0B,CAC5BrwB,SAAU,IACVD,KAAM,CAAC,GAAK,EAAG,GAAK,IAExB,SAASwxB,GAAezJ,EAAMoG,GAM1B,IADA,IAAIyI,EAAa7O,EAAK/xB,KACb6D,EAAIkuB,EAAK0H,KAAK5qC,OAAS,EAAGgV,GAAK,EAAGA,IACvC,GAAInc,QAAQqqC,EAAK0H,KAAK51B,GAAGzY,UAAW,CAChCw1C,EAAa7O,EAAK0H,KAAK51B,GACvB,KACH,CAEL,IACM5L,GADgB2oC,GAAcA,IAAe7O,EAAK/xB,KAAO4gC,EAAWx1C,SAAWvG,UACvDg8C,cAAd,+BAAoD1I,EAApD,OACZlgC,GACA85B,EAAK1mC,MAAM4M,GAAS,EAC3B,CACD,SAAS6oC,GAAUjf,GACfA,EAAK9zB,IAAME,KAAK2B,MAAMiyB,EAAK9zB,KAC3B8zB,EAAK7zB,IAAMC,KAAK2B,MAAMiyB,EAAK7zB,IAC9B,CACD,SAAS0uC,GAAS5Y,GACdgd,GAAUhd,EAAI32B,GACd2zC,GAAUhd,EAAI12B,EACjB,CACD,SAAS8xC,GAA0B9P,EAAeuH,EAAU7pC,GACxD,MAA0B,aAAlBsiC,GACe,oBAAlBA,IACItN,GAAOmU,GAAYU,GAAWV,GAAYnpC,GAAS,GAC/D,CC5xCD,IAAMi0C,GAAyBlJ,GAAqB,CAChDC,qBAAsB,SAACpxC,EAAKF,GAAN,OAAiB0U,GAAYxU,EAAK,SAAUF,EAA5C,EACtBwxC,cAAe,iBAAO,CAClB7qC,EAAGtI,SAASm8C,gBAAgBC,YAAcp8C,SAASq8C,KAAKD,WACxD7zC,EAAGvI,SAASm8C,gBAAgBG,WAAat8C,SAASq8C,KAAKC,UAF5C,EAIflJ,kBAAmB,kBAAM,CAAN,ICNjB5Q,GAAqB,CACvBrhC,aAAS/C,GAEPm+C,GAAqBvJ,GAAqB,CAC5CG,cAAe,SAAC5sC,GAAD,MAAe,CAC1B+B,EAAG/B,EAAS61C,WACZ7zC,EAAGhC,EAAS+1C,UAFD,EAIfpJ,cAAe,WACX,IAAK1Q,GAAmBrhC,QAAS,CAC7B,IAAMq7C,EAAe,IAAIN,GAAuB,EAAG,CAAC,GACpDM,EAAah2C,MAAMzI,QACnBy+C,EAAanS,WAAW,CAAED,cAAc,IACxC5H,GAAmBrhC,QAAUq7C,CAChC,CACD,OAAOha,GAAmBrhC,OAC7B,EACDkyC,eAAgB,SAAC9sC,EAAUhH,GACvBgH,EAASmI,MAAM1F,eAAsB5K,IAAVmB,EAAsBA,EAAQ,MAC5D,EACD6zC,kBAAmB,SAAC7sC,GAAD,OAAc1D,QAAuD,UAA/C9E,OAAOsnC,iBAAiB9+B,GAAUk2C,SAAxD,ICbjBC,IAAgB,kCACfllB,IACAva,IACAnZ,IACAqrC,IAQDwN,GAAuB/1C,GAAkB,SAACtG,EAAWuU,GAAZ,OCjB/C,SAA+BvU,EAA/B,EAA0E8E,EAAmB3E,EAAqB4E,GAA2B,QAAjG4L,mBAAAA,OAAiG,SACnI2rC,EAAap1C,EAAelH,GAC5B0V,GACAI,GACN,yBACOwmC,GADP,IAEIx3C,kBAAAA,EACAE,UAAWsN,GAAgB3B,GAC3BxQ,oBAAAA,EACA4E,0BAAAA,EACA/E,UAAAA,GAEP,CDKqEu8C,CAAsBv8C,EAAWuU,EAAQ6nC,GAAe7P,GAAwB0P,GAAvG,G","sources":["../node_modules/react-use/esm/misc/util.js","../node_modules/react-use/esm/useMedia.js","../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/node/id.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/VisualElementHandler.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/style-value-types/dist/es/utils.mjs","../node_modules/style-value-types/dist/es/numbers/units.mjs","../node_modules/style-value-types/dist/es/numbers/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/utils/types.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/use-dom-event.mjs","../node_modules/framer-motion/dist/es/gestures/utils/event-type.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/use-pointer-event.mjs","../node_modules/framer-motion/dist/es/events/utils.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/gestures/use-hover-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/warn-once.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/use-viewport.mjs","../node_modules/framer-motion/dist/es/motion/utils/make-renderless-component.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/use-tap-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/use-focus-gesture.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/utils/easing.mjs","../node_modules/style-value-types/dist/es/color/utils.mjs","../node_modules/style-value-types/dist/es/color/rgba.mjs","../node_modules/style-value-types/dist/es/color/hex.mjs","../node_modules/style-value-types/dist/es/color/hsla.mjs","../node_modules/style-value-types/dist/es/color/index.mjs","../node_modules/style-value-types/dist/es/complex/index.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/style-value-types/dist/es/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framesync/dist/es/on-next-frame.mjs","../node_modules/framesync/dist/es/index.mjs","../node_modules/framesync/dist/es/create-render-step.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/render/utils/animation.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/use-pan-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/drag/use-drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/index.mjs","../node_modules/framer-motion/dist/es/animation/animate.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["export var noop = function () { };\nexport function on(obj) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    if (obj && obj.addEventListener) {\n        obj.addEventListener.apply(obj, args);\n    }\n}\nexport function off(obj) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    if (obj && obj.removeEventListener) {\n        obj.removeEventListener.apply(obj, args);\n    }\n}\nexport var isBrowser = typeof window !== 'undefined';\nexport var isNavigator = typeof navigator !== 'undefined';\n","import { useEffect, useState } from 'react';\nimport { isBrowser } from './misc/util';\nvar getInitialState = function (query, defaultState) {\n    // Prevent a React hydration mismatch when a default value is provided by not defaulting to window.matchMedia(query).matches.\n    if (defaultState !== undefined) {\n        return defaultState;\n    }\n    if (isBrowser) {\n        return window.matchMedia(query).matches;\n    }\n    // A default value has not been provided, and you are rendering on the server, warn of a possible hydration mismatch when defaulting to false.\n    if (process.env.NODE_ENV !== 'production') {\n        console.warn('`useMedia` When server side rendering, defaultState should be defined to prevent a hydration mismatches.');\n    }\n    return false;\n};\nvar useMedia = function (query, defaultState) {\n    var _a = useState(getInitialState(query, defaultState)), state = _a[0], setState = _a[1];\n    useEffect(function () {\n        var mounted = true;\n        var mql = window.matchMedia(query);\n        var onChange = function () {\n            if (!mounted) {\n                return;\n            }\n            setState(!!mql.matches);\n        };\n        mql.addListener(onChange);\n        setState(mql.matches);\n        return function () {\n            mounted = false;\n            mql.removeListener(onChange);\n        };\n    }, [query]);\n    return state;\n};\nexport default useMedia;\n","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext, useContext } from 'react';\n\nconst MotionContext = createContext({});\nfunction useVisualElementContext() {\n    return useContext(MotionContext).visualElement;\n}\n\nexport { MotionContext, useVisualElementContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useVisualElementContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const parent = useVisualElementContext();\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceId: presenceContext ? presenceContext.id : undefined,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useIsomorphicLayoutEffect(() => () => visualElement && visualElement.notify(\"Unmount\"), []);\n    return visualElement;\n}\n\nexport { useVisualElement };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\n\nconst variantProps = [\n    \"initial\",\n    \"animate\",\n    \"exit\",\n    \"whileHover\",\n    \"whileDrag\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileInView\",\n];\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const createDefinition = (propNames) => ({\n    isEnabled: (props) => propNames.some((name) => !!props[name]),\n});\nconst featureDefinitions = {\n    measureLayout: createDefinition([\"layout\", \"layoutId\", \"drag\"]),\n    animation: createDefinition([\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n        \"whileInView\",\n    ]),\n    exit: createDefinition([\"exit\"]),\n    drag: createDefinition([\"drag\", \"dragControls\"]),\n    focus: createDefinition([\"whileFocus\"]),\n    hover: createDefinition([\"whileHover\", \"onHoverStart\", \"onHoverEnd\"]),\n    tap: createDefinition([\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"]),\n    pan: createDefinition([\n        \"onPan\",\n        \"onPanStart\",\n        \"onPanSessionStart\",\n        \"onPanEnd\",\n    ]),\n    inView: createDefinition([\n        \"whileInView\",\n        \"onViewportEnter\",\n        \"onViewportLeave\",\n    ]),\n};\n\nexport { featureDefinitions };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import React__default from 'react';\n\nclass VisualElementHandler extends React__default.Component {\n    /**\n     * Update visual element props as soon as we know this update is going to be commited.\n     */\n    getSnapshotBeforeUpdate() {\n        const { visualElement, props } = this.props;\n        if (visualElement)\n            visualElement.setProps(props);\n        return null;\n    }\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\n\nexport { VisualElementHandler };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { VisualElementHandler } from './utils/VisualElementHandler.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, projectionNodeConstructor, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        let features = null;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        /**\n         *\n         */\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const lazyStrictMode = useContext(LazyContext).strict;\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            if (context.visualElement) {\n                features = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, lazyStrictMode, preloadedFeatures, projectionId, projectionNodeConstructor ||\n                    featureDefinitions.projectionNodeConstructor, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(VisualElementHandler, { visualElement: context.visualElement, props: configAndProps },\n            features,\n            React.createElement(MotionContext.Provider, { value: context }, useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement))));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        if (key === \"projectionNodeConstructor\") {\n            featureDefinitions.projectionNodeConstructor = features[key];\n        }\n        else {\n            featureDefinitions[key].Component = features[key];\n        }\n    }\n}\n\nexport { loadFeatures };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => !!(value === null || value === void 0 ? void 0 : value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\n/**\n * A function to use with Array.sort to sort transform keys by their default order.\n */\nconst sortTransformProps = (a, b) => transformPropOrder.indexOf(a) - transformPropOrder.indexOf(b);\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform({ transform, transformKeys, }, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    // Transform keys into their default order - this will determine the output order.\n    transformKeys.sort(sortTransformProps);\n    // Loop over each transform and build them into transformString\n    for (const key of transformKeys) {\n        transformString += `${translateAlias[key] || key}(${transform[key]}) `;\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Returns true if the provided key is a CSS variable\n */\nfunction isCSSVariable(key) {\n    return key.startsWith(\"--\");\n}\n\nexport { isCSSVariable };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max) => (v) => Math.max(Math.min(v, max), min);\nconst sanitize = (v) => (v % 1 ? Number(v.toFixed(5)) : v);\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{6}|#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === 'string';\n}\n\nexport { clamp, colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(' ').length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType('deg');\nconst percent = createUnitType('%');\nconst px = createUnitType('px');\nconst vh = createUnitType('vh');\nconst vw = createUnitType('vw');\nconst progressPercentage = Object.assign(Object.assign({}, percent), { parse: (v) => percent.parse(v) / 100, transform: (v) => percent.transform(v * 100) });\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { clamp } from '../utils.mjs';\n\nconst number = {\n    test: (v) => typeof v === 'number',\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = Object.assign(Object.assign({}, number), { transform: clamp(0, 1) });\nconst scale = Object.assign(Object.assign({}, number), { default: 1 });\n\nexport { alpha, number, scale };\n","import { number } from 'style-value-types';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { px, degrees, scale, alpha, progressPercentage } from 'style-value-types';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariable } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformKeys, transformOrigin } = state;\n    transformKeys.length = 0;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariable(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            transformKeys.push(key);\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformKeys: [],\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","const animationProps = [\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileDrag\",\n    \"whileInView\",\n];\nconst tapProps = [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"];\nconst panProps = [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"];\nconst inViewProps = [\n    \"whileInView\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"viewport\",\n];\n/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"layout\",\n    \"layoutId\",\n    \"layoutDependency\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"drag\",\n    \"dragControls\",\n    \"dragListener\",\n    \"dragConstraints\",\n    \"dragDirectionLock\",\n    \"dragSnapToOrigin\",\n    \"_dragX\",\n    \"_dragY\",\n    \"dragElastic\",\n    \"dragMomentum\",\n    \"dragPropagation\",\n    \"dragTransition\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"layoutScroll\",\n    ...inViewProps,\n    ...tapProps,\n    ...animationProps,\n    ...panProps,\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return validMotionProps.has(key);\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from 'style-value-types';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from 'style-value-types';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\n\nfunction useSVGProps(props, visualState) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, elementProps);\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) || isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props) {\n    const newValues = scrapeMotionValuesFromProps$1(props);\n    for (const key in props) {\n        if (isMotionValue(props[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props);\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","var AnimationType;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"InView\"] = \"whileInView\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(AnimationType || (AnimationType = {}));\n\nexport { AnimationType };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useEffect } from 'react';\n\nfunction addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n/**\n * Attaches an event listener directly to the provided DOM element.\n *\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\n * event handlers.\n *\n * ```jsx\n * const ref = useRef(null)\n *\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\n *\n * return <div ref={ref} />\n * ```\n *\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\n * @param eventName - Name of the event you want listen for.\n * @param handler - Function to fire when receiving the event.\n * @param options - Options to pass to `Event.addEventListener`.\n *\n * @public\n */\nfunction useDomEvent(ref, eventName, handler, options) {\n    useEffect(() => {\n        const element = ref.current;\n        if (handler && element) {\n            return addDomEvent(element, eventName, handler, options);\n        }\n    }, [ref, eventName, handler, options]);\n}\n\nexport { addDomEvent, useDomEvent };\n","function isMouseEvent(event) {\n    // PointerEvent inherits from MouseEvent so we can't use a straight instanceof check.\n    if (typeof PointerEvent !== \"undefined\" && event instanceof PointerEvent) {\n        return !!(event.pointerType === \"mouse\");\n    }\n    return event instanceof MouseEvent;\n}\nfunction isTouchEvent(event) {\n    const hasTouches = !!event.touches;\n    return hasTouches;\n}\n\nexport { isMouseEvent, isTouchEvent };\n","import { isTouchEvent } from '../gestures/utils/event-type.mjs';\n\n/**\n * Filters out events not attached to the primary pointer (currently left mouse button)\n * @param eventHandler\n */\nfunction filterPrimaryPointer(eventHandler) {\n    return (event) => {\n        const isMouseEvent = event instanceof MouseEvent;\n        const isPrimaryPointer = !isMouseEvent ||\n            (isMouseEvent && event.button === 0);\n        if (isPrimaryPointer) {\n            eventHandler(event);\n        }\n    };\n}\nconst defaultPagePoint = { pageX: 0, pageY: 0 };\nfunction pointFromTouch(e, pointType = \"page\") {\n    const primaryTouch = e.touches[0] || e.changedTouches[0];\n    const point = primaryTouch || defaultPagePoint;\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction pointFromMouse(point, pointType = \"page\") {\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: isTouchEvent(event)\n            ? pointFromTouch(event, pointType)\n            : pointFromMouse(event, pointType),\n    };\n}\nconst wrapHandler = (handler, shouldFilterPrimaryPointer = false) => {\n    const listener = (event) => handler(event, extractEventInfo(event));\n    return shouldFilterPrimaryPointer\n        ? filterPrimaryPointer(listener)\n        : listener;\n};\n\nexport { extractEventInfo, wrapHandler };\n","import { addDomEvent, useDomEvent } from './use-dom-event.mjs';\nimport { wrapHandler } from './event-info.mjs';\nimport { supportsPointerEvents, supportsTouchEvents, supportsMouseEvents } from './utils.mjs';\n\nconst mouseEventNames = {\n    pointerdown: \"mousedown\",\n    pointermove: \"mousemove\",\n    pointerup: \"mouseup\",\n    pointercancel: \"mousecancel\",\n    pointerover: \"mouseover\",\n    pointerout: \"mouseout\",\n    pointerenter: \"mouseenter\",\n    pointerleave: \"mouseleave\",\n};\nconst touchEventNames = {\n    pointerdown: \"touchstart\",\n    pointermove: \"touchmove\",\n    pointerup: \"touchend\",\n    pointercancel: \"touchcancel\",\n};\nfunction getPointerEventName(name) {\n    if (supportsPointerEvents()) {\n        return name;\n    }\n    else if (supportsTouchEvents()) {\n        return touchEventNames[name];\n    }\n    else if (supportsMouseEvents()) {\n        return mouseEventNames[name];\n    }\n    return name;\n}\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, getPointerEventName(eventName), wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\nfunction usePointerEvent(ref, eventName, handler, options) {\n    return useDomEvent(ref, getPointerEventName(eventName), handler && wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\n\nexport { addPointerEvent, usePointerEvent };\n","import { isBrowser } from '../utils/is-browser.mjs';\n\n// We check for event support via functions in case they've been mocked by a testing suite.\nconst supportsPointerEvents = () => isBrowser && window.onpointerdown === null;\nconst supportsTouchEvents = () => isBrowser && window.ontouchstart === null;\nconst supportsMouseEvents = () => isBrowser && window.onmousedown === null;\n\nexport { supportsMouseEvents, supportsPointerEvents, supportsTouchEvents };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","import { isMouseEvent } from './utils/event-type.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\n\nfunction createHoverEvent(visualElement, isActive, callback) {\n    return (event, info) => {\n        if (!isMouseEvent(event) || isDragActive())\n            return;\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Hover, isActive);\n        }\n        callback && callback(event, info);\n    };\n}\nfunction useHoverGesture({ onHoverStart, onHoverEnd, whileHover, visualElement, }) {\n    usePointerEvent(visualElement, \"pointerenter\", onHoverStart || whileHover\n        ? createHoverEvent(visualElement, true, onHoverStart)\n        : undefined, { passive: !onHoverStart });\n    usePointerEvent(visualElement, \"pointerleave\", onHoverEnd || whileHover\n        ? createHoverEvent(visualElement, false, onHoverEnd)\n        : undefined, { passive: !onHoverEnd });\n}\n\nexport { useHoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const warned = new Set();\nfunction warnOnce(condition, message, element) {\n    if (condition || warned.has(message))\n        return;\n    console.warn(message);\n    if (element)\n        console.warn(element);\n    warned.add(message);\n}\n\nexport { warnOnce };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { env } from '../../../utils/process.mjs';\nimport { useRef, useEffect } from 'react';\nimport { AnimationType } from '../../../render/utils/types.mjs';\nimport { warnOnce } from '../../../utils/warn-once.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nfunction useViewport({ visualElement, whileInView, onViewportEnter, onViewportLeave, viewport = {}, }) {\n    const state = useRef({\n        hasEnteredView: false,\n        isInView: false,\n    });\n    let shouldObserve = Boolean(whileInView || onViewportEnter || onViewportLeave);\n    if (viewport.once && state.current.hasEnteredView)\n        shouldObserve = false;\n    const useObserver = typeof IntersectionObserver === \"undefined\"\n        ? useMissingIntersectionObserver\n        : useIntersectionObserver;\n    useObserver(shouldObserve, state.current, visualElement, viewport);\n}\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nfunction useIntersectionObserver(shouldObserve, state, visualElement, { root, margin: rootMargin, amount = \"some\", once }) {\n    useEffect(() => {\n        if (!shouldObserve || !visualElement.current)\n            return;\n        const options = {\n            root: root === null || root === void 0 ? void 0 : root.current,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const intersectionCallback = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (state.isInView === isIntersecting)\n                return;\n            state.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && state.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                state.hasEnteredView = true;\n            }\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const props = visualElement.getProps();\n            const callback = isIntersecting\n                ? props.onViewportEnter\n                : props.onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(visualElement.current, options, intersectionCallback);\n    }, [shouldObserve, root, rootMargin, amount]);\n}\n/**\n * If IntersectionObserver is missing, we activate inView and fire onViewportEnter\n * on mount. This way, the page will be in the state the author expects users\n * to see it in for everyone.\n */\nfunction useMissingIntersectionObserver(shouldObserve, state, visualElement, { fallback = true }) {\n    useEffect(() => {\n        if (!shouldObserve || !fallback)\n            return;\n        if (env !== \"production\") {\n            warnOnce(false, \"IntersectionObserver not available on this device. whileInView animations will trigger on mount.\");\n        }\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         *\n         * This hook should be quite rarely called so setting this in an rAF\n         * is preferred to changing the behaviour of the animation state.\n         */\n        requestAnimationFrame(() => {\n            state.hasEnteredView = true;\n            const { onViewportEnter } = visualElement.getProps();\n            onViewportEnter && onViewportEnter(null);\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, true);\n            }\n        });\n    }, [shouldObserve]);\n}\n\nexport { useViewport };\n","const makeRenderlessComponent = (hook) => (props) => {\n    hook(props);\n    return null;\n};\n\nexport { makeRenderlessComponent };\n","import { useFocusGesture } from '../../gestures/use-focus-gesture.mjs';\nimport { useHoverGesture } from '../../gestures/use-hover-gesture.mjs';\nimport { useTapGesture } from '../../gestures/use-tap-gesture.mjs';\nimport { useViewport } from './viewport/use-viewport.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst gestureAnimations = {\n    inView: makeRenderlessComponent(useViewport),\n    tap: makeRenderlessComponent(useTapGesture),\n    focus: makeRenderlessComponent(useFocusGesture),\n    hover: makeRenderlessComponent(useHoverGesture),\n};\n\nexport { gestureAnimations };\n","import { useRef } from 'react';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { usePointerEvent, addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\n/**\n * @param handlers -\n * @internal\n */\nfunction useTapGesture({ onTap, onTapStart, onTapCancel, whileTap, visualElement, }) {\n    const hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n    const isPressing = useRef(false);\n    const cancelPointerEndListeners = useRef(null);\n    /**\n     * Only set listener to passive if there are no external listeners.\n     */\n    const eventOptions = {\n        passive: !(onTapStart || onTap || onTapCancel || onPointerDown),\n    };\n    function removePointerEndListener() {\n        cancelPointerEndListeners.current && cancelPointerEndListeners.current();\n        cancelPointerEndListeners.current = null;\n    }\n    function checkPointerEnd() {\n        removePointerEndListener();\n        isPressing.current = false;\n        visualElement.animationState &&\n            visualElement.animationState.setActive(AnimationType.Tap, false);\n        return !isDragActive();\n    }\n    function onPointerUp(event, info) {\n        if (!checkPointerEnd())\n            return;\n        /**\n         * We only count this as a tap gesture if the event.target is the same\n         * as, or a child of, this component's element\n         */\n        !isNodeOrChild(visualElement.current, event.target)\n            ? onTapCancel && onTapCancel(event, info)\n            : onTap && onTap(event, info);\n    }\n    function onPointerCancel(event, info) {\n        if (!checkPointerEnd())\n            return;\n        onTapCancel && onTapCancel(event, info);\n    }\n    function onPointerDown(event, info) {\n        removePointerEndListener();\n        if (isPressing.current)\n            return;\n        isPressing.current = true;\n        cancelPointerEndListeners.current = pipe(addPointerEvent(window, \"pointerup\", onPointerUp, eventOptions), addPointerEvent(window, \"pointercancel\", onPointerCancel, eventOptions));\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        visualElement.animationState &&\n            visualElement.animationState.setActive(AnimationType.Tap, true);\n        onTapStart && onTapStart(event, info);\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? onPointerDown : undefined, eventOptions);\n    useUnmountEffect(removePointerEndListener);\n}\n\nexport { useTapGesture };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { useDomEvent } from '../events/use-dom-event.mjs';\n\n/**\n *\n * @param props\n * @param ref\n * @internal\n */\nfunction useFocusGesture({ whileFocus, visualElement, }) {\n    const { animationState } = visualElement;\n    const onFocus = () => {\n        animationState && animationState.setActive(AnimationType.Focus, true);\n    };\n    const onBlur = () => {\n        animationState && animationState.setActive(AnimationType.Focus, false);\n    };\n    useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n    useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\n\nexport { useFocusGesture };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    // Replace with useId when released in React\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst createBackIn = (power = 1.525) => (p) => p * p * ((power + 1) * p - power);\nconst backIn = createBackIn();\nconst backOut = reverseEasing(backIn);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut, createBackIn };\n","import { createBackIn } from './back.mjs';\n\nconst createAnticipate = (power) => {\n    const backEasing = createBackIn(power);\n    return (p) => (p *= 2) < 1\n        ? 0.5 * backEasing(p)\n        : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n};\nconst anticipate = createAnticipate();\n\nexport { anticipate };\n","import { invariant } from 'hey-listen';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { number, alpha } from '../numbers/index.mjs';\nimport { sanitize, clamp } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = clamp(0, 255);\nconst rgbUnit = Object.assign(Object.assign({}, number), { transform: (v) => Math.round(clampRgbUnit(v)) });\nconst rgba = {\n    test: isColorString('rgb', 'red'),\n    parse: splitColor('red', 'green', 'blue'),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => 'rgba(' +\n        rgbUnit.transform(red) +\n        ', ' +\n        rgbUnit.transform(green) +\n        ', ' +\n        rgbUnit.transform(blue) +\n        ', ' +\n        sanitize(alpha.transform(alpha$1)) +\n        ')',\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = '';\n    let g = '';\n    let b = '';\n    let a = '';\n    if (v.length > 5) {\n        r = v.substr(1, 2);\n        g = v.substr(3, 2);\n        b = v.substr(5, 2);\n        a = v.substr(7, 2);\n    }\n    else {\n        r = v.substr(1, 1);\n        g = v.substr(2, 1);\n        b = v.substr(3, 1);\n        a = v.substr(4, 1);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString('#'),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString('hsl', 'hue'),\n    parse: splitColor('hue', 'saturation', 'lightness'),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return ('hsla(' +\n            Math.round(hue) +\n            ', ' +\n            percent.transform(sanitize(saturation)) +\n            ', ' +\n            percent.transform(sanitize(lightness)) +\n            ', ' +\n            sanitize(alpha.transform(alpha$1)) +\n            ')');\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty('red')\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = '${c}';\nconst numberToken = '${n}';\nfunction test(v) {\n    var _a, _b, _c, _d;\n    return (isNaN(v) &&\n        isString(v) &&\n        ((_b = (_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0) + ((_d = (_c = v.match(colorRegex)) === null || _c === void 0 ? void 0 : _c.length) !== null && _d !== void 0 ? _d : 0) > 0);\n}\nfunction analyse(v) {\n    if (typeof v === 'number')\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, tokenised: v };\n}\nfunction parse(v) {\n    return analyse(v).values;\n}\nfunction createTransformer(v) {\n    const { values, numColors, tokenised } = analyse(v);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors ? color.transform(v[i]) : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === 'number' ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { complex };\n","import { complex } from 'style-value-types';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { isKeyframesTarget } from './is-keyframes-target.mjs';\n\nconst underDampedSpring = () => ({\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n});\nconst criticallyDampedSpring = (to) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: to === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst linearTween = () => ({\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3,\n});\nconst keyframes = (values) => ({\n    type: \"keyframes\",\n    duration: 0.8,\n    values,\n});\nconst defaultTransitions = {\n    x: underDampedSpring,\n    y: underDampedSpring,\n    z: underDampedSpring,\n    rotate: underDampedSpring,\n    rotateX: underDampedSpring,\n    rotateY: underDampedSpring,\n    rotateZ: underDampedSpring,\n    scaleX: criticallyDampedSpring,\n    scaleY: criticallyDampedSpring,\n    scale: criticallyDampedSpring,\n    opacity: linearTween,\n    backgroundColor: linearTween,\n    color: linearTween,\n    default: criticallyDampedSpring,\n};\nconst getDefaultTransition = (valueKey, to) => {\n    let transitionFactory;\n    if (isKeyframesTarget(to)) {\n        transitionFactory = keyframes;\n    }\n    else {\n        transitionFactory =\n            defaultTransitions[valueKey] || defaultTransitions.default;\n    }\n    return { to, ...transitionFactory(to) };\n};\n\nexport { criticallyDampedSpring, getDefaultTransition, linearTween, underDampedSpring };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\nconst maxDefaults = new Set(['brightness', 'contrast', 'saturate', 'opacity']);\nfunction applyDefaultFilter(v) {\n    let [name, value] = v.slice(0, -1).split('(');\n    if (name === 'drop-shadow')\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, '');\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + '(' + defaultValue + unit + ')';\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = Object.assign(Object.assign({}, complex), { getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(' ') : v;\n    } });\n\nexport { filter };\n","import { color, filter } from 'style-value-types';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { filter, complex } from 'style-value-types';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    var _a;\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);\n}\n\nexport { getAnimatableNone };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const defaultTimestep = (1 / 60) * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\"\n    ? () => performance.now()\n    : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\"\n    ? (callback) => window.requestAnimationFrame(callback)\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\n\nexport { defaultTimestep, onNextFrame };\n","import { onNextFrame, defaultTimestep } from './on-next-frame.mjs';\nimport { createRenderStep } from './create-render-step.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst frame = {\n    delta: 0,\n    timestamp: 0,\n};\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frame);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frame);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frame.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frame.timestamp, maxElapsed), 1);\n    frame.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\nconst getFrameData = () => frame;\n\nexport default sync;\nexport { cancelSync, flushSync, getFrameData };\n","function createRenderStep(runNextFrame) {\n    let toRun = [];\n    let toRunNextFrame = [];\n    let numToRun = 0;\n    let isProcessing = false;\n    let flushNextFrame = false;\n    const toKeepAlive = new WeakSet();\n    const step = {\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        process: (frameData) => {\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            toRunNextFrame.length = 0;\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import sync, { cancelSync } from 'framesync';\n\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { rgba, hsla, hex } from 'style-value-types';\nimport { invariant } from 'hey-listen';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { complex, color } from 'style-value-types';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from 'hey-listen';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\n/**\n * TODO: Combine with function within complex when style-value-types moved inside Framer Motion\n */\nfunction analyse(value) {\n    const parsed = complex.parse(value);\n    const numValues = parsed.length;\n    let numNumbers = 0;\n    let numColors = 0;\n    for (let i = 0; i < numValues; i++) {\n        // Parsed complex values return with colors first, so if we've seen any number\n        // we're already past that part of the array and don't need to continue running typeof\n        if (numNumbers || typeof parsed[i] === \"number\") {\n            numNumbers++;\n        }\n        else {\n            numColors++;\n        }\n    }\n    return { parsed, numNumbers, numColors };\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyse(origin);\n    const targetStats = analyse(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.parsed, targetStats.parsed), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from 'hey-listen';\nimport { color } from 'style-value-types';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    const numValues = values.length;\n    return values.map((_value, i) => i !== 0 ? i / (numValues - 1) : 0);\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\nfunction keyframes({ from = 0, to = 1, ease, offset, duration = 300, }) {\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: from };\n    /**\n     * Convert values to an array if they've been given as from/to options\n     */\n    const values = Array.isArray(to) ? to : [from, to];\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const times = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    offset && offset.length === values.length\n        ? offset\n        : defaultOffset(values), duration);\n    function createInterpolator() {\n        return interpolate(times, values, {\n            ease: Array.isArray(ease) ? ease : defaultEasing(values, ease),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            values.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };\n","import { warning } from 'hey-listen';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ from = 0.0, to = 1.0, restSpeed = 2, restDelta = 0.01, ...options }) {\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: from };\n    let { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let resolveVelocity = zero;\n    function createSpring() {\n        const initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n        const initialDelta = to - from;\n        const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working within what looks like a 0-1 range, change the default restDelta\n         * to 0.01\n         */\n        if (restDelta === undefined) {\n            restDelta = Math.min(Math.abs(to - from) / 100, 0.4);\n        }\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (to -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n            resolveVelocity = (t) => {\n                // TODO Resolve these calculations with the above\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (dampingRatio *\n                    undampedAngularFreq *\n                    envelope *\n                    ((Math.sin(angularFreq * t) *\n                        (initialVelocity +\n                            dampingRatio *\n                                undampedAngularFreq *\n                                initialDelta)) /\n                        angularFreq +\n                        initialDelta * Math.cos(angularFreq * t)) -\n                    envelope *\n                        (Math.cos(angularFreq * t) *\n                            (initialVelocity +\n                                dampingRatio *\n                                    undampedAngularFreq *\n                                    initialDelta) -\n                            angularFreq *\n                                initialDelta *\n                                Math.sin(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => to -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (to -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                const currentVelocity = resolveVelocity(t) * 1000;\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(to - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? to : current;\n            return state;\n        },\n        flipTarget: () => {\n            velocity = -velocity;\n            [from, to] = [to, from];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport sync, { cancelSync } from 'framesync';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = { decay, keyframes, spring };\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animate({ from, autoplay = true, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    var _a, _b;\n    let { to } = options;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = options\n        .duration;\n    let latest;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[Array.isArray(to) ? \"keyframes\" : type];\n    if ((_b = (_a = animator).needsInterpolation) === null || _b === void 0 ? void 0 : _b.call(_a, from, to)) {\n        interpolateFromNumber = interpolate([0, 100], [from, to], {\n            clamp: false,\n        });\n        from = 0;\n        to = 100;\n    }\n    const animation = animator({ ...options, from, to });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            const state = animation.next(Math.max(0, elapsed));\n            latest = state.value;\n            if (interpolateFromNumber)\n                latest = interpolateFromNumber(latest);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(latest);\n        if (isComplete) {\n            if (repeatCount === 0)\n                computedDuration !== null && computedDuration !== void 0 ? computedDuration : (computedDuration = elapsed);\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay === null || onPlay === void 0 ? void 0 : onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop === null || onStop === void 0 ? void 0 : onStop();\n            driverControls.stop();\n        },\n    };\n}\n\nexport { animate, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","function decay({ velocity = 0, from = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: from };\n    let amplitude = power * velocity;\n    const ideal = from + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - from;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from './easing.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { getDefaultTransition } from './default-transitions.mjs';\nimport { warning } from 'hey-listen';\nimport { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { inertia } from '../legacy-popmotion/inertia.mjs';\nimport { animate } from '../legacy-popmotion/index.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nlet legacyRepeatWarning = false;\n/**\n * Convert Framer Motion's Transition type into Popmotion-compatible options.\n */\nfunction convertTransitionToAnimationOptions({ ease, times, yoyo, flip, loop, ...transition }) {\n    const options = { ...transition };\n    if (times)\n        options[\"offset\"] = times;\n    /**\n     * Convert any existing durations from seconds to milliseconds\n     */\n    if (transition.duration)\n        options[\"duration\"] = secondsToMilliseconds(transition.duration);\n    if (transition.repeatDelay)\n        options.repeatDelay = secondsToMilliseconds(transition.repeatDelay);\n    /**\n     * Map easing names to Popmotion's easing functions\n     */\n    if (ease) {\n        options[\"ease\"] = isEasingArray(ease)\n            ? ease.map(easingDefinitionToFunction)\n            : easingDefinitionToFunction(ease);\n    }\n    /**\n     * Support legacy transition API\n     */\n    if (transition.type === \"tween\")\n        options.type = \"keyframes\";\n    /**\n     * TODO: These options are officially removed from the API.\n     */\n    if (yoyo || loop || flip) {\n        warning(!legacyRepeatWarning, \"yoyo, loop and flip have been removed from the API. Replace with repeat and repeatType options.\");\n        legacyRepeatWarning = true;\n        if (yoyo) {\n            options.repeatType = \"reverse\";\n        }\n        else if (loop) {\n            options.repeatType = \"loop\";\n        }\n        else if (flip) {\n            options.repeatType = \"mirror\";\n        }\n        options.repeat = loop || yoyo || flip || transition.repeat;\n    }\n    /**\n     * TODO: Popmotion 9 has the ability to automatically detect whether to use\n     * a keyframes or spring animation, but does so by detecting velocity and other spring options.\n     * It'd be good to introduce a similar thing here.\n     */\n    if (transition.type !== \"spring\")\n        options.type = \"keyframes\";\n    return options;\n}\n/**\n * Get the delay for a value by checking Transition with decreasing specificity.\n */\nfunction getDelayFromTransition(transition, key) {\n    var _a, _b;\n    const valueTransition = getValueTransition(transition, key) || {};\n    return (_b = (_a = valueTransition.delay) !== null && _a !== void 0 ? _a : transition.delay) !== null && _b !== void 0 ? _b : 0;\n}\nfunction hydrateKeyframes(options) {\n    if (Array.isArray(options.to) && options.to[0] === null) {\n        options.to = [...options.to];\n        options.to[0] = options.from;\n    }\n    return options;\n}\nfunction getPopmotionAnimationOptions(transition, options, key) {\n    if (Array.isArray(options.to) && transition.duration === undefined) {\n        transition.duration = 0.8;\n    }\n    hydrateKeyframes(options);\n    /**\n     * Get a default transition if none is determined to be defined.\n     */\n    if (!isTransitionDefined(transition)) {\n        transition = {\n            ...transition,\n            ...getDefaultTransition(key, options.to),\n        };\n    }\n    return {\n        ...options,\n        ...convertTransitionToAnimationOptions(transition),\n    };\n}\n/**\n *\n */\nfunction getAnimation(key, value, target, transition, onComplete) {\n    const valueTransition = getValueTransition(transition, key) || {};\n    let origin = valueTransition.from !== undefined ? valueTransition.from : value.get();\n    const isTargetAnimatable = isAnimatable(key, target);\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(key, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    const isOriginAnimatable = isAnimatable(key, origin);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${key} from \"${origin}\" to \"${target}\". ${origin} is not an animatable value - to enable this animation set ${origin} to a value animatable to ${target} via the \\`style\\` property.`);\n    function start() {\n        const options = {\n            from: origin,\n            to: target,\n            velocity: value.getVelocity(),\n            onComplete,\n            onUpdate: (v) => value.set(v),\n        };\n        return valueTransition.type === \"inertia\" ||\n            valueTransition.type === \"decay\"\n            ? inertia({ ...options, ...valueTransition })\n            : animate({\n                ...getPopmotionAnimationOptions(valueTransition, options, key),\n                onUpdate: (v) => {\n                    options.onUpdate(v);\n                    valueTransition.onUpdate && valueTransition.onUpdate(v);\n                },\n                onComplete: () => {\n                    options.onComplete();\n                    valueTransition.onComplete && valueTransition.onComplete();\n                },\n            });\n    }\n    function set() {\n        const finalTarget = resolveFinalValueInKeyframes(target);\n        value.set(finalTarget);\n        onComplete();\n        valueTransition.onUpdate && valueTransition.onUpdate(finalTarget);\n        valueTransition.onComplete && valueTransition.onComplete();\n        return { stop: () => { } };\n    }\n    return !isOriginAnimatable ||\n        !isTargetAnimatable ||\n        valueTransition.type === false\n        ? set\n        : start;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n/**\n * Start animation on a MotionValue. This function is an interface between\n * Framer Motion and Popmotion\n */\nfunction startAnimation(key, value, target, transition = {}) {\n    if (instantAnimationState.current) {\n        transition = { type: false };\n    }\n    return value.start((onComplete) => {\n        let controls;\n        const animation = getAnimation(key, value, target, transition, onComplete);\n        const delayBy = getDelayFromTransition(transition, key);\n        const start = () => (controls = animation());\n        let cancelDelay;\n        if (delayBy) {\n            cancelDelay = delay(start, secondsToMilliseconds(delayBy));\n        }\n        else {\n            start();\n        }\n        return () => {\n            cancelDelay && cancelDelay();\n            controls && controls.stop();\n        };\n    });\n}\n\nexport { convertTransitionToAnimationOptions, getDelayFromTransition, getPopmotionAnimationOptions, getValueTransition, getZeroUnit, hydrateKeyframes, isTransitionDefined, isZero, startAnimation };\n","import { animate } from './index.mjs';\nimport { getFrameData } from 'framesync';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nfunction inertia({ from = 0, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function boundaryNearest(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        currentAnimation = animate({\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                var _a;\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n                (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(from)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({ from, velocity, to: boundaryNearest(from) });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + from;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = boundaryNearest(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, getFrameData().delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ from: v, to: boundary, velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            from,\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import sync, { getFrameData } from 'framesync';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"7.6.18\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Functions to notify when the `MotionValue` updates.\n         *\n         * @internal\n         */\n        this.updateSubscribers = new SubscriptionManager();\n        /**\n         * Functions to notify when the velocity updates.\n         *\n         * @internal\n         */\n        this.velocityUpdateSubscribers = new SubscriptionManager();\n        /**\n         * Functions to notify when the `MotionValue` updates and `render` is set to `true`.\n         *\n         * @internal\n         */\n        this.renderSubscribers = new SubscriptionManager();\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = getFrameData();\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current) {\n                this.updateSubscribers.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.velocityUpdateSubscribers.getSize()) {\n                this.velocityUpdateSubscribers.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render) {\n                this.renderSubscribers.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                this.velocityUpdateSubscribers.notify(this.getVelocity());\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.onChange(updateOpacity)\n     *     const unsubscribeY = y.onChange(updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @privateRemarks\n     *\n     * We could look into a `useOnChange` hook if the above lifecycle management proves confusing.\n     *\n     * ```jsx\n     * useOnChange(x, () => {})\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @public\n     */\n    onChange(subscription) {\n        return this.updateSubscribers.add(subscription);\n    }\n    clearListeners() {\n        this.updateSubscribers.clear();\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` requests a render.\n     *\n     * @param subscriber - A function that's provided the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @internal\n     */\n    onRenderRequest(subscription) {\n        // Render immediately\n        subscription(this.get());\n        return this.renderSubscribers.add(subscription);\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect) {\n        this.passiveEffect = passiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(animation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.stopAnimation = animation(resolve);\n        }).then(() => this.clearAnimation());\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.stopAnimation)\n            this.stopAnimation();\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.stopAnimation;\n    }\n    clearAnimation() {\n        this.stopAnimation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.updateSubscribers.clear();\n        this.renderSubscribers.clear();\n        this.stop();\n    }\n}\nfunction motionValue(init) {\n    return new MotionValue(init);\n}\n\nexport { MotionValue, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number, px, percent, degrees, vw, vh } from 'style-value-types';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color, complex } from 'style-value-types';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { complex } from 'style-value-types';\nimport { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        var _a;\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => {\n            setVariants(child, variantLabels);\n        });\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    var _a;\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        origin[key] =\n            transitionOrigin !== undefined\n                ? transitionOrigin\n                : (_a = visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.get();\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { startAnimation } from '../../animation/utils/transitions.mjs';\nimport { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = ((_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.size)\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type && ((_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.getState()[type]);\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        let valueTransition = { delay, ...transition };\n        /**\n         * Make animation instant if this is a transform prop and we should reduce motion.\n         */\n        if (visualElement.shouldReduceMotion && transformProps.has(key)) {\n            valueTransition = {\n                ...valueTransition,\n                type: false,\n                delay: 0,\n            };\n        }\n        let animation = startAnimation(key, value, valueTarget, valueTransition);\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { AnimationType } from './types.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\nconst variantPriorityOrder = [\n    AnimationType.Animate,\n    AnimationType.InView,\n    AnimationType.Focus,\n    AnimationType.Hover,\n    AnimationType.Tap,\n    AnimationType.Drag,\n    AnimationType.Exit,\n];\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        var _a;\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = (_a = props[type]) !== null && _a !== void 0 ? _a : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        [AnimationType.Animate]: createTypeState(true),\n        [AnimationType.InView]: createTypeState(),\n        [AnimationType.Hover]: createTypeState(),\n        [AnimationType.Tap]: createTypeState(),\n        [AnimationType.Drag]: createTypeState(),\n        [AnimationType.Focus]: createTypeState(),\n        [AnimationType.Exit]: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState, variantPriorityOrder };\n","import { useEffect, useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { usePresence } from '../../components/AnimatePresence/use-presence.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { createAnimationState } from '../../render/utils/animation-state.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst animations = {\n    animation: makeRenderlessComponent(({ visualElement, animate }) => {\n        /**\n         * We dynamically generate the AnimationState manager as it contains a reference\n         * to the underlying animation library. We only want to load that if we load this,\n         * so people can optionally code split it out using the `m` component.\n         */\n        visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n        /**\n         * Subscribe any provided AnimationControls to the component's VisualElement\n         */\n        if (isAnimationControls(animate)) {\n            useEffect(() => animate.subscribe(visualElement), [animate]);\n        }\n    }),\n    exit: makeRenderlessComponent((props) => {\n        const { custom, visualElement } = props;\n        const [isPresent, safeToRemove] = usePresence();\n        const presenceContext = useContext(PresenceContext);\n        useEffect(() => {\n            visualElement.isPresent = isPresent;\n            const animation = visualElement.animationState &&\n                visualElement.animationState.setActive(AnimationType.Exit, !isPresent, {\n                    custom: (presenceContext && presenceContext.custom) ||\n                        custom,\n                });\n            if (animation && !isPresent) {\n                animation.then(safeToRemove);\n            }\n        }, [isPresent]);\n    }),\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { isMouseEvent, isTouchEvent } from './utils/event-type.mjs';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport sync, { getFrameData, cancelSync } from 'framesync';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { distance2D } from '../utils/distance.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = getFrameData();\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Because Safari doesn't trigger mouseup events when it's above a `<select>`\n            if (isMouseEvent(event) && event.buttons === 0) {\n                this.handlePointerUp(event, info);\n                return;\n            }\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (isTouchEvent(event) && event.touches.length > 1)\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = getFrameData();\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin === null || origin === void 0 ? void 0 : origin.originX);\n    calcAxisDelta(delta.y, source.y, target.y, origin === null || origin === void 0 ? void 0 : origin.originY);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    var _a;\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : (_a = dragElastic[label]) !== null && _a !== void 0 ? _a : 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    var _a, _b;\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        if (((_b = (_a = node.instance) === null || _a === void 0 ? void 0 : _a.style) === null || _b === void 0 ? void 0 : _b.display) === \"contents\")\n            continue;\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from 'hey-listen';\nimport { PanSession } from '../PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/use-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { startAnimation } from '../../animation/utils/transitions.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\nimport { percent } from 'style-value-types';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: AnyPointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        if (this.visualElement.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                var _a, _b;\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const measuredAxis = (_b = (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout) === null || _b === void 0 ? void 0 : _b.layoutBox[axis];\n                    if (measuredAxis) {\n                        const length = calcLength(measuredAxis);\n                        current = length * (parseFloat(current) / 100);\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(event, info);\n            (_a = this.visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Drag, true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock === null || onDirectionLock === void 0 ? void 0 : onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(event, info);\n    }\n    cancel() {\n        var _a, _b;\n        this.isDragging = false;\n        if (this.visualElement.projection) {\n            this.visualElement.projection.isAnimationBlocked = false;\n        }\n        (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(AnimationType.Drag, false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            var _a;\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (_a = constraints === null || constraints === void 0 ? void 0 : constraints[axis]) !== null && _a !== void 0 ? _a : {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return startAnimation(axis, axisValue, 0, transition);\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        var _a, _b;\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const externalMotionValue = this.visualElement.getProps()[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (_b = (_a = this.visualElement.getProps().initial) === null || _a === void 0 ? void 0 : _a[axis]) !== null && _b !== void 0 ? _b : 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener === null || stopLayoutUpdateListener === void 0 ? void 0 : stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { useDrag } from '../../gestures/drag/use-drag.mjs';\nimport { usePanGesture } from '../../gestures/use-pan-gesture.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst drag = {\n    pan: makeRenderlessComponent(usePanGesture),\n    drag: makeRenderlessComponent(useDrag),\n};\n\nexport { drag };\n","import { useRef, useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { PanSession } from './PanSession.mjs';\n\n/**\n *\n * @param handlers -\n * @param ref -\n *\n * @privateRemarks\n * Currently this sets new pan gesture functions every render. The memo route has been explored\n * in the past but ultimately we're still creating new functions every render. An optimisation\n * to explore is creating the pan gestures and loading them into a `ref`.\n *\n * @internal\n */\nfunction usePanGesture({ onPan, onPanStart, onPanEnd, onPanSessionStart, visualElement, }) {\n    const hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\n    const panSession = useRef(null);\n    const { transformPagePoint } = useContext(MotionConfigContext);\n    const handlers = {\n        onSessionStart: onPanSessionStart,\n        onStart: onPanStart,\n        onMove: onPan,\n        onEnd: (event, info) => {\n            panSession.current = null;\n            onPanEnd && onPanEnd(event, info);\n        },\n    };\n    useEffect(() => {\n        if (panSession.current !== null) {\n            panSession.current.updateHandlers(handlers);\n        }\n    });\n    function onPointerDown(event) {\n        panSession.current = new PanSession(event, handlers, {\n            transformPagePoint,\n        });\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPanEvents && onPointerDown);\n    useUnmountEffect(() => panSession.current && panSession.current.end());\n}\n\nexport { usePanGesture };\n","import { useEffect } from 'react';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\n\n/**\n * A hook that allows an element to be dragged.\n *\n * @internal\n */\nfunction useDrag(props) {\n    const { dragControls: groupDragControls, visualElement } = props;\n    const dragControls = useConstant(() => new VisualElementDragControls(visualElement));\n    // If we've been provided a DragControls for manual control over the drag gesture,\n    // subscribe this component to it on mount.\n    useEffect(() => groupDragControls && groupDragControls.subscribe(dragControls), [dragControls, groupDragControls]);\n    // Apply the event listeners to the element\n    useEffect(() => dragControls.addListeners(), [dragControls]);\n}\n\nexport { useDrag };\n","import { invariant } from 'hey-listen';\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { px, number } from 'style-value-types';\nimport { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from 'hey-listen';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst setAndResetVelocity = (value, to) => {\n    // Looks odd but setting it twice doesn't render, it'll just\n    // set both prev and current to the latest value\n    value.set(to, false);\n    value.set(to);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        setAndResetVelocity(value, origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                setAndResetVelocity(value, to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { BoundingBoxDimension, positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import sync, { cancelSync } from 'framesync';\nimport { invariant } from 'hey-listen';\nimport { createElement } from 'react';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { env } from '../utils/process.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { variantPriorityOrder } from './utils/animation-state.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"Unmount\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Tracks whether this VisualElement's React component is currently present\n         * within the defined React tree.\n         */\n        this.isPresent = true;\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props) {\n        return {};\n    }\n    mount(instance) {\n        var _a;\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = (_a = this.parent) === null || _a === void 0 ? void 0 : _a.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (this.parent)\n            this.parent.children.add(this);\n        this.setProps(this.props);\n    }\n    unmount() {\n        var _a, _b, _c;\n        (_a = this.projection) === null || _a === void 0 ? void 0 : _a.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        (_b = this.removeFromVariantTree) === null || _b === void 0 ? void 0 : _b.call(this);\n        (_c = this.parent) === null || _c === void 0 ? void 0 : _c.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.onChange((latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.onRenderRequest(this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type)\n            return 0;\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures(renderedProps, isStrict, preloadedFeatures, projectionId, ProjectionNodeConstructor, initialLayoutGroupConfig) {\n        const features = [];\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (env !== \"production\" && preloadedFeatures && isStrict) {\n            invariant(false, \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\");\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Component } = featureDefinitions[name];\n            /**\n             * It might be possible in the future to use this moment to\n             * dynamically request functionality. In initial tests this\n             * was producing a lot of duplication amongst bundles.\n             */\n            if (isEnabled(renderedProps) && Component) {\n                features.push(createElement(Component, {\n                    key: name,\n                    ...renderedProps,\n                    visualElement: this,\n                }));\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n            });\n        }\n        return features;\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    setProps(props) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.props = props;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props), this.prevMotionValues);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        var _a;\n        return (_a = this.props.variants) === null || _a === void 0 ? void 0 : _a[name];\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        var _a;\n        return this.isVariantNode ? this : (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getClosestVariantNode();\n    }\n    getVariantContext(startAtParent = false) {\n        var _a, _b;\n        if (startAtParent)\n            return (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getVariantContext();\n        if (!this.isControllingVariants) {\n            const context = ((_b = this.parent) === null || _b === void 0 ? void 0 : _b.getVariantContext()) || {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        var _a;\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (this.hasValue(key))\n            this.removeValue(key);\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n        this.bindToMotionValue(key, value);\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        var _a;\n        this.values.delete(key);\n        (_a = this.valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\n        this.valueSubscriptions.delete(key);\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    /**\n     * Get a motion value for this key. If called with a default\n     * value, we'll create one if none exists.\n     */\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue);\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        var _a;\n        (_a = this.events[eventName]) === null || _a === void 0 ? void 0 : _a.notify(...args);\n    }\n}\nconst variantProps = [\"initial\", ...variantPriorityOrder];\nconst numVariantProps = variantProps.length;\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"7.6.18\", `Attempting to mix Framer Motion versions ${nextValue.version} with 7.6.18 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        var _a;\n        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariable(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props) {\n        return scrapeMotionValuesFromProps(props);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        var _a;\n        if (transformProps.has(key)) {\n            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props) {\n        return scrapeMotionValuesFromProps(props);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { px } from 'style-value-types';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { complex } from 'style-value-types';\nimport { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import sync from 'framesync';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    var _a;\n                    if (!((_a = projection.getStack()) === null || _a === void 0 ? void 0 : _a.members.length)) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext === null || promoteContext === void 0 ? void 0 : promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { MeasureLayout } from './MeasureLayout.mjs';\n\nconst layoutFeatures = {\n    measureLayout: MeasureLayout,\n};\n\nexport { layoutFeatures };\n","import { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { startAnimation } from './utils/transitions.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    startAnimation(\"\", value, to, transition);\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { percent, px } from 'style-value-types';\nimport { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    var _a, _b, _c, _d;\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // (follow?.opacity as number) ?? 0,\n        // TODO Reinstate this if only child\n        (_a = lead.opacity) !== null && _a !== void 0 ? _a : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix((_b = follow.opacity) !== null && _b !== void 0 ? _b : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix((_c = follow.opacity) !== null && _c !== void 0 ? _c : 1, (_d = lead.opacity) !== null && _d !== void 0 ? _d : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    var _a;\n    return (_a = values[radiusName]) !== null && _a !== void 0 ? _a : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { percent } from 'style-value-types';\nimport { mix } from '../../utils/mix.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox === null || originBox === void 0 ? void 0 : originBox.x, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.x);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox === null || originBox === void 0 ? void 0 : originBox.y, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.y);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        var _a;\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if ((_a = node.root) === null || _a === void 0 ? void 0 : _a.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            var _a, _b, _c, _d, _e;\n            (_b = (_a = node.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n            (_e = (_c = node.resumingFrom) === null || _c === void 0 ? void 0 : (_d = _c.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d);\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import sync, { cancelSync, flushSync } from 'framesync';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            this.isTransformDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this or any\n             * child might need recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager === null || subscriptionManager === void 0 ? void 0 : subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            var _a;\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            (_a = this.parent) === null || _a === void 0 ? void 0 : _a.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    var _a, _b, _c, _d, _e;\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = (_b = (_a = this.options.transition) !== null && _a !== void 0 ? _a : visualElement.getDefaultTransition()) !== null && _b !== void 0 ? _b : defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (((_c = this.resumeFrom) === null || _c === void 0 ? void 0 : _c.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        this.isLead() && ((_e = (_d = this.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d));\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            var _a, _b;\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.remove(this);\n            (_b = this.parent) === null || _b === void 0 ? void 0 : _b.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            var _a;\n            return (this.isAnimationBlocked ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            var _a;\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            (_a = this.nodes) === null || _a === void 0 ? void 0 : _a.forEach(resetRotation);\n            this.animationId++;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            var _a, _b, _c;\n            if (this.root.isUpdateBlocked()) {\n                (_b = (_a = this.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = (_c = this.options.visualElement) === null || _c === void 0 ? void 0 : _c.getProps().transformTemplate;\n            this.prevTransformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            var _a;\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout === null || prevLayout === void 0 ? void 0 : prevLayout.layoutBox);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            var _a;\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            const transformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            var _a;\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, (_a = node.snapshot) === null || _a === void 0 ? void 0 : _a.layoutBox, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        /**\n         *\n         */\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.isProjectionDirty = true;\n            this.root.scheduleUpdateProjection();\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            if (!this.isProjectionDirty && !this.attemptToResolveRelativeTarget)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.target)) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues))\n                return undefined;\n            if ((this.parent.relativeTarget || this.parent.targetDelta) &&\n                this.parent.layout) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        calcProjection() {\n            var _a;\n            const { isProjectionDirty, isTransformDirty } = this;\n            this.isProjectionDirty = this.isTransformDirty = false;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            if (isProjectionDirty)\n                canSkip = false;\n            if (isShared && isTransformDirty)\n                canSkip = false;\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean(((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a, _b, _c;\n            (_b = (_a = this.options).scheduleRender) === null || _b === void 0 ? void 0 : _b.call(_a);\n            notifyAll && ((_c = this.getStack()) === null || _c === void 0 ? void 0 : _c.scheduleRender());\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            var _a, _b;\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.latestValues) || {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            this.relativeTarget = this.relativeTargetOrigin = undefined;\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const isSharedLayoutAnimation = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.source) !== ((_a = this.layout) === null || _a === void 0 ? void 0 : _a.source);\n            const isOnlyMember = (((_b = this.getStack()) === null || _b === void 0 ? void 0 : _b.members.length) || 0) <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            this.mixTargetDelta = (latest) => {\n                var _a;\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.layout)) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(0);\n        }\n        startAnimation(options) {\n            var _a, _b;\n            this.notifyListeners(\"animationStart\");\n            (_a = this.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop();\n            if (this.resumingFrom) {\n                (_b = this.resumingFrom.currentAnimation) === null || _b === void 0 ? void 0 : _b.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        var _a;\n                        this.mixTargetDelta(latest);\n                        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, latest);\n                    },\n                    onComplete: () => {\n                        var _a;\n                        (_a = options.onComplete) === null || _a === void 0 ? void 0 : _a.call(options);\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            var _a;\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            var _a;\n            if (this.currentAnimation) {\n                (_a = this.mixTargetDelta) === null || _a === void 0 ? void 0 : _a.call(this, animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            var _a, _b, _c;\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            node.promote({\n                transition: (_a = node.options.initialPromotionConfig) === null || _a === void 0 ? void 0 : _a.transition,\n                preserveFollowOpacity: (_c = (_b = node.options.initialPromotionConfig) === null || _b === void 0 ? void 0 : _b.shouldPreserveFollowOpacity) === null || _c === void 0 ? void 0 : _c.call(_b, node),\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement === null || visualElement === void 0 ? void 0 : visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b, _c;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_c = (_b = valuesToRender.opacity) !== null && _b !== void 0 ? _b : this.latestValues.opacity) !== null && _c !== void 0 ? _c : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                const corrected = correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a, _b, _c;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        (_c = (_b = node.options).onExitComplete) === null || _c === void 0 ? void 0 : _c.call(_b);\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Propagate isProjectionDirty. Nodes are ordered by depth, so if the parent here\n     * is dirty we can simply pass this forward.\n     */\n    node.isProjectionDirty || (node.isProjectionDirty = Boolean(node.parent && node.parent.isProjectionDirty));\n    /**\n     * Propagate isTransformDirty.\n     */\n    node.isTransformDirty || (node.isTransformDirty = Boolean(node.parent && node.parent.isTransformDirty));\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layoutFeatures } from '../../motion/features/layout/index.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst featureBundle = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layoutFeatures,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, featureBundle, createDomVisualElement, HTMLProjectionNode));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, featureBundle, createDomVisualElement, HTMLProjectionNode));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement, projectionNodeConstructor) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        projectionNodeConstructor,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["isBrowser","window","query","defaultState","_a","useState","undefined","matchMedia","matches","getInitialState","state","setState","useEffect","mounted","mql","onChange","addListener","removeListener","_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties","value","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","document","useIsomorphicLayoutEffect","useLayoutEffect","LazyContext","strict","useVisualElement","Component","visualState","props","createVisualElement","parent","useContext","visualElement","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","presenceId","id","blockInitialAnimation","initial","render","animationState","animateChanges","notify","isRefObject","ref","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantProps","isControllingVariants","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","context","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","join","createDefinition","propNames","isEnabled","featureDefinitions","measureLayout","animation","exit","drag","focus","hover","tap","pan","inView","useConstant","init","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","LayoutGroupContext","VisualElementHandler","this","setProps","children","React__default","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","projectionNodeConstructor","useRender","useVisualState","features","key","loadFeatures","ForwardRefComponent","forwardRef","externalRef","configAndProps","layoutId","useLayoutId","projectionId","lazyStrictMode","initialLayoutGroupConfig","React","Provider","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","layout","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","sortTransformProps","a","b","isCSSVariable","getValueAsType","type","transform","clamp","min","max","Math","sanitize","Number","toFixed","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","length","parse","parseFloat","degrees","percent","px","vh","vw","progressPercentage","assign","number","alpha","scale","default","int","round","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","latestValues","options","transformTemplate","style","vars","transformKeys","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","push","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","sort","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","filterProps","isDom","forwardMotionProps","filteredProps","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","pathLength","pathSpacing","pathOffset","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","useSVGProps","visualProps","rawStyles","createUseRender","elementProps","createElement","camelToDash","str","replace","toLowerCase","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","newValues","scrapeMotionValuesFromProps$1","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","values","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","AnimationType","svgMotionConfig","getBBox","getBoundingClientRect","e","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","useDomEvent","isMouseEvent","event","PointerEvent","pointerType","MouseEvent","isTouchEvent","touches","filterPrimaryPointer","eventHandler","button","defaultPagePoint","pageX","pageY","pointFromTouch","pointType","primaryTouch","changedTouches","point","pointFromMouse","extractEventInfo","wrapHandler","shouldFilterPrimaryPointer","listener","mouseEventNames","pointerdown","pointermove","pointerup","pointercancel","pointerover","pointerout","pointerenter","pointerleave","touchEventNames","getPointerEventName","onpointerdown","ontouchstart","onmousedown","addPointerEvent","usePointerEvent","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","createHoverEvent","isActive","callback","info","setActive","Hover","isNodeOrChild","child","parentElement","useUnmountEffect","combineFunctions","pipe","transformers","reduce","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","delete","unobserve","thresholdNames","all","useIntersectionObserver","shouldObserve","rootMargin","amount","once","threshold","isIntersecting","isInView","hasEnteredView","InView","getProps","onViewportEnter","onViewportLeave","useMissingIntersectionObserver","fallback","requestAnimationFrame","makeRenderlessComponent","hook","gestureAnimations","whileInView","viewport","onTap","onTapStart","onTapCancel","whileTap","hasPressListeners","isPressing","cancelPointerEndListeners","eventOptions","onPointerDown","removePointerEndListener","checkPointerEnd","Tap","onPointerUp","onPointerCancel","whileFocus","Focus","onHoverStart","onHoverEnd","whileHover","usePresence","isPresent","onExitComplete","register","useId","shallowCompare","next","prev","prevLength","i","secondsToMilliseconds","seconds","noop","any","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","easing","reverseEasing","easeIn","easeOut","easeInOut","circIn","sin","acos","circOut","circInOut","createBackIn","power","backIn","backOut","backInOut","anticipate","backEasing","pow","createAnticipate","easingLookup","linear","easingDefinitionToFunction","isColorString","testProp","splitColor","aName","bName","cName","match","c","clampRgbUnit","rgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substr","parseInt","hsla","hue","saturation","lightness","color","colorToken","numberToken","analyse","numColors","colors","map","numbers","tokenised","createTransformer","numValues","output","convertNumbersToZero","complex","_b","_c","_d","isNaN","getAnimatableNone","parsed","transformer","isAnimatable","underDampedSpring","stiffness","damping","restSpeed","criticallyDampedSpring","to","sqrt","linearTween","ease","duration","keyframes","defaultTransitions","backgroundColor","maxDefaults","applyDefaultFilter","defaultValue","functionRegex","filter","functions","defaultValueTypes","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","instantAnimationState","defaultTimestep","getCurrentTime","performance","now","Date","onNextFrame","setTimeout","useDefaultElapsed","runNextFrame","isProcessing","frame","delta","timestamp","stepsOrder","steps","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","addToCurrentFrame","buffer","add","cancel","index","splice","process","frameData","createRenderStep","sync","keepAlive","immediate","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","getFrameData","delay","timeout","checkElapsed","elapsed","read","from","progress","hueToRgb","q","mixLinearColor","fromExpo","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","numNumbers","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","defaultEasing","safeMin","findSpring","envelope","derivative","bounce","velocity","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","f","initialGuess","result","approximateRoot","durationKeys","physicsKeys","isSpringType","spring","restDelta","done","springOptions","isResolvedFromDuration","derived","getSpringOptions","resolveSpring","zero","resolveVelocity","createSpring","initialVelocity","initialDelta","undampedAngularFreq","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","flipTarget","needsInterpolation","_t","types","decay","timeConstant","modifyTarget","amplitude","ideal","times","o","convertOffsetToTimes","_value","defaultOffset","createInterpolator","loopElapsed","framesync","update","passTimestamp","stop","driverControls","latest","interpolateFromNumber","autoplay","driver","repeat","repeatMax","repeatType","repeatDelay","onPlay","onStop","onComplete","onRepeat","onUpdate","repeatCount","computedDuration","isComplete","isForwardPlayback","animator","reverseElapsed","hasRepeatDelayElapsed","velocityPerSecond","frameDuration","convertTransitionToAnimationOptions","yoyo","flip","loop","isEasingArray","getDelayFromTransition","getValueTransition","getPopmotionAnimationOptions","hydrateKeyframes","when","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","valueKey","transitionFactory","getDefaultTransition","getAnimation","valueTransition","isTargetAnimatable","isZero","getZeroUnit","isOriginAnimatable","currentAnimation","bounceStiffness","bounceDamping","isOutOfBounds","boundaryNearest","startAnimation","startSpring","boundary","heading","inertia","finalTarget","potentialUnitType","controls","cancelDelay","delayBy","isZeroValueString","addUniqueItem","arr","item","removeItem","SubscriptionManager","subscriptions","numSubscriptions","MotionValue","version","timeDelta","lastUpdated","updateSubscribers","velocityUpdateSubscribers","renderSubscribers","canTrackVelocity","updateAndNotify","scheduleVelocityCheck","getSize","velocityCheck","hasAnimated","subscription","clear","passiveEffect","Promise","resolve","stopAnimation","then","clearAnimation","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","findValueType","resolveVariant","getCurrent","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","isWillChangeMotionValue","animateVariant","variant","transitionOverride","animateTarget","getChildAnimations","variantChildren","forwardDelay","animateChildren","first","last","willChange","animations","animationTypeState","getState","shouldBlockAnimation","shouldReduceMotion","remove","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","sortNodePosition","protectedKeys","needsAnimating","shouldBlock","variantPriorityOrder","Animate","Drag","Exit","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","createState","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","Infinity","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","subscribe","safeToRemove","distance2D","xDelta","yDelta","PanSession","handlers","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","onStart","onMove","handlePointerMove","transformPoint","buttons","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","panSession","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","direction","lockThreshold","onPan","onPanStart","onPanEnd","onPanSessionStart","hasPanEvents","updateHandlers","groupDragControls","dragControls","addListeners","cssVariableRegex","parseCSSVariable","exec","getVariableValue","depth","token","getComputedStyle","getPropertyValue","BoundingBoxDimension","positionalKeys","isPositionalKey","setAndResetVelocity","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","display","setStaticValue","targetBbox","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","scrollY","pageYOffset","convertedTarget","scrollTo","checkAndConvertChangedValueTypes","parseDomVariant","Element","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","featureNames","numFeatures","propEventHandlers","VisualElement","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","scheduleRender","baseTarget","initialValues","initialMotionValues","_props","removeFromVariantTree","addVariantChild","bindToMotionValue","motionMediaQuery","setReducedMotionPreferences","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","isTransformDirty","removeOnRenderRequest","onRenderRequest","other","sortInstanceNodePosition","renderedProps","isStrict","ProjectionNodeConstructor","layoutScroll","setOptions","alwaysMeasureLayout","animationType","initialPromotionConfig","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","on","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","getClosestVariantNode","startAtParent","numVariantProps","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","args","DOMVisualElement","compareDocumentPosition","isMounted","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement","getAttribute","createDomVisualElement","pixelsToPercent","pixels","correctBorderRadius","correct","node","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","correctors","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","prevProps","layoutDependency","willUpdate","promote","relegate","getStack","members","isLead","promoteContext","scheduleCheckAfterUnmount","deregister","applyTo","boxShadow","layoutFeatures","isAnimating","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","prevLead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","_e","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","animationId","isTreeAnimating","isProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","subscriptionManager","SVGElement","tagName","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","preRender","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","measure","prevLayout","layoutCorrected","phase","needsMeasurement","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundBox","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","getLead","attemptToResolveRelativeTarget","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","applyTransform","isShared","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","stack","hasRotate","resetValues","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","corrected","num","hasListeners","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","mixAxis","searchNode","querySelector","roundAxis","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","featureBundle","motion","baseConfig","createDomMotionConfig"],"sourceRoot":""}